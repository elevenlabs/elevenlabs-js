// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { DocxExportOptions } from "./DocxExportOptions";
import { HtmlExportOptions } from "./HtmlExportOptions";
import { PdfExportOptions } from "./PdfExportOptions";
import { SegmentedJsonExportOptions } from "./SegmentedJsonExportOptions";
import { SrtExportOptions } from "./SrtExportOptions";
import { TxtExportOptions } from "./TxtExportOptions";

export const ExportOptions: core.serialization.Schema<serializers.ExportOptions.Raw, ElevenLabs.ExportOptions> =
    core.serialization
        .union("format", {
            docx: DocxExportOptions,
            html: HtmlExportOptions,
            pdf: PdfExportOptions,
            segmented_json: SegmentedJsonExportOptions,
            srt: SrtExportOptions,
            txt: TxtExportOptions,
        })
        .transform<ElevenLabs.ExportOptions>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace ExportOptions {
    export type Raw =
        | ExportOptions.Docx
        | ExportOptions.Html
        | ExportOptions.Pdf
        | ExportOptions.SegmentedJson
        | ExportOptions.Srt
        | ExportOptions.Txt;

    export interface Docx extends DocxExportOptions.Raw {
        format: "docx";
    }

    export interface Html extends HtmlExportOptions.Raw {
        format: "html";
    }

    export interface Pdf extends PdfExportOptions.Raw {
        format: "pdf";
    }

    export interface SegmentedJson extends SegmentedJsonExportOptions.Raw {
        format: "segmented_json";
    }

    export interface Srt extends SrtExportOptions.Raw {
        format: "srt";
    }

    export interface Txt extends TxtExportOptions.Raw {
        format: "txt";
    }
}
