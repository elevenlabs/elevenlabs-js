/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { EmbedVariant } from "./EmbedVariant";
import { WidgetPlacement } from "./WidgetPlacement";
import { WidgetExpandable } from "./WidgetExpandable";
import { WidgetConfigResponseModelAvatar } from "./WidgetConfigResponseModelAvatar";
import { WidgetFeedbackMode } from "./WidgetFeedbackMode";
import { WidgetTextContents } from "./WidgetTextContents";
import { WidgetStyles } from "./WidgetStyles";
import { WidgetLanguagePresetResponse } from "./WidgetLanguagePresetResponse";

export const WidgetConfigResponse: core.serialization.ObjectSchema<
    serializers.WidgetConfigResponse.Raw,
    ElevenLabs.WidgetConfigResponse
> = core.serialization.object({
    variant: EmbedVariant.optional(),
    placement: WidgetPlacement.optional(),
    expandable: WidgetExpandable.optional(),
    avatar: WidgetConfigResponseModelAvatar.optional(),
    feedbackMode: core.serialization.property("feedback_mode", WidgetFeedbackMode.optional()),
    bgColor: core.serialization.property("bg_color", core.serialization.string().optional()),
    textColor: core.serialization.property("text_color", core.serialization.string().optional()),
    btnColor: core.serialization.property("btn_color", core.serialization.string().optional()),
    btnTextColor: core.serialization.property("btn_text_color", core.serialization.string().optional()),
    borderColor: core.serialization.property("border_color", core.serialization.string().optional()),
    focusColor: core.serialization.property("focus_color", core.serialization.string().optional()),
    borderRadius: core.serialization.property("border_radius", core.serialization.number().optional()),
    btnRadius: core.serialization.property("btn_radius", core.serialization.number().optional()),
    actionText: core.serialization.property("action_text", core.serialization.string().optional()),
    startCallText: core.serialization.property("start_call_text", core.serialization.string().optional()),
    endCallText: core.serialization.property("end_call_text", core.serialization.string().optional()),
    expandText: core.serialization.property("expand_text", core.serialization.string().optional()),
    listeningText: core.serialization.property("listening_text", core.serialization.string().optional()),
    speakingText: core.serialization.property("speaking_text", core.serialization.string().optional()),
    shareablePageText: core.serialization.property("shareable_page_text", core.serialization.string().optional()),
    shareablePageShowTerms: core.serialization.property(
        "shareable_page_show_terms",
        core.serialization.boolean().optional(),
    ),
    termsText: core.serialization.property("terms_text", core.serialization.string().optional()),
    termsHtml: core.serialization.property("terms_html", core.serialization.string().optional()),
    termsKey: core.serialization.property("terms_key", core.serialization.string().optional()),
    showAvatarWhenCollapsed: core.serialization.property(
        "show_avatar_when_collapsed",
        core.serialization.boolean().optional(),
    ),
    disableBanner: core.serialization.property("disable_banner", core.serialization.boolean().optional()),
    overrideLink: core.serialization.property("override_link", core.serialization.string().optional()),
    micMutingEnabled: core.serialization.property("mic_muting_enabled", core.serialization.boolean().optional()),
    transcriptEnabled: core.serialization.property("transcript_enabled", core.serialization.boolean().optional()),
    textInputEnabled: core.serialization.property("text_input_enabled", core.serialization.boolean().optional()),
    defaultExpanded: core.serialization.property("default_expanded", core.serialization.boolean().optional()),
    alwaysExpanded: core.serialization.property("always_expanded", core.serialization.boolean().optional()),
    textContents: core.serialization.property("text_contents", WidgetTextContents.optional()),
    styles: WidgetStyles.optional(),
    language: core.serialization.string(),
    supportedLanguageOverrides: core.serialization.property(
        "supported_language_overrides",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    languagePresets: core.serialization.property(
        "language_presets",
        core.serialization.record(core.serialization.string(), WidgetLanguagePresetResponse).optional(),
    ),
    textOnly: core.serialization.property("text_only", core.serialization.boolean().optional()),
    supportsTextOnly: core.serialization.property("supports_text_only", core.serialization.boolean().optional()),
    firstMessage: core.serialization.property("first_message", core.serialization.string().optional()),
});

export declare namespace WidgetConfigResponse {
    export interface Raw {
        variant?: EmbedVariant.Raw | null;
        placement?: WidgetPlacement.Raw | null;
        expandable?: WidgetExpandable.Raw | null;
        avatar?: WidgetConfigResponseModelAvatar.Raw | null;
        feedback_mode?: WidgetFeedbackMode.Raw | null;
        bg_color?: string | null;
        text_color?: string | null;
        btn_color?: string | null;
        btn_text_color?: string | null;
        border_color?: string | null;
        focus_color?: string | null;
        border_radius?: number | null;
        btn_radius?: number | null;
        action_text?: string | null;
        start_call_text?: string | null;
        end_call_text?: string | null;
        expand_text?: string | null;
        listening_text?: string | null;
        speaking_text?: string | null;
        shareable_page_text?: string | null;
        shareable_page_show_terms?: boolean | null;
        terms_text?: string | null;
        terms_html?: string | null;
        terms_key?: string | null;
        show_avatar_when_collapsed?: boolean | null;
        disable_banner?: boolean | null;
        override_link?: string | null;
        mic_muting_enabled?: boolean | null;
        transcript_enabled?: boolean | null;
        text_input_enabled?: boolean | null;
        default_expanded?: boolean | null;
        always_expanded?: boolean | null;
        text_contents?: WidgetTextContents.Raw | null;
        styles?: WidgetStyles.Raw | null;
        language: string;
        supported_language_overrides?: string[] | null;
        language_presets?: Record<string, WidgetLanguagePresetResponse.Raw> | null;
        text_only?: boolean | null;
        supports_text_only?: boolean | null;
        first_message?: string | null;
    }
}
