/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { WorkflowEdgeModelForwardCondition } from "./WorkflowEdgeModelForwardCondition";
import { WorkflowEdgeModelBackwardCondition } from "./WorkflowEdgeModelBackwardCondition";

export const WorkflowEdgeModel: core.serialization.ObjectSchema<
    serializers.WorkflowEdgeModel.Raw,
    ElevenLabs.WorkflowEdgeModel
> = core.serialization.object({
    source: core.serialization.string(),
    target: core.serialization.string(),
    forwardCondition: core.serialization.property("forward_condition", WorkflowEdgeModelForwardCondition.optional()),
    backwardCondition: core.serialization.property("backward_condition", WorkflowEdgeModelBackwardCondition.optional()),
});

export declare namespace WorkflowEdgeModel {
    export interface Raw {
        source: string;
        target: string;
        forward_condition?: WorkflowEdgeModelForwardCondition.Raw | null;
        backward_condition?: WorkflowEdgeModelBackwardCondition.Raw | null;
    }
}
