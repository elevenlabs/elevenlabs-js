// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";

export const ConversationHistoryTranscriptToolCallMcpDetails: core.serialization.ObjectSchema<
    serializers.ConversationHistoryTranscriptToolCallMcpDetails.Raw,
    ElevenLabs.ConversationHistoryTranscriptToolCallMcpDetails
> = core.serialization.object({
    mcpServerId: core.serialization.property("mcp_server_id", core.serialization.string()),
    mcpServerName: core.serialization.property("mcp_server_name", core.serialization.string()),
    integrationType: core.serialization.property("integration_type", core.serialization.string()),
    parameters: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    approvalPolicy: core.serialization.property("approval_policy", core.serialization.string()),
    requiresApproval: core.serialization.property("requires_approval", core.serialization.boolean().optional()),
    mcpToolName: core.serialization.property("mcp_tool_name", core.serialization.string().optional()),
    mcpToolDescription: core.serialization.property("mcp_tool_description", core.serialization.string().optional()),
});

export declare namespace ConversationHistoryTranscriptToolCallMcpDetails {
    export interface Raw {
        mcp_server_id: string;
        mcp_server_name: string;
        integration_type: string;
        parameters?: Record<string, string> | null;
        approval_policy: string;
        requires_approval?: boolean | null;
        mcp_tool_name?: string | null;
        mcp_tool_description?: string | null;
    }
}
