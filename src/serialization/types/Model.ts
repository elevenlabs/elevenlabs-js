// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { LanguageResponse } from "./LanguageResponse";
import { ModelRatesResponseModel } from "./ModelRatesResponseModel";

export const Model: core.serialization.ObjectSchema<serializers.Model.Raw, ElevenLabs.Model> =
    core.serialization.object({
        modelId: core.serialization.property("model_id", core.serialization.string()),
        name: core.serialization.string().optional(),
        canBeFinetuned: core.serialization.property("can_be_finetuned", core.serialization.boolean().optional()),
        canDoTextToSpeech: core.serialization.property(
            "can_do_text_to_speech",
            core.serialization.boolean().optional(),
        ),
        canDoVoiceConversion: core.serialization.property(
            "can_do_voice_conversion",
            core.serialization.boolean().optional(),
        ),
        canUseStyle: core.serialization.property("can_use_style", core.serialization.boolean().optional()),
        canUseSpeakerBoost: core.serialization.property(
            "can_use_speaker_boost",
            core.serialization.boolean().optional(),
        ),
        servesProVoices: core.serialization.property("serves_pro_voices", core.serialization.boolean().optional()),
        tokenCostFactor: core.serialization.property("token_cost_factor", core.serialization.number().optional()),
        description: core.serialization.string().optional(),
        requiresAlphaAccess: core.serialization.property(
            "requires_alpha_access",
            core.serialization.boolean().optional(),
        ),
        maxCharactersRequestFreeUser: core.serialization.property(
            "max_characters_request_free_user",
            core.serialization.number().optional(),
        ),
        maxCharactersRequestSubscribedUser: core.serialization.property(
            "max_characters_request_subscribed_user",
            core.serialization.number().optional(),
        ),
        maximumTextLengthPerRequest: core.serialization.property(
            "maximum_text_length_per_request",
            core.serialization.number().optional(),
        ),
        languages: core.serialization.list(LanguageResponse).optional(),
        modelRates: core.serialization.property("model_rates", ModelRatesResponseModel.optional()),
        concurrencyGroup: core.serialization.property("concurrency_group", core.serialization.string().optional()),
    });

export declare namespace Model {
    export interface Raw {
        model_id: string;
        name?: string | null;
        can_be_finetuned?: boolean | null;
        can_do_text_to_speech?: boolean | null;
        can_do_voice_conversion?: boolean | null;
        can_use_style?: boolean | null;
        can_use_speaker_boost?: boolean | null;
        serves_pro_voices?: boolean | null;
        token_cost_factor?: number | null;
        description?: string | null;
        requires_alpha_access?: boolean | null;
        max_characters_request_free_user?: number | null;
        max_characters_request_subscribed_user?: number | null;
        maximum_text_length_per_request?: number | null;
        languages?: LanguageResponse.Raw[] | null;
        model_rates?: ModelRatesResponseModel.Raw | null;
        concurrency_group?: string | null;
    }
}
