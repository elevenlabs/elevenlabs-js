/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { DynamicVariableAssignment } from "./DynamicVariableAssignment";
import { IntegrationType } from "./IntegrationType";
import { McpApprovalPolicy } from "./McpApprovalPolicy";

export const McpToolConfigInput: core.serialization.ObjectSchema<
    serializers.McpToolConfigInput.Raw,
    ElevenLabs.McpToolConfigInput
> = core.serialization.object({
    name: core.serialization.string(),
    description: core.serialization.string(),
    responseTimeoutSecs: core.serialization.property("response_timeout_secs", core.serialization.number().optional()),
    disableInterruptions: core.serialization.property("disable_interruptions", core.serialization.boolean().optional()),
    forcePreToolSpeech: core.serialization.property("force_pre_tool_speech", core.serialization.boolean().optional()),
    assignments: core.serialization.list(DynamicVariableAssignment).optional(),
    integrationType: core.serialization.property("integration_type", IntegrationType),
    parameters: core.serialization.lazyObject(() => serializers.ObjectJsonSchemaPropertyInput).optional(),
    approvalPolicy: core.serialization.property("approval_policy", McpApprovalPolicy.optional()),
    mcpToolName: core.serialization.property("mcp_tool_name", core.serialization.string()),
    mcpToolDescription: core.serialization.property("mcp_tool_description", core.serialization.string()),
    mcpServerId: core.serialization.property("mcp_server_id", core.serialization.string()),
    mcpServerName: core.serialization.property("mcp_server_name", core.serialization.string()),
    mcpInputSchema: core.serialization.property(
        "mcp_input_schema",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
});

export declare namespace McpToolConfigInput {
    export interface Raw {
        name: string;
        description: string;
        response_timeout_secs?: number | null;
        disable_interruptions?: boolean | null;
        force_pre_tool_speech?: boolean | null;
        assignments?: DynamicVariableAssignment.Raw[] | null;
        integration_type: IntegrationType.Raw;
        parameters?: serializers.ObjectJsonSchemaPropertyInput.Raw | null;
        approval_policy?: McpApprovalPolicy.Raw | null;
        mcp_tool_name: string;
        mcp_tool_description: string;
        mcp_server_id: string;
        mcp_server_name: string;
        mcp_input_schema?: Record<string, unknown> | null;
    }
}
