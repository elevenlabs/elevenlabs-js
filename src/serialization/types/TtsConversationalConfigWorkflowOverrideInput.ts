// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { TtsConversationalModel } from "./TtsConversationalModel";
import { SupportedVoice } from "./SupportedVoice";
import { TtsOutputFormat } from "./TtsOutputFormat";
import { TtsOptimizeStreamingLatency } from "./TtsOptimizeStreamingLatency";
import { PydanticPronunciationDictionaryVersionLocator } from "./PydanticPronunciationDictionaryVersionLocator";

export const TtsConversationalConfigWorkflowOverrideInput: core.serialization.ObjectSchema<
    serializers.TtsConversationalConfigWorkflowOverrideInput.Raw,
    ElevenLabs.TtsConversationalConfigWorkflowOverrideInput
> = core.serialization.object({
    modelId: core.serialization.property("model_id", TtsConversationalModel.optional()),
    voiceId: core.serialization.property("voice_id", core.serialization.string().optional()),
    supportedVoices: core.serialization.property(
        "supported_voices",
        core.serialization.list(SupportedVoice).optional(),
    ),
    agentOutputAudioFormat: core.serialization.property("agent_output_audio_format", TtsOutputFormat.optional()),
    optimizeStreamingLatency: core.serialization.property(
        "optimize_streaming_latency",
        TtsOptimizeStreamingLatency.optional(),
    ),
    stability: core.serialization.number().optional(),
    speed: core.serialization.number().optional(),
    similarityBoost: core.serialization.property("similarity_boost", core.serialization.number().optional()),
    pronunciationDictionaryLocators: core.serialization.property(
        "pronunciation_dictionary_locators",
        core.serialization.list(PydanticPronunciationDictionaryVersionLocator).optional(),
    ),
});

export declare namespace TtsConversationalConfigWorkflowOverrideInput {
    export interface Raw {
        model_id?: TtsConversationalModel.Raw | null;
        voice_id?: string | null;
        supported_voices?: SupportedVoice.Raw[] | null;
        agent_output_audio_format?: TtsOutputFormat.Raw | null;
        optimize_streaming_latency?: TtsOptimizeStreamingLatency.Raw | null;
        stability?: number | null;
        speed?: number | null;
        similarity_boost?: number | null;
        pronunciation_dictionary_locators?: PydanticPronunciationDictionaryVersionLocator.Raw[] | null;
    }
}
