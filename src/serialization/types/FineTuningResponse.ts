// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { FineTuningResponseModelStateValue } from "./FineTuningResponseModelStateValue";
import { VerificationAttemptResponse } from "./VerificationAttemptResponse";
import { ManualVerificationResponse } from "./ManualVerificationResponse";

export const FineTuningResponse: core.serialization.ObjectSchema<
    serializers.FineTuningResponse.Raw,
    ElevenLabs.FineTuningResponse
> = core.serialization.object({
    isAllowedToFineTune: core.serialization.property(
        "is_allowed_to_fine_tune",
        core.serialization.boolean().optional(),
    ),
    state: core.serialization.record(core.serialization.string(), FineTuningResponseModelStateValue).optional(),
    verificationFailures: core.serialization.property(
        "verification_failures",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    verificationAttemptsCount: core.serialization.property(
        "verification_attempts_count",
        core.serialization.number().optional(),
    ),
    manualVerificationRequested: core.serialization.property(
        "manual_verification_requested",
        core.serialization.boolean().optional(),
    ),
    language: core.serialization.string().optional(),
    progress: core.serialization.record(core.serialization.string(), core.serialization.number().optional()).optional(),
    message: core.serialization.record(core.serialization.string(), core.serialization.string().optional()).optional(),
    datasetDurationSeconds: core.serialization.property(
        "dataset_duration_seconds",
        core.serialization.number().optional(),
    ),
    verificationAttempts: core.serialization.property(
        "verification_attempts",
        core.serialization.list(VerificationAttemptResponse).optional(),
    ),
    sliceIds: core.serialization.property("slice_ids", core.serialization.list(core.serialization.string()).optional()),
    manualVerification: core.serialization.property("manual_verification", ManualVerificationResponse.optional()),
    maxVerificationAttempts: core.serialization.property(
        "max_verification_attempts",
        core.serialization.number().optional(),
    ),
    nextMaxVerificationAttemptsResetUnixMs: core.serialization.property(
        "next_max_verification_attempts_reset_unix_ms",
        core.serialization.number().optional(),
    ),
    finetuningState: core.serialization.property("finetuning_state", core.serialization.unknown().optional()),
});

export declare namespace FineTuningResponse {
    export interface Raw {
        is_allowed_to_fine_tune?: boolean | null;
        state?: Record<string, FineTuningResponseModelStateValue.Raw> | null;
        verification_failures?: string[] | null;
        verification_attempts_count?: number | null;
        manual_verification_requested?: boolean | null;
        language?: string | null;
        progress?: Record<string, number | null | undefined> | null;
        message?: Record<string, string | null | undefined> | null;
        dataset_duration_seconds?: number | null;
        verification_attempts?: VerificationAttemptResponse.Raw[] | null;
        slice_ids?: string[] | null;
        manual_verification?: ManualVerificationResponse.Raw | null;
        max_verification_attempts?: number | null;
        next_max_verification_attempts_reset_unix_ms?: number | null;
        finetuning_state?: unknown | null;
    }
}
