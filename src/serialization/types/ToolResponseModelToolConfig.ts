/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { ClientToolConfigOutput } from "./ClientToolConfigOutput";
import { SystemToolConfigOutput } from "./SystemToolConfigOutput";
import { WebhookToolConfigOutput } from "./WebhookToolConfigOutput";

export const ToolResponseModelToolConfig: core.serialization.Schema<
    serializers.ToolResponseModelToolConfig.Raw,
    ElevenLabs.ToolResponseModelToolConfig
> = core.serialization
    .union("type", {
        client: ClientToolConfigOutput,
        mcp: core.serialization.object({
            value: core.serialization.unknown(),
        }),
        system: SystemToolConfigOutput,
        webhook: WebhookToolConfigOutput,
    })
    .transform<ElevenLabs.ToolResponseModelToolConfig>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ToolResponseModelToolConfig {
    export type Raw =
        | ToolResponseModelToolConfig.Client
        | ToolResponseModelToolConfig.Mcp
        | ToolResponseModelToolConfig.System
        | ToolResponseModelToolConfig.Webhook;

    export interface Client extends ClientToolConfigOutput.Raw {
        type: "client";
    }

    export interface Mcp {
        type: "mcp";
        value?: unknown;
    }

    export interface System extends SystemToolConfigOutput.Raw {
        type: "system";
    }

    export interface Webhook extends WebhookToolConfigOutput.Raw {
        type: "webhook";
    }
}
