// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { VoiceSample } from "./VoiceSample";
import { VoiceResponseModelCategory } from "./VoiceResponseModelCategory";
import { FineTuningResponse } from "./FineTuningResponse";
import { VoiceSettings } from "./VoiceSettings";
import { VoiceSharingResponse } from "./VoiceSharingResponse";
import { VerifiedVoiceLanguageResponseModel } from "./VerifiedVoiceLanguageResponseModel";
import { VoiceResponseModelSafetyControl } from "./VoiceResponseModelSafetyControl";
import { VoiceVerificationResponse } from "./VoiceVerificationResponse";

export const Voice: core.serialization.ObjectSchema<serializers.Voice.Raw, ElevenLabs.Voice> =
    core.serialization.object({
        voiceId: core.serialization.property("voice_id", core.serialization.string()),
        name: core.serialization.string().optional(),
        samples: core.serialization.list(VoiceSample).optional(),
        category: VoiceResponseModelCategory.optional(),
        fineTuning: core.serialization.property("fine_tuning", FineTuningResponse.optional()),
        labels: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
        description: core.serialization.string().optional(),
        previewUrl: core.serialization.property("preview_url", core.serialization.string().optional()),
        availableForTiers: core.serialization.property(
            "available_for_tiers",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        settings: VoiceSettings.optional(),
        sharing: VoiceSharingResponse.optional(),
        highQualityBaseModelIds: core.serialization.property(
            "high_quality_base_model_ids",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        verifiedLanguages: core.serialization.property(
            "verified_languages",
            core.serialization.list(VerifiedVoiceLanguageResponseModel).optional(),
        ),
        safetyControl: core.serialization.property("safety_control", VoiceResponseModelSafetyControl.optional()),
        voiceVerification: core.serialization.property("voice_verification", VoiceVerificationResponse.optional()),
        permissionOnResource: core.serialization.property(
            "permission_on_resource",
            core.serialization.string().optional(),
        ),
        isOwner: core.serialization.property("is_owner", core.serialization.boolean().optional()),
        isLegacy: core.serialization.property("is_legacy", core.serialization.boolean().optional()),
        isMixed: core.serialization.property("is_mixed", core.serialization.boolean().optional()),
        favoritedAtUnix: core.serialization.property("favorited_at_unix", core.serialization.number().optional()),
        createdAtUnix: core.serialization.property("created_at_unix", core.serialization.number().optional()),
    });

export declare namespace Voice {
    export interface Raw {
        voice_id: string;
        name?: string | null;
        samples?: VoiceSample.Raw[] | null;
        category?: VoiceResponseModelCategory.Raw | null;
        fine_tuning?: FineTuningResponse.Raw | null;
        labels?: Record<string, string> | null;
        description?: string | null;
        preview_url?: string | null;
        available_for_tiers?: string[] | null;
        settings?: VoiceSettings.Raw | null;
        sharing?: VoiceSharingResponse.Raw | null;
        high_quality_base_model_ids?: string[] | null;
        verified_languages?: VerifiedVoiceLanguageResponseModel.Raw[] | null;
        safety_control?: VoiceResponseModelSafetyControl.Raw | null;
        voice_verification?: VoiceVerificationResponse.Raw | null;
        permission_on_resource?: string | null;
        is_owner?: boolean | null;
        is_legacy?: boolean | null;
        is_mixed?: boolean | null;
        favorited_at_unix?: number | null;
        created_at_unix?: number | null;
    }
}
