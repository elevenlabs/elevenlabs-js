// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { ChapterWithContentResponseModelState } from "./ChapterWithContentResponseModelState";
import { ChapterStatisticsResponse } from "./ChapterStatisticsResponse";
import { ChapterContentResponseModel } from "./ChapterContentResponseModel";

export const ChapterWithContentResponseModel: core.serialization.ObjectSchema<
    serializers.ChapterWithContentResponseModel.Raw,
    ElevenLabs.ChapterWithContentResponseModel
> = core.serialization.object({
    chapterId: core.serialization.property("chapter_id", core.serialization.string()),
    name: core.serialization.string(),
    lastConversionDateUnix: core.serialization.property(
        "last_conversion_date_unix",
        core.serialization.number().optional(),
    ),
    conversionProgress: core.serialization.property("conversion_progress", core.serialization.number().optional()),
    canBeDownloaded: core.serialization.property("can_be_downloaded", core.serialization.boolean()),
    state: ChapterWithContentResponseModelState,
    hasVideo: core.serialization.property("has_video", core.serialization.boolean().optional()),
    statistics: ChapterStatisticsResponse.optional(),
    lastConversionError: core.serialization.property("last_conversion_error", core.serialization.string().optional()),
    content: ChapterContentResponseModel,
});

export declare namespace ChapterWithContentResponseModel {
    export interface Raw {
        chapter_id: string;
        name: string;
        last_conversion_date_unix?: number | null;
        conversion_progress?: number | null;
        can_be_downloaded: boolean;
        state: ChapterWithContentResponseModelState.Raw;
        has_video?: boolean | null;
        statistics?: ChapterStatisticsResponse.Raw | null;
        last_conversion_error?: string | null;
        content: ChapterContentResponseModel.Raw;
    }
}
