// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { ProjectExtendedResponseModelTargetAudience } from "./ProjectExtendedResponseModelTargetAudience";
import { ProjectState } from "./ProjectState";
import { ProjectExtendedResponseModelAccessLevel } from "./ProjectExtendedResponseModelAccessLevel";
import { ProjectExtendedResponseModelFiction } from "./ProjectExtendedResponseModelFiction";
import { ProjectCreationMetaResponseModel } from "./ProjectCreationMetaResponseModel";
import { ProjectExtendedResponseModelSourceType } from "./ProjectExtendedResponseModelSourceType";
import { CaptionStyleModel } from "./CaptionStyleModel";
import { ProjectExtendedResponseModelAspectRatio } from "./ProjectExtendedResponseModelAspectRatio";
import { ProjectExtendedResponseModelQualityPreset } from "./ProjectExtendedResponseModelQualityPreset";
import { ChapterResponse } from "./ChapterResponse";
import { PronunciationDictionaryVersionResponseModel } from "./PronunciationDictionaryVersionResponseModel";
import { PronunciationDictionaryLocatorResponseModel } from "./PronunciationDictionaryLocatorResponseModel";
import { ProjectExtendedResponseModelApplyTextNormalization } from "./ProjectExtendedResponseModelApplyTextNormalization";

export const ProjectExtendedResponse: core.serialization.ObjectSchema<
    serializers.ProjectExtendedResponse.Raw,
    ElevenLabs.ProjectExtendedResponse
> = core.serialization.object({
    projectId: core.serialization.property("project_id", core.serialization.string()),
    name: core.serialization.string(),
    createDateUnix: core.serialization.property("create_date_unix", core.serialization.number()),
    createdByUserId: core.serialization.property("created_by_user_id", core.serialization.string().optional()),
    defaultTitleVoiceId: core.serialization.property("default_title_voice_id", core.serialization.string()),
    defaultParagraphVoiceId: core.serialization.property("default_paragraph_voice_id", core.serialization.string()),
    defaultModelId: core.serialization.property("default_model_id", core.serialization.string()),
    lastConversionDateUnix: core.serialization.property(
        "last_conversion_date_unix",
        core.serialization.number().optional(),
    ),
    canBeDownloaded: core.serialization.property("can_be_downloaded", core.serialization.boolean()),
    title: core.serialization.string().optional(),
    author: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    genres: core.serialization.list(core.serialization.string()).optional(),
    coverImageUrl: core.serialization.property("cover_image_url", core.serialization.string().optional()),
    targetAudience: core.serialization.property(
        "target_audience",
        ProjectExtendedResponseModelTargetAudience.optional(),
    ),
    language: core.serialization.string().optional(),
    contentType: core.serialization.property("content_type", core.serialization.string().optional()),
    originalPublicationDate: core.serialization.property(
        "original_publication_date",
        core.serialization.string().optional(),
    ),
    matureContent: core.serialization.property("mature_content", core.serialization.boolean().optional()),
    isbnNumber: core.serialization.property("isbn_number", core.serialization.string().optional()),
    volumeNormalization: core.serialization.property("volume_normalization", core.serialization.boolean()),
    state: ProjectState,
    accessLevel: core.serialization.property("access_level", ProjectExtendedResponseModelAccessLevel),
    fiction: ProjectExtendedResponseModelFiction.optional(),
    qualityCheckOn: core.serialization.property("quality_check_on", core.serialization.boolean()),
    qualityCheckOnWhenBulkConvert: core.serialization.property(
        "quality_check_on_when_bulk_convert",
        core.serialization.boolean(),
    ),
    creationMeta: core.serialization.property("creation_meta", ProjectCreationMetaResponseModel.optional()),
    sourceType: core.serialization.property("source_type", ProjectExtendedResponseModelSourceType.optional()),
    chaptersEnabled: core.serialization.property("chapters_enabled", core.serialization.boolean().optional()),
    captionsEnabled: core.serialization.property("captions_enabled", core.serialization.boolean().optional()),
    captionStyle: core.serialization.property("caption_style", CaptionStyleModel.optional()),
    publicShareId: core.serialization.property("public_share_id", core.serialization.string().optional()),
    aspectRatio: core.serialization.property("aspect_ratio", ProjectExtendedResponseModelAspectRatio.optional()),
    qualityPreset: core.serialization.property("quality_preset", ProjectExtendedResponseModelQualityPreset),
    chapters: core.serialization.list(ChapterResponse),
    pronunciationDictionaryVersions: core.serialization.property(
        "pronunciation_dictionary_versions",
        core.serialization.list(PronunciationDictionaryVersionResponseModel),
    ),
    pronunciationDictionaryLocators: core.serialization.property(
        "pronunciation_dictionary_locators",
        core.serialization.list(PronunciationDictionaryLocatorResponseModel),
    ),
    applyTextNormalization: core.serialization.property(
        "apply_text_normalization",
        ProjectExtendedResponseModelApplyTextNormalization,
    ),
    experimental: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace ProjectExtendedResponse {
    export interface Raw {
        project_id: string;
        name: string;
        create_date_unix: number;
        created_by_user_id?: string | null;
        default_title_voice_id: string;
        default_paragraph_voice_id: string;
        default_model_id: string;
        last_conversion_date_unix?: number | null;
        can_be_downloaded: boolean;
        title?: string | null;
        author?: string | null;
        description?: string | null;
        genres?: string[] | null;
        cover_image_url?: string | null;
        target_audience?: ProjectExtendedResponseModelTargetAudience.Raw | null;
        language?: string | null;
        content_type?: string | null;
        original_publication_date?: string | null;
        mature_content?: boolean | null;
        isbn_number?: string | null;
        volume_normalization: boolean;
        state: ProjectState.Raw;
        access_level: ProjectExtendedResponseModelAccessLevel.Raw;
        fiction?: ProjectExtendedResponseModelFiction.Raw | null;
        quality_check_on: boolean;
        quality_check_on_when_bulk_convert: boolean;
        creation_meta?: ProjectCreationMetaResponseModel.Raw | null;
        source_type?: ProjectExtendedResponseModelSourceType.Raw | null;
        chapters_enabled?: boolean | null;
        captions_enabled?: boolean | null;
        caption_style?: CaptionStyleModel.Raw | null;
        public_share_id?: string | null;
        aspect_ratio?: ProjectExtendedResponseModelAspectRatio.Raw | null;
        quality_preset: ProjectExtendedResponseModelQualityPreset.Raw;
        chapters: ChapterResponse.Raw[];
        pronunciation_dictionary_versions: PronunciationDictionaryVersionResponseModel.Raw[];
        pronunciation_dictionary_locators: PronunciationDictionaryLocatorResponseModel.Raw[];
        apply_text_normalization: ProjectExtendedResponseModelApplyTextNormalization.Raw;
        experimental?: Record<string, unknown> | null;
    }
}
