/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { SpeechToTextWordResponseModel } from "./SpeechToTextWordResponseModel";
import { AdditionalFormatResponseModel } from "./AdditionalFormatResponseModel";

export const SpeechToTextChunkResponseModel: core.serialization.ObjectSchema<
    serializers.SpeechToTextChunkResponseModel.Raw,
    ElevenLabs.SpeechToTextChunkResponseModel
> = core.serialization.object({
    languageCode: core.serialization.property("language_code", core.serialization.string()),
    languageProbability: core.serialization.property("language_probability", core.serialization.number()),
    text: core.serialization.string(),
    words: core.serialization.list(SpeechToTextWordResponseModel),
    channelIndex: core.serialization.property("channel_index", core.serialization.number().optional()),
    additionalFormats: core.serialization.property(
        "additional_formats",
        core.serialization.list(AdditionalFormatResponseModel.optional()).optional(),
    ),
    transcriptionId: core.serialization.property("transcription_id", core.serialization.string().optional()),
});

export declare namespace SpeechToTextChunkResponseModel {
    export interface Raw {
        language_code: string;
        language_probability: number;
        text: string;
        words: SpeechToTextWordResponseModel.Raw[];
        channel_index?: number | null;
        additional_formats?: (AdditionalFormatResponseModel.Raw | null | undefined)[] | null;
        transcription_id?: string | null;
    }
}
