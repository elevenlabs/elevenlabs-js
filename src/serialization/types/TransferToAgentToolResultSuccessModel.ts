// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";

export const TransferToAgentToolResultSuccessModel: core.serialization.ObjectSchema<
    serializers.TransferToAgentToolResultSuccessModel.Raw,
    ElevenLabs.TransferToAgentToolResultSuccessModel
> = core.serialization.object({
    status: core.serialization.stringLiteral("success").optional(),
    fromAgent: core.serialization.property("from_agent", core.serialization.string()),
    toAgent: core.serialization.property("to_agent", core.serialization.string()),
    condition: core.serialization.string(),
    delayMs: core.serialization.property("delay_ms", core.serialization.number().optional()),
    transferMessage: core.serialization.property("transfer_message", core.serialization.string().optional()),
    enableTransferredAgentFirstMessage: core.serialization.property(
        "enable_transferred_agent_first_message",
        core.serialization.boolean().optional(),
    ),
});

export declare namespace TransferToAgentToolResultSuccessModel {
    export interface Raw {
        status?: "success" | null;
        from_agent: string;
        to_agent: string;
        condition: string;
        delay_ms?: number | null;
        transfer_message?: string | null;
        enable_transferred_agent_first_message?: boolean | null;
    }
}
