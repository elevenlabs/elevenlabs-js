/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { AsrConversationalConfig } from "./AsrConversationalConfig";
import { TurnConfig } from "./TurnConfig";
import { TtsConversationalConfigOutput } from "./TtsConversationalConfigOutput";
import { ConversationConfig } from "./ConversationConfig";
import { LanguagePresetOutput } from "./LanguagePresetOutput";
import { AgentConfig } from "./AgentConfig";

export const ConversationalConfig: core.serialization.ObjectSchema<
    serializers.ConversationalConfig.Raw,
    ElevenLabs.ConversationalConfig
> = core.serialization.object({
    asr: AsrConversationalConfig.optional(),
    turn: TurnConfig.optional(),
    tts: TtsConversationalConfigOutput.optional(),
    conversation: ConversationConfig.optional(),
    languagePresets: core.serialization.property(
        "language_presets",
        core.serialization.record(core.serialization.string(), LanguagePresetOutput).optional(),
    ),
    agent: AgentConfig.optional(),
});

export declare namespace ConversationalConfig {
    export interface Raw {
        asr?: AsrConversationalConfig.Raw | null;
        turn?: TurnConfig.Raw | null;
        tts?: TtsConversationalConfigOutput.Raw | null;
        conversation?: ConversationConfig.Raw | null;
        language_presets?: Record<string, LanguagePresetOutput.Raw> | null;
        agent?: AgentConfig.Raw | null;
    }
}
