// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { SpeakerSeparationResponseModelStatus } from "./SpeakerSeparationResponseModelStatus";
import { SpeakerResponseModel } from "./SpeakerResponseModel";

export const SpeakerSeparationResponseModel: core.serialization.ObjectSchema<
    serializers.SpeakerSeparationResponseModel.Raw,
    ElevenLabs.SpeakerSeparationResponseModel
> = core.serialization.object({
    voiceId: core.serialization.property("voice_id", core.serialization.string()),
    sampleId: core.serialization.property("sample_id", core.serialization.string()),
    status: SpeakerSeparationResponseModelStatus,
    speakers: core.serialization.record(core.serialization.string(), SpeakerResponseModel.optional()).optional(),
    selectedSpeakerIds: core.serialization.property(
        "selected_speaker_ids",
        core.serialization.list(core.serialization.string()).optional(),
    ),
});

export declare namespace SpeakerSeparationResponseModel {
    export interface Raw {
        voice_id: string;
        sample_id: string;
        status: SpeakerSeparationResponseModelStatus.Raw;
        speakers?: Record<string, SpeakerResponseModel.Raw | null | undefined> | null;
        selected_speaker_ids?: string[] | null;
    }
}
