// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../../../../../../index";
import * as ElevenLabs from "../../../../../../../api/index";
import * as core from "../../../../../../../core";
import { ConversationHistoryTranscriptCommonModelInput } from "../../../../../../types/ConversationHistoryTranscriptCommonModelInput";
import { AgentSuccessfulResponseExample } from "../../../../../../types/AgentSuccessfulResponseExample";
import { AgentFailureResponseExample } from "../../../../../../types/AgentFailureResponseExample";
import { UnitTestToolCallEvaluationModelInput } from "../../../../../../types/UnitTestToolCallEvaluationModelInput";
import { CreateUnitTestRequestDynamicVariablesValue } from "../../types/CreateUnitTestRequestDynamicVariablesValue";
import { UnitTestCommonModelType } from "../../../../../../types/UnitTestCommonModelType";
import { TestFromConversationMetadataInput } from "../../../../../../types/TestFromConversationMetadataInput";

export const CreateUnitTestRequest: core.serialization.Schema<
    serializers.conversationalAi.CreateUnitTestRequest.Raw,
    ElevenLabs.conversationalAi.CreateUnitTestRequest
> = core.serialization.object({
    chatHistory: core.serialization.property(
        "chat_history",
        core.serialization.list(ConversationHistoryTranscriptCommonModelInput),
    ),
    successCondition: core.serialization.property("success_condition", core.serialization.string()),
    successExamples: core.serialization.property(
        "success_examples",
        core.serialization.list(AgentSuccessfulResponseExample),
    ),
    failureExamples: core.serialization.property(
        "failure_examples",
        core.serialization.list(AgentFailureResponseExample),
    ),
    toolCallParameters: core.serialization.property(
        "tool_call_parameters",
        UnitTestToolCallEvaluationModelInput.optional(),
    ),
    dynamicVariables: core.serialization.property(
        "dynamic_variables",
        core.serialization
            .record(core.serialization.string(), CreateUnitTestRequestDynamicVariablesValue.optional())
            .optional(),
    ),
    type: UnitTestCommonModelType.optional(),
    fromConversationMetadata: core.serialization.property(
        "from_conversation_metadata",
        TestFromConversationMetadataInput.optional(),
    ),
    name: core.serialization.string(),
});

export declare namespace CreateUnitTestRequest {
    export interface Raw {
        chat_history: ConversationHistoryTranscriptCommonModelInput.Raw[];
        success_condition: string;
        success_examples: AgentSuccessfulResponseExample.Raw[];
        failure_examples: AgentFailureResponseExample.Raw[];
        tool_call_parameters?: UnitTestToolCallEvaluationModelInput.Raw | null;
        dynamic_variables?: Record<string, CreateUnitTestRequestDynamicVariablesValue.Raw | null | undefined> | null;
        type?: UnitTestCommonModelType.Raw | null;
        from_conversation_metadata?: TestFromConversationMetadataInput.Raw | null;
        name: string;
    }
}
