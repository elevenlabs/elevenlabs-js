/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../index";
import * as ElevenLabs from "../../../../../../../api/index";
import * as core from "../../../../../../../core";
import { OutboundCallRecipient } from "../../../../../../types/OutboundCallRecipient";

export const BodySubmitABatchCallRequestV1ConvaiBatchCallingSubmitPost: core.serialization.Schema<
    serializers.conversationalAi.BodySubmitABatchCallRequestV1ConvaiBatchCallingSubmitPost.Raw,
    ElevenLabs.conversationalAi.BodySubmitABatchCallRequestV1ConvaiBatchCallingSubmitPost
> = core.serialization.object({
    callName: core.serialization.property("call_name", core.serialization.string()),
    agentId: core.serialization.property("agent_id", core.serialization.string()),
    agentPhoneNumberId: core.serialization.property("agent_phone_number_id", core.serialization.string()),
    recipients: core.serialization.list(OutboundCallRecipient),
    scheduledTimeUnix: core.serialization.property("scheduled_time_unix", core.serialization.number().optional()),
});

export declare namespace BodySubmitABatchCallRequestV1ConvaiBatchCallingSubmitPost {
    export interface Raw {
        call_name: string;
        agent_id: string;
        agent_phone_number_id: string;
        recipients: OutboundCallRecipient.Raw[];
        scheduled_time_unix?: number | null;
    }
}
