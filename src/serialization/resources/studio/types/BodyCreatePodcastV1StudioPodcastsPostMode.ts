// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../../../index";
import * as ElevenLabs from "../../../../api/index";
import * as core from "../../../../core";
import { PodcastConversationMode } from "../../../types/PodcastConversationMode";
import { PodcastBulletinMode } from "../../../types/PodcastBulletinMode";

export const BodyCreatePodcastV1StudioPodcastsPostMode: core.serialization.Schema<
    serializers.BodyCreatePodcastV1StudioPodcastsPostMode.Raw,
    ElevenLabs.BodyCreatePodcastV1StudioPodcastsPostMode
> = core.serialization
    .union("type", {
        conversation: PodcastConversationMode,
        bulletin: PodcastBulletinMode,
    })
    .transform<ElevenLabs.BodyCreatePodcastV1StudioPodcastsPostMode>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace BodyCreatePodcastV1StudioPodcastsPostMode {
    export type Raw =
        | BodyCreatePodcastV1StudioPodcastsPostMode.Conversation
        | BodyCreatePodcastV1StudioPodcastsPostMode.Bulletin;

    export interface Conversation extends PodcastConversationMode.Raw {
        type: "conversation";
    }

    export interface Bulletin extends PodcastBulletinMode.Raw {
        type: "bulletin";
    }
}
