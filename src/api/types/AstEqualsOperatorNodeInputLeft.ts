// This file was auto-generated by Fern from our API Definition.

import * as ElevenLabs from "../index";

/**
 * Left operand of the binary operator.
 */
export type AstEqualsOperatorNodeInputLeft =
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.AndOperator
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.BooleanLiteral
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.DynamicVariable
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.EqOperator
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.GtOperator
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.GteOperator
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.Llm
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.LtOperator
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.LteOperator
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.NeqOperator
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.NumberLiteral
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.OrOperator
    | ElevenLabs.AstEqualsOperatorNodeInputLeft.StringLiteral;

export namespace AstEqualsOperatorNodeInputLeft {
    export interface AndOperator extends ElevenLabs.AstAndOperatorNodeInput {
        type: "and_operator";
    }

    export interface BooleanLiteral extends ElevenLabs.AstBooleanNodeInput {
        type: "boolean_literal";
    }

    export interface DynamicVariable extends ElevenLabs.AstDynamicVariableNodeInput {
        type: "dynamic_variable";
    }

    export interface EqOperator extends ElevenLabs.AstEqualsOperatorNodeInput {
        type: "eq_operator";
    }

    export interface GtOperator extends ElevenLabs.AstGreaterThanOperatorNodeInput {
        type: "gt_operator";
    }

    export interface GteOperator extends ElevenLabs.AstGreaterThanOrEqualsOperatorNodeInput {
        type: "gte_operator";
    }

    export interface Llm extends ElevenLabs.AstllmNodeInput {
        type: "llm";
    }

    export interface LtOperator extends ElevenLabs.AstLessThanOperatorNodeInput {
        type: "lt_operator";
    }

    export interface LteOperator extends ElevenLabs.AstLessThanOrEqualsOperatorNodeInput {
        type: "lte_operator";
    }

    export interface NeqOperator extends ElevenLabs.AstNotEqualsOperatorNodeInput {
        type: "neq_operator";
    }

    export interface NumberLiteral extends ElevenLabs.AstNumberNodeInput {
        type: "number_literal";
    }

    export interface OrOperator extends ElevenLabs.AstOrOperatorNodeInput {
        type: "or_operator";
    }

    export interface StringLiteral extends ElevenLabs.AstStringNodeInput {
        type: "string_literal";
    }
}
