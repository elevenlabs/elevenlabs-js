/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { mergeHeaders, mergeOnlyDefinedHeaders } from "./core/headers";
import * as errors from "./errors/index";
import { History } from "./api/resources/history/client/Client";
import { TextToSoundEffects } from "./api/resources/textToSoundEffects/client/Client";
import { AudioIsolation } from "./api/resources/audioIsolation/client/Client";
import { Samples } from "./api/resources/samples/client/Client";
import { TextToSpeech } from "./api/resources/textToSpeech/client/Client";
import { TextToDialogue } from "./api/resources/textToDialogue/client/Client";
import { SpeechToSpeech } from "./api/resources/speechToSpeech/client/Client";
import { TextToVoice } from "./api/resources/textToVoice/client/Client";
import { User } from "./api/resources/user/client/Client";
import { Voices } from "./api/resources/voices/client/Client";
import { Studio } from "./api/resources/studio/client/Client";
import { Dubbing } from "./api/resources/dubbing/client/Client";
import { Models } from "./api/resources/models/client/Client";
import { AudioNative } from "./api/resources/audioNative/client/Client";
import { Usage } from "./api/resources/usage/client/Client";
import { PronunciationDictionaries } from "./api/resources/pronunciationDictionaries/client/Client";
import { ServiceAccounts } from "./api/resources/serviceAccounts/client/Client";
import { Webhooks } from "./api/resources/webhooks/client/Client";
import { SpeechToText } from "./api/resources/speechToText/client/Client";
import { ForcedAlignment } from "./api/resources/forcedAlignment/client/Client";
import { ConversationalAi } from "./api/resources/conversationalAi/client/Client";
import { Music } from "./api/resources/music/client/Client";
import { Workspace } from "./api/resources/workspace/client/Client";

export declare namespace ElevenLabsClient {
    export interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        /** Override the xi-api-key header */
        apiKey?: core.Supplier<string | undefined>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the xi-api-key header */
        apiKey?: string | undefined;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}

export class ElevenLabsClient {
    protected readonly _options: ElevenLabsClient.Options;
    protected _history: History | undefined;
    protected _textToSoundEffects: TextToSoundEffects | undefined;
    protected _audioIsolation: AudioIsolation | undefined;
    protected _samples: Samples | undefined;
    protected _textToSpeech: TextToSpeech | undefined;
    protected _textToDialogue: TextToDialogue | undefined;
    protected _speechToSpeech: SpeechToSpeech | undefined;
    protected _textToVoice: TextToVoice | undefined;
    protected _user: User | undefined;
    protected _voices: Voices | undefined;
    protected _studio: Studio | undefined;
    protected _dubbing: Dubbing | undefined;
    protected _models: Models | undefined;
    protected _audioNative: AudioNative | undefined;
    protected _usage: Usage | undefined;
    protected _pronunciationDictionaries: PronunciationDictionaries | undefined;
    protected _serviceAccounts: ServiceAccounts | undefined;
    protected _webhooks: Webhooks | undefined;
    protected _speechToText: SpeechToText | undefined;
    protected _forcedAlignment: ForcedAlignment | undefined;
    protected _conversationalAi: ConversationalAi | undefined;
    protected _music: Music | undefined;
    protected _workspace: Workspace | undefined;

    constructor(_options: ElevenLabsClient.Options = {}) {
        this._options = {
            ..._options,
            headers: mergeHeaders(
                {
                    "xi-api-key": _options?.apiKey,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "@elevenlabs/elevenlabs-js",
                    "X-Fern-SDK-Version": "v2.15.0",
                    "User-Agent": "@elevenlabs/elevenlabs-js/v2.15.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version,
                },
                _options?.headers,
            ),
        };
    }

    public get history(): History {
        return (this._history ??= new History(this._options));
    }

    public get textToSoundEffects(): TextToSoundEffects {
        return (this._textToSoundEffects ??= new TextToSoundEffects(this._options));
    }

    public get audioIsolation(): AudioIsolation {
        return (this._audioIsolation ??= new AudioIsolation(this._options));
    }

    public get samples(): Samples {
        return (this._samples ??= new Samples(this._options));
    }

    public get textToSpeech(): TextToSpeech {
        return (this._textToSpeech ??= new TextToSpeech(this._options));
    }

    public get textToDialogue(): TextToDialogue {
        return (this._textToDialogue ??= new TextToDialogue(this._options));
    }

    public get speechToSpeech(): SpeechToSpeech {
        return (this._speechToSpeech ??= new SpeechToSpeech(this._options));
    }

    public get textToVoice(): TextToVoice {
        return (this._textToVoice ??= new TextToVoice(this._options));
    }

    public get user(): User {
        return (this._user ??= new User(this._options));
    }

    public get voices(): Voices {
        return (this._voices ??= new Voices(this._options));
    }

    public get studio(): Studio {
        return (this._studio ??= new Studio(this._options));
    }

    public get dubbing(): Dubbing {
        return (this._dubbing ??= new Dubbing(this._options));
    }

    public get models(): Models {
        return (this._models ??= new Models(this._options));
    }

    public get audioNative(): AudioNative {
        return (this._audioNative ??= new AudioNative(this._options));
    }

    public get usage(): Usage {
        return (this._usage ??= new Usage(this._options));
    }

    public get pronunciationDictionaries(): PronunciationDictionaries {
        return (this._pronunciationDictionaries ??= new PronunciationDictionaries(this._options));
    }

    public get serviceAccounts(): ServiceAccounts {
        return (this._serviceAccounts ??= new ServiceAccounts(this._options));
    }

    public get webhooks(): Webhooks {
        return (this._webhooks ??= new Webhooks(this._options));
    }

    public get speechToText(): SpeechToText {
        return (this._speechToText ??= new SpeechToText(this._options));
    }

    public get forcedAlignment(): ForcedAlignment {
        return (this._forcedAlignment ??= new ForcedAlignment(this._options));
    }

    public get conversationalAi(): ConversationalAi {
        return (this._conversationalAi ??= new ConversationalAi(this._options));
    }

    public get music(): Music {
        return (this._music ??= new Music(this._options));
    }

    public get workspace(): Workspace {
        return (this._workspace ??= new Workspace(this._options));
    }

    /**
     * Add a generated voice to the voice library.
     *
     * @param {ElevenLabsClient.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.saveAVoicePreview()
     */
    public saveAVoicePreview(requestOptions?: ElevenLabsClient.RequestOptions): core.HttpResponsePromise<void> {
        return core.HttpResponsePromise.fromPromise(this.__saveAVoicePreview(requestOptions));
    }

    private async __saveAVoicePreview(
        requestOptions?: ElevenLabsClient.RequestOptions,
    ): Promise<core.WithRawResponse<void>> {
        const _response = await core.fetcher({
            url: core.url.join(
                (await core.Supplier.get(this._options.baseUrl)) ??
                    (await core.Supplier.get(this._options.environment)) ??
                    environments.ElevenLabsEnvironment.Production,
                "v1/text-to-voice/create-voice-from-preview",
            ),
            method: "POST",
            headers: mergeHeaders(
                this._options?.headers,
                mergeOnlyDefinedHeaders({ "xi-api-key": requestOptions?.apiKey }),
                requestOptions?.headers,
            ),
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 240000,
            maxRetries: requestOptions?.maxRetries,
            abortSignal: requestOptions?.abortSignal,
        });
        if (_response.ok) {
            return { data: undefined, rawResponse: _response.rawResponse };
        }

        if (_response.error.reason === "status-code") {
            throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
                rawResponse: _response.rawResponse,
            });
        }

        switch (_response.error.reason) {
            case "non-json":
                throw new errors.ElevenLabsError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                    rawResponse: _response.rawResponse,
                });
            case "timeout":
                throw new errors.ElevenLabsTimeoutError(
                    "Timeout exceeded when calling POST /v1/text-to-voice/create-voice-from-preview.",
                );
            case "unknown":
                throw new errors.ElevenLabsError({
                    message: _response.error.errorMessage,
                    rawResponse: _response.rawResponse,
                });
        }
    }
}
