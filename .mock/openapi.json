{
  "openapi": "3.1.0",
  "info": {
    "title": "ElevenLabs API Documentation",
    "description": "This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.",
    "version": "1.0"
  },
  "paths": {
    "/v1/history": {
      "get": {
        "operationId": "List_generated_items_v1_history_get",
        "summary": "List Generated Items",
        "description": "Returns a list of your generated audio.",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
            "required": false,
            "schema": {
              "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
              "type": "integer",
              "default": 100,
              "title": "Page Size"
            }
          },
          {
            "name": "start_after_history_item_id",
            "in": "query",
            "description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date.",
            "required": false,
            "schema": {
              "description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start After History Item Id"
            }
          },
          {
            "name": "voice_id",
            "in": "query",
            "description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs.",
            "required": false,
            "schema": {
              "description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "search term used for filtering",
            "required": false,
            "schema": {
              "description": "search term used for filtering",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "In the land far far away"
              ],
              "title": "Search"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Source of the generated history item",
            "required": false,
            "schema": {
              "description": "Source of the generated history item",
              "anyOf": [
                {
                  "enum": [
                    "TTS",
                    "STS"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "TTS"
              ],
              "title": "Source"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpeechHistoryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v1/history/{history_item_id}": {
      "get": {
        "operationId": "Get_history_item_v1_history__history_item_id__get",
        "summary": "Get History Item",
        "description": "Retrieves a history item.",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
            "required": true,
            "schema": {
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "operationId": "Delete_history_item_v1_history__history_item_id__delete",
        "summary": "Delete History Item",
        "description": "Delete a history item by its ID",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
            "required": true,
            "schema": {
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteHistoryItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/history/{history_item_id}/audio": {
      "get": {
        "operationId": "Get_audio_from_history_item_v1_history__history_item_id__audio_get",
        "summary": "Get Audio From History Item",
        "description": "Returns the audio of an history item.",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
            "required": true,
            "schema": {
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The audio file of the history item.",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get_audio"
      }
    },
    "/v1/history/download": {
      "post": {
        "operationId": "Download_history_items_v1_history_download_post",
        "summary": "Download History Items",
        "description": "Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Download_history_items_v1_history_download_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The requested audio file, or a zip file containing multiple audio files when multiple history items are requested.",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "description": "ZIP file containing multiple audio files when multiple history items are requested"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "example": {
                  "error": "invalid_output_format",
                  "message": "output_format must be wav or none"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "download"
      }
    },
    "/v1/sound-generation": {
      "post": {
        "operationId": "Sound_Generation_v1_sound_generation_post",
        "summary": "Sound Generation",
        "description": "Turn text into sound effects for your videos, voice-overs or video games using the most advanced sound effects model in the world.",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Sound_Generation_v1_sound_generation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated sound effect as an MP3 file",
            "headers": {
              "character-cost": {
                "description": "The number of characters used for billing",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "sound-generation"
        ],
        "x-fern-sdk-group-name": "text_to_sound_effects",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/audio-isolation": {
      "post": {
        "operationId": "Audio_Isolation_v1_audio_isolation_post",
        "summary": "Audio Isolation",
        "description": "Removes background noise from audio",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Audio_Isolation_v1_audio_isolation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-isolation"
        ],
        "x-fern-sdk-group-name": "audio_isolation",
        "x-fern-sdk-method-name": "audio_isolation"
      }
    },
    "/v1/audio-isolation/stream": {
      "post": {
        "operationId": "Audio_Isolation_Stream_v1_audio_isolation_stream_post",
        "summary": "Audio Isolation Stream",
        "description": "Removes background noise from audio and streams the result",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-isolation"
        ],
        "x-fern-sdk-group-name": "audio_isolation",
        "x-fern-sdk-method-name": "audio_isolation_stream",
        "x-fern-streaming": true
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}": {
      "delete": {
        "operationId": "Delete_sample_v1_voices__voice_id__samples__sample_id__delete",
        "summary": "Delete Sample",
        "description": "Removes a sample by its ID.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
            "required": true,
            "schema": {
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSampleResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ],
        "x-fern-sdk-group-name": "samples",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}/audio": {
      "get": {
        "operationId": "Get_audio_from_sample_v1_voices__voice_id__samples__sample_id__audio_get",
        "summary": "Get Audio From Sample",
        "description": "Returns the audio corresponding to a sample attached to a voice.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
            "required": true,
            "schema": {
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/*": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ],
        "x-fern-sdk-group-name": "samples",
        "x-fern-sdk-method-name": "get_audio"
      }
    },
    "/v1/text-to-speech/{voice_id}": {
      "post": {
        "operationId": "Text_to_speech_v1_text_to_speech__voice_id__post",
        "summary": "Text To Speech",
        "description": "Converts text into speech using a voice of your choice and returns audio.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "deprecated": true,
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_v1_text_to_speech__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-speech"
        ],
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/text-to-speech/{voice_id}/with-timestamps": {
      "post": {
        "operationId": "Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post",
        "summary": "Text To Speech With Timestamps",
        "description": "Generate speech from text with precise character-level timing information for audio-text synchronization.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "deprecated": true,
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioWithTimestampsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-speech"
        ],
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert_with_timestamps"
      }
    },
    "/v1/text-to-speech/{voice_id}/stream": {
      "post": {
        "operationId": "Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post",
        "summary": "Text To Speech Streaming",
        "description": "Converts text into speech using a voice of your choice and returns audio as an audio stream.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "deprecated": true,
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-speech"
        ],
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert_as_stream",
        "x-fern-streaming": true
      }
    },
    "/v1/text-to-speech/{voice_id}/stream/with-timestamps": {
      "post": {
        "operationId": "Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post",
        "summary": "Text To Speech Streaming With Timestamps",
        "description": "Converts text into speech using a voice of your choice and returns a stream of JSONs containing audio as a base64 encoded string together with information on when which character was spoken.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "deprecated": true,
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stream of transcription chunks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingAudioChunkWithTimestampsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-speech"
        ],
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "stream_with_timestamps",
        "x-fern-streaming": true
      }
    },
    "/v1/speech-to-speech/{voice_id}": {
      "post": {
        "operationId": "Speech_to_Speech_v1_speech_to_speech__voice_id__post",
        "summary": "Speech To Speech",
        "description": "Transform audio from one voice to another. Maintain full control over emotion, timing and delivery.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "deprecated": true,
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-to-speech"
        ],
        "x-fern-sdk-group-name": "speech_to_speech",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/speech-to-speech/{voice_id}/stream": {
      "post": {
        "operationId": "Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post",
        "summary": "Speech To Speech Streaming",
        "description": "Stream audio from one voice to another. Maintain full control over emotion, timing and delivery.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "deprecated": true,
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-to-speech"
        ],
        "x-fern-sdk-group-name": "speech_to_speech",
        "x-fern-sdk-method-name": "convert_as_stream",
        "x-fern-streaming": true
      }
    },
    "/v1/voice-generation/generate-voice/parameters": {
      "get": {
        "operationId": "Voice_Generation_Parameters_v1_voice_generation_generate_voice_parameters_get",
        "summary": "Voice Generation Parameters",
        "description": "Get possible parameters for the /v1/voice-generation/generate-voice endpoint.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceGenerationParameterResponseModel"
                }
              }
            }
          }
        },
        "tags": [
          "voice-generation"
        ],
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "generate_parameters"
      }
    },
    "/v1/voice-generation/generate-voice": {
      "post": {
        "operationId": "Generate_a_random_voice_v1_voice_generation_generate_voice_post",
        "summary": "Generate A Random Voice",
        "description": "Generate a random voice based on parameters. This method returns a generated_voice_id in the response header, and a sample of the voice in the body. If you like the generated voice call /v1/voice-generation/create-voice with the generated_voice_id to create the voice.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voice-generation"
        ],
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "generate"
      }
    },
    "/v1/text-to-voice/create-previews": {
      "post": {
        "operationId": "Generate_a_voice_preview_from_description_v1_text_to_voice_create_previews_post",
        "summary": "Generate A Voice Preview From Description",
        "description": "Generate a custom voice based on voice description. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. If you like the a voice previewand want to create the voice call /v1/text-to-voice/create-voice-from-preview with the generated_voice_id to create the voice.",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_192",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoicePreviewsRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-voice"
        ],
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "create_previews"
      }
    },
    "/v1/voice-generation/create-voice": {
      "post": {
        "operationId": "Create_a_previously_generated_voice_v1_voice_generation_create_voice_post",
        "summary": "Create A Previously Generated Voice",
        "description": "Create a previously generated voice. This endpoint should be called after you fetched a generated_voice_id using /v1/voice-generation/generate-voice.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voice-generation"
        ],
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "create_a_previously_generated_voice"
      }
    },
    "/v1/text-to-voice/create-voice-from-preview": {
      "post": {
        "operationId": "Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post",
        "summary": "Create A New Voice From Voice Preview",
        "description": "Create a voice from previously generated voice preview. This endpoint should be called after you fetched a generated_voice_id using POST /v1/text-to-voice/create-previews.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-voice"
        ],
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "create_voice_from_preview"
      }
    },
    "/v1/user/subscription": {
      "get": {
        "operationId": "Get_user_subscription_info_v1_user_subscription_get",
        "summary": "Get User Subscription Info",
        "description": "Gets extended information about the users subscription",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedSubscriptionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "x-fern-sdk-group-name": "user",
        "x-fern-sdk-method-name": "get_subscription"
      }
    },
    "/v1/user": {
      "get": {
        "operationId": "Get_user_info_v1_user_get",
        "summary": "Get User Info",
        "description": "Gets information about the user",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "x-fern-sdk-group-name": "user",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices": {
      "get": {
        "operationId": "List_voices_v1_voices_get",
        "summary": "List Voices",
        "description": "Returns a list of all available voices for a user.",
        "parameters": [
          {
            "name": "show_legacy",
            "in": "query",
            "description": "If set to true, legacy premade voices will be included in responses from /v1/voices",
            "required": false,
            "schema": {
              "description": "If set to true, legacy premade voices will be included in responses from /v1/voices",
              "default": false,
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                true
              ],
              "title": "Show Legacy"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v2/voices": {
      "get": {
        "operationId": "Get_voices_v2_v2_voices_get",
        "summary": "Get Voices V2",
        "description": "Gets a list of all available voices for a user with search, filtering and pagination.",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token to use for pagination. Returned from the previous request.",
            "required": false,
            "schema": {
              "description": "The next page token to use for pagination. Returned from the previous request.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "0"
              ],
              "title": "Next Page Token"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many voices to return at maximum. Can not exceed 100, defaults to 10. Page 0 may include more voices due to default voices being included.",
            "required": false,
            "schema": {
              "description": "How many voices to return at maximum. Can not exceed 100, defaults to 10. Page 0 may include more voices due to default voices being included.",
              "type": "integer",
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term to filter voices by. Searches in name, description, labels, category.",
            "required": false,
            "schema": {
              "description": "Search term to filter voices by. Searches in name, description, labels, category.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Which field to sort by, one of 'created_at_unix' or 'name'. 'created_at_unix' may not be available for older voices.",
            "required": false,
            "schema": {
              "description": "Which field to sort by, one of 'created_at_unix' or 'name'. 'created_at_unix' may not be available for older voices.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "created_at_unix"
              ],
              "title": "Sort"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Which direction to sort the voices in. 'asc' or 'desc'.",
            "required": false,
            "schema": {
              "description": "Which direction to sort the voices in. 'asc' or 'desc'.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "desc"
              ],
              "title": "Sort Direction"
            }
          },
          {
            "name": "voice_type",
            "in": "query",
            "description": "Type of the voice to filter by. One of 'personal', 'community', 'default', 'workspace', 'non-default'. 'non-default' is equal to 'personal' plus 'community'.",
            "required": false,
            "schema": {
              "description": "Type of the voice to filter by. One of 'personal', 'community', 'default', 'workspace', 'non-default'. 'non-default' is equal to 'personal' plus 'community'.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Voice Type"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category of the voice to filter by. One of 'premade', 'cloned', 'generated', 'professional'",
            "required": false,
            "schema": {
              "description": "Category of the voice to filter by. One of 'premade', 'cloned', 'generated', 'professional'",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "fine_tuning_state",
            "in": "query",
            "description": "State of the voice's fine tuning to filter by. Applicable only to professional voices clones. One of 'draft', 'not_verified', 'not_started', 'queued', 'fine_tuning', 'fine_tuned', 'failed', 'delayed'",
            "required": false,
            "schema": {
              "description": "State of the voice's fine tuning to filter by. Applicable only to professional voices clones. One of 'draft', 'not_verified', 'not_started', 'queued', 'fine_tuning', 'fine_tuned', 'failed', 'delayed'",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Fine Tuning State"
            }
          },
          {
            "name": "collection_id",
            "in": "query",
            "description": "Collection ID to filter voices by.",
            "required": false,
            "schema": {
              "description": "Collection ID to filter voices by.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Collection Id"
            }
          },
          {
            "name": "include_total_count",
            "in": "query",
            "description": "Whether to include the total count of voices found in the response. Incurs a performance cost.",
            "required": false,
            "schema": {
              "description": "Whether to include the total count of voices found in the response. Incurs a performance cost.",
              "type": "boolean",
              "default": true,
              "examples": [
                true
              ],
              "title": "Include Total Count"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesV2ResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "search"
      }
    },
    "/v1/voices/settings/default": {
      "get": {
        "operationId": "Get_default_voice_settings__v1_voices_settings_default_get",
        "summary": "Get Default Voice Settings.",
        "description": "Gets the default settings for voices. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_default_settings"
      }
    },
    "/v1/voices/{voice_id}/settings": {
      "get": {
        "operationId": "Get_voice_settings_v1_voices__voice_id__settings_get",
        "summary": "Get Voice Settings",
        "description": "Returns the settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_settings"
      }
    },
    "/v1/voices/{voice_id}": {
      "get": {
        "operationId": "Get_voice_v1_voices__voice_id__get",
        "summary": "Get Voice",
        "description": "Returns metadata about a specific voice.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "with_settings",
            "in": "query",
            "description": "This parameter is now deprecated. It is ignored and will be removed in a future version.",
            "required": false,
            "schema": {
              "description": "This parameter is now deprecated. It is ignored and will be removed in a future version.",
              "type": "boolean",
              "default": true,
              "deprecated": true,
              "title": "With Settings"
            },
            "deprecated": true
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "operationId": "Delete_voice_v1_voices__voice_id__delete",
        "summary": "Delete Voice",
        "description": "Deletes a voice by its ID.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/{voice_id}/settings/edit": {
      "post": {
        "operationId": "Edit_voice_settings_v1_voices__voice_id__settings_edit_post",
        "summary": "Edit Voice Settings",
        "description": "Edit your settings for a specific voice. \"similarity_boost\" corresponds to \"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "The settings for a specific voice.",
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditVoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "edit_settings"
      }
    },
    "/v1/voices/add": {
      "post": {
        "operationId": "Add_voice_v1_voices_add_post",
        "summary": "Add Voice",
        "description": "Add a new voice to your collection of voices in VoiceLab.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_voice_v1_voices_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceIVCResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/voices/{voice_id}/edit": {
      "post": {
        "operationId": "Edit_voice_v1_voices__voice_id__edit_post",
        "summary": "Edit Voice",
        "description": "Edit a voice created by you.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_voice_v1_voices__voice_id__edit_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "edit"
      }
    },
    "/v1/voices/add/{public_user_id}/{voice_id}": {
      "post": {
        "operationId": "Add_shared_voice_v1_voices_add__public_user_id___voice_id__post",
        "summary": "Add Shared Voice",
        "description": "Add a shared voice to your collection of voices.",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "path",
            "description": "Public user ID used to publicly identify ElevenLabs users.",
            "required": true,
            "schema": {
              "description": "Public user ID used to publicly identify ElevenLabs users.",
              "type": "string",
              "examples": [
                "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca"
              ],
              "title": "Public User Id"
            }
          },
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "add_sharing_voice"
      }
    },
    "/v1/studio/podcasts": {
      "post": {
        "operationId": "Create_podcast_v1_studio_podcasts_post",
        "summary": "Create Podcast",
        "description": "Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_podcast_v1_studio_podcasts_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": "studio",
        "x-fern-sdk-method-name": "create_podcast"
      }
    },
    "/v1/projects/podcast/create": {
      "post": {
        "operationId": "Create_podcast_v1_projects_podcast_create_post",
        "summary": "Create Podcast",
        "description": "Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_podcast_v1_projects_podcast_create_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects": {
      "get": {
        "operationId": "List_Studio_projects_v1_studio_projects_get",
        "summary": "List Studio Projects",
        "description": "Returns a list of your Studio projects with metadata.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get_all"
      },
      "post": {
        "operationId": "Create_Studio_project_v1_studio_projects_post",
        "summary": "Create Studio Project",
        "description": "Creates a new Studio project, it can be either initialized as blank, from a document or from a URL.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Studio_project_v1_studio_projects_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/projects": {
      "get": {
        "operationId": "Get_projects_v1_projects_get",
        "summary": "Get Projects",
        "description": "Returns a list of your projects together and its metadata.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/projects/add": {
      "post": {
        "operationId": "Add_project_v1_projects_add_post",
        "summary": "Add Project",
        "description": "Creates a new project, it can be either initialized as blank, from a document or from a URL.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_project_v1_projects_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}": {
      "post": {
        "operationId": "Update_Studio_project_v1_studio_projects__project_id__post",
        "summary": "Update Studio Project",
        "description": "Updates the specified Studio project by setting the values of the parameters passed.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Studio_project_v1_studio_projects__project_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "update_metadata"
      },
      "get": {
        "operationId": "Get_Studio_project_v1_studio_projects__project_id__get",
        "summary": "Get Studio Project",
        "description": "Returns information about a specific Studio project. This endpoint returns more detailed information about a project than `GET /v1/studio`.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "operationId": "Delete_Studio_project_v1_studio_projects__project_id__delete",
        "summary": "Delete Studio Project",
        "description": "Deletes a Studio project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/projects/{project_id}": {
      "post": {
        "operationId": "Edit_basic_project_info_v1_projects__project_id__post",
        "summary": "Edit Basic Project Info",
        "description": "Edits basic project info.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_basic_project_info_v1_projects__project_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      },
      "get": {
        "operationId": "Get_project_by_ID_v1_projects__project_id__get",
        "summary": "Get Project By Id",
        "description": "Returns information about a specific project. This endpoint returns more detailed information about a project than `GET /v1/projects`.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      },
      "delete": {
        "operationId": "Delete_project_v1_projects__project_id__delete",
        "summary": "Delete Project",
        "description": "Deletes a project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/content": {
      "post": {
        "operationId": "Update_Studio_project_content_v1_studio_projects__project_id__content_post",
        "summary": "Update Studio Project Content",
        "description": "Updates Studio project content.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "update_content"
      }
    },
    "/v1/projects/{project_id}/content": {
      "post": {
        "operationId": "Edit_project_content_v1_projects__project_id__content_post",
        "summary": "Edit Project Content",
        "description": "Edits project content.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_project_content_v1_projects__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/convert": {
      "post": {
        "operationId": "Convert_Studio_project_v1_studio_projects__project_id__convert_post",
        "summary": "Convert Studio Project",
        "description": "Starts conversion of a Studio project and all of its chapters.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/projects/{project_id}/convert": {
      "post": {
        "operationId": "Convert_project_v1_projects__project_id__convert_post",
        "summary": "Convert Project",
        "description": "Starts conversion of a project and all of its chapters.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/snapshots": {
      "get": {
        "operationId": "List_Studio_project_snapshots_v1_studio_projects__project_id__snapshots_get",
        "summary": "List Studio Project Snapshots",
        "description": "Retrieves a list of snapshots for a Studio project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get_snapshots"
      }
    },
    "/v1/projects/{project_id}/snapshots": {
      "get": {
        "operationId": "Get_project_snapshots_v1_projects__project_id__snapshots_get",
        "summary": "Get Project Snapshots",
        "description": "Gets the snapshots of a project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}": {
      "get": {
        "operationId": "Get_project_snapshot_v1_studio_projects__project_id__snapshots__project_snapshot_id__get",
        "summary": "Get Project Snapshot",
        "description": "Returns the project snapshot.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get_project_snapshot"
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/stream": {
      "post": {
        "operationId": "Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post",
        "summary": "Stream Studio Project Audio",
        "description": "Stream the audio from a Studio project snapshot.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "stream_audio",
        "x-fern-streaming": true
      }
    },
    "/v1/projects/{project_id}/snapshots/{project_snapshot_id}/stream": {
      "post": {
        "operationId": "Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post",
        "summary": "Stream Project Audio",
        "description": "Stream the audio from a project snapshot.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/archive": {
      "post": {
        "operationId": "Stream_archive_with_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__archive_post",
        "summary": "Stream Archive With Studio Project Audio",
        "description": "Returns a compressed archive of the Studio project's audio.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming archive data",
            "content": {
              "application/x-zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "stream_archive"
      }
    },
    "/v1/projects/{project_id}/snapshots/{project_snapshot_id}/archive": {
      "post": {
        "operationId": "Streams_archive_with_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__archive_post",
        "summary": "Streams Archive With Project Audio",
        "description": "Streams archive with project audio.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters": {
      "get": {
        "operationId": "List_chapters_v1_studio_projects__project_id__chapters_get",
        "summary": "List Chapters",
        "description": "Returns a list of a Studio project's chapters.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChaptersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get_all"
      },
      "post": {
        "operationId": "Create_chapter_v1_studio_projects__project_id__chapters_post",
        "summary": "Create Chapter",
        "description": "Creates a new chapter either as blank or from a URL.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_chapter_v1_studio_projects__project_id__chapters_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/projects/{project_id}/chapters": {
      "get": {
        "operationId": "Get_chapters_v1_projects__project_id__chapters_get",
        "summary": "Get Chapters",
        "description": "Returns a list of your chapters for a project together and its metadata.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChaptersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}": {
      "get": {
        "operationId": "Get_chapter_v1_studio_projects__project_id__chapters__chapter_id__get",
        "summary": "Get Chapter",
        "description": "Returns information about a specific chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterWithContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "post": {
        "operationId": "Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post",
        "summary": "Update Chapter",
        "description": "Updates a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "edit"
      },
      "delete": {
        "operationId": "Delete_chapter_v1_studio_projects__project_id__chapters__chapter_id__delete",
        "summary": "Delete Chapter",
        "description": "Deletes a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}": {
      "get": {
        "operationId": "Get_chapter_by_ID_v1_projects__project_id__chapters__chapter_id__get",
        "summary": "Get Chapter By Id",
        "description": "Returns information about a specific chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterWithContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      },
      "patch": {
        "operationId": "Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch",
        "summary": "Edit Chapter",
        "description": "Edits a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      },
      "delete": {
        "operationId": "Delete_chapter_v1_projects__project_id__chapters__chapter_id__delete",
        "summary": "Delete Chapter",
        "description": "Deletes a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/projects/{project_id}/chapters/add": {
      "post": {
        "operationId": "Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post",
        "summary": "Add Chapter To A Project",
        "description": "Creates a new chapter either as blank or from a URL.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/convert": {
      "post": {
        "operationId": "Convert_chapter_v1_studio_projects__project_id__chapters__chapter_id__convert_post",
        "summary": "Convert Chapter",
        "description": "Starts conversion of a specific chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/convert": {
      "post": {
        "operationId": "Convert_chapter_v1_projects__project_id__chapters__chapter_id__convert_post",
        "summary": "Convert Chapter",
        "description": "Starts conversion of a specific chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots": {
      "get": {
        "operationId": "List_chapter_snapshots_v1_studio_projects__project_id__chapters__chapter_id__snapshots_get",
        "summary": "List Chapter Snapshots",
        "description": "Gets information about all the snapshots of a chapter. Each snapshot can be downloaded as audio. Whenever a chapter is converted a snapshot will automatically be created.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get_all_snapshots"
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/snapshots": {
      "get": {
        "operationId": "List_chapter_snapshots_v1_projects__project_id__chapters__chapter_id__snapshots_get",
        "summary": "List Chapter Snapshots",
        "description": "Gets information about all the snapshots of a chapter. Each snapshot can be downloaded as audio. Whenever a chapter is converted a snapshot will automatically be created.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}": {
      "get": {
        "operationId": "Get_chapter_snapshot_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__get",
        "summary": "Get Chapter Snapshot",
        "description": "Returns the chapter snapshot.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "description": "The ID of the chapter snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get_chapter_snapshot"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream": {
      "post": {
        "operationId": "Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
        "summary": "Stream Chapter Audio",
        "description": "Stream the audio from a chapter snapshot. Use `GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the snapshots of a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "description": "The ID of the chapter snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "stream_snapshot",
        "x-fern-streaming": true
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream": {
      "post": {
        "operationId": "Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
        "summary": "Stream Chapter Audio",
        "description": "Stream the audio from a chapter snapshot. Use `GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the chapter snapshots of a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "description": "The ID of the chapter snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/pronunciation-dictionaries": {
      "post": {
        "operationId": "Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post",
        "summary": "Create Pronunciation Dictionaries",
        "description": "Create a set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "update_pronunciation_dictionaries"
      }
    },
    "/v1/projects/{project_id}/update-pronunciation-dictionaries": {
      "post": {
        "operationId": "Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post",
        "summary": "Update Pronunciation Dictionaries",
        "description": "Updates the set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/dubbing/resource/{dubbing_id}": {
      "get": {
        "operationId": "Get_the_dubbing_resource_for_an_ID__v1_dubbing_resource__dubbing_id__get",
        "summary": "Get The Dubbing Resource For An Id.",
        "description": "Given a dubbing ID generated from the '/v1/dubbing' endpoint with studio enabled, returns the dubbing resource.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingResource"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get_dubbing_resource"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/language": {
      "post": {
        "operationId": "Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post",
        "summary": "Add A Language To The Resource",
        "description": "Adds the given ElevenLab Turbo V2/V2.5 language code to the resource. Does not automatically generate transcripts/translations/audio.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageAddedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "add_language_to_resource"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}/segment": {
      "post": {
        "operationId": "Create_a_segment_for_the_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__segment_post",
        "summary": "Create A Segment For The Speaker",
        "description": "Creates a new segment in dubbing resource with a start and end time for the speaker in every available language. Does not automatically generate transcripts/translations/audio.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "speaker_id",
            "in": "path",
            "description": "ID of the speaker.",
            "required": true,
            "schema": {
              "description": "ID of the speaker.",
              "type": "string",
              "title": "Speaker Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "The text, and start and end times of a segment.",
                "$ref": "#/components/schemas/SegmentCreatePayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "create_segment_for_speaker"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/segment/{segment_id}/{language}": {
      "patch": {
        "operationId": "Modify_a_single_segment_v1_dubbing_resource__dubbing_id__segment__segment_id___language__patch",
        "summary": "Modify A Single Segment",
        "description": "Modifies a single segment with new text and/or start/end times. Will update the values for only a specific language of a segment. Does not automatically regenerate the dub.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "segment_id",
            "in": "path",
            "description": "ID of the segment",
            "required": true,
            "schema": {
              "description": "ID of the segment",
              "type": "string",
              "title": "Segment Id"
            }
          },
          {
            "name": "language",
            "in": "path",
            "description": "ID of the language.",
            "required": true,
            "schema": {
              "description": "ID of the language.",
              "type": "string",
              "title": "Language"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "The text, and start and end times of a segment.",
                "$ref": "#/components/schemas/SegmentUpdatePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "update_segment_language"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/segment/{segment_id}": {
      "delete": {
        "operationId": "Deletes_a_single_segment_v1_dubbing_resource__dubbing_id__segment__segment_id__delete",
        "summary": "Deletes A Single Segment",
        "description": "Deletes a single segment from the dubbing.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "segment_id",
            "in": "path",
            "description": "ID of the segment",
            "required": true,
            "schema": {
              "description": "ID of the segment",
              "type": "string",
              "title": "Segment Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "delete_segment"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/transcribe": {
      "post": {
        "operationId": "Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post",
        "summary": "Transcribes Segments",
        "description": "Regenerate the transcriptions for the specified segments. Does not automatically regenerate translations or dubs.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentTranscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "transcribe_segments"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/translate": {
      "post": {
        "operationId": "Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post",
        "summary": "Translates All Or Some Segments And Languages",
        "description": "Regenerate the translations for either the entire resource or the specified segments/languages. Will automatically transcribe missing transcriptions. Will not automatically regenerate the dubs.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentTranslationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "translate_segments"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/dub": {
      "post": {
        "operationId": "Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post",
        "summary": "Dubs All Or Some Segments And Languages",
        "description": "Regenerate the dubs for either the entire resource or the specified segments/languages. Will automatically transcribe and translate any missing transcriptions and translations.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentDubResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "dub_segments"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/render/{language}": {
      "post": {
        "operationId": "Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post",
        "summary": "Render Audio Or Video For The Given Language",
        "description": "Regenerate the dubs for either the entire resource or the specified segments/languages. Will automatically transcribe and translate any missing transcriptions and translations.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "language",
            "in": "path",
            "description": "Render this language",
            "required": true,
            "schema": {
              "description": "Render this language",
              "type": "string",
              "title": "Language"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingRenderResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "render_dub"
      }
    },
    "/v1/dubbing": {
      "post": {
        "operationId": "Dub_a_video_or_an_audio_file_v1_dubbing_post",
        "summary": "Dub A Video Or An Audio File",
        "description": "Dubs a provided audio or video file into given language.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "dub_a_video_or_an_audio_file"
      }
    },
    "/v1/dubbing/{dubbing_id}": {
      "get": {
        "operationId": "Get_dubbing_v1_dubbing__dubbing_id__get",
        "summary": "Get Dubbing",
        "description": "Returns metadata about a dubbing project, including whether it's still in progress or not",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingMetadataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get_dubbing_project_metadata"
      },
      "delete": {
        "operationId": "Delete_dubbing_v1_dubbing__dubbing_id__delete",
        "summary": "Delete Dubbing",
        "description": "Deletes a dubbing project.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "delete_dubbing_project"
      }
    },
    "/v1/dubbing/{dubbing_id}/audio/{language_code}": {
      "get": {
        "operationId": "Get_dubbed_file_v1_dubbing__dubbing_id__audio__language_code__get",
        "summary": "Get Dubbed File",
        "description": "Returns dubbed file as a streamed file. Videos will be returned in MP4 format and audio only dubs will be returned in MP3.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "language_code",
            "in": "path",
            "description": "ID of the language.",
            "required": true,
            "schema": {
              "description": "ID of the language.",
              "type": "string",
              "title": "Language Code"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The dubbed audio or video file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "video/mp4": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "example": {
                  "error": "permission_denied",
                  "message": "User does not have required permissions"
                }
              }
            }
          },
          "404": {
            "description": "Dubbing not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_found",
                  "message": "There is no dubbing for language {language_code}."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "425": {
            "description": "Dubbing not ready",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_dubbed",
                  "message": "Dubbing has not finished yet."
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get_dubbed_file"
      }
    },
    "/v1/dubbing/{dubbing_id}/transcript/{language_code}": {
      "get": {
        "operationId": "Get_dubbed_transcript_v1_dubbing__dubbing_id__transcript__language_code__get",
        "summary": "Get Dubbed Transcript",
        "description": "Returns transcript for the dub as an SRT or WEBVTT file.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "language_code",
            "in": "path",
            "description": "ID of the language.",
            "required": true,
            "schema": {
              "description": "ID of the language.",
              "type": "string",
              "title": "Language Code"
            }
          },
          {
            "name": "format_type",
            "in": "query",
            "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
            "required": false,
            "schema": {
              "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
              "type": "string",
              "default": "srt",
              "embed": true,
              "enum": [
                "srt",
                "webvtt"
              ],
              "title": "Format Type"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "1\n00:00:01,000 --> 00:00:04,000\nHello, this is the first subtitle line\n\n2\n00:00:05,000 --> 00:00:07,000\nAnd here's the second subtitle line"
              }
            }
          },
          "403": {
            "description": "Anonymous users cannot use this function",
            "content": {
              "application/json": {
                "example": {
                  "error": "anonymous_not_allowed",
                  "message": "Anonymous users cannot use this function"
                }
              }
            }
          },
          "404": {
            "description": "Dubbing or transcript not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "transcript_not_found",
                  "message": "No transcript was found for the dub."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "425": {
            "description": "Dubbing not ready",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_dubbed",
                  "message": "Dubbing has not finished yet."
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get_transcript_for_dub"
      }
    },
    "/v1/models": {
      "get": {
        "operationId": "Get_Models_v1_models_get",
        "summary": "Get Models",
        "description": "Gets a list of available models.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelResponseModel"
                  },
                  "title": "Response Get Models V1 Models Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "models"
        ],
        "x-fern-sdk-group-name": "models",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v1/audio-native": {
      "post": {
        "operationId": "Creates_Audio_Native_enabled_project__v1_audio_native_post",
        "summary": "Creates Audio Native Enabled Project.",
        "description": "Creates Audio Native enabled project, optionally starts conversion and returns project ID and embeddable HTML snippet.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Creates_Audio_Native_enabled_project__v1_audio_native_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeCreateProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-native"
        ],
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/audio-native/{project_id}/settings": {
      "get": {
        "operationId": "Get_Audio_Native_project_settings_v1_audio_native__project_id__settings_get",
        "summary": "Get Audio Native Project Settings",
        "description": "Get player settings for the specific project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAudioNativeProjectSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-native"
        ],
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "get_settings"
      }
    },
    "/v1/audio-native/{project_id}/content": {
      "post": {
        "operationId": "Update_audio_native_Project_content_v1_audio_native__project_id__content_post",
        "summary": "Update Audio-Native Project Content",
        "description": "Updates content for the specific AudioNative Project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeEditContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-native"
        ],
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "update_content"
      }
    },
    "/v1/shared-voices": {
      "get": {
        "operationId": "Get_voices_v1_shared_voices_get",
        "summary": "Get Voices",
        "description": "Retrieves a list of shared voices.",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "title": "Page Size"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Voice category used for filtering",
            "required": false,
            "schema": {
              "description": "Voice category used for filtering",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "enum": [
                "professional",
                "famous",
                "high_quality"
              ],
              "examples": [
                "professional"
              ],
              "title": "Category"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Gender used for filtering",
            "required": false,
            "schema": {
              "description": "Gender used for filtering",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "male"
              ],
              "title": "Gender"
            }
          },
          {
            "name": "age",
            "in": "query",
            "description": "Age used for filtering",
            "required": false,
            "schema": {
              "description": "Age used for filtering",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "young"
              ],
              "title": "Age"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Accent used for filtering",
            "required": false,
            "schema": {
              "description": "Accent used for filtering",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "american"
              ],
              "title": "Accent"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language used for filtering",
            "required": false,
            "schema": {
              "description": "Language used for filtering",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "en"
              ],
              "title": "Language"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale used for filtering",
            "required": false,
            "schema": {
              "description": "Locale used for filtering",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "en-US"
              ],
              "title": "Locale"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term used for filtering",
            "required": false,
            "schema": {
              "description": "Search term used for filtering",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "tiktok"
              ],
              "title": "Search"
            }
          },
          {
            "name": "use_cases",
            "in": "query",
            "description": "Use-case used for filtering",
            "required": false,
            "schema": {
              "description": "Use-case used for filtering",
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "audiobook"
              ],
              "title": "Use Cases"
            }
          },
          {
            "name": "descriptives",
            "in": "query",
            "description": "Search term used for filtering",
            "required": false,
            "schema": {
              "description": "Search term used for filtering",
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "tiktok"
              ],
              "title": "Descriptives"
            }
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Filter featured voices",
            "required": false,
            "schema": {
              "description": "Filter featured voices",
              "type": "boolean",
              "default": false,
              "examples": [
                true
              ],
              "title": "Featured"
            }
          },
          {
            "name": "min_notice_period_days",
            "in": "query",
            "description": "Filter voices with a minimum notice period of the given number of days.",
            "required": false,
            "schema": {
              "description": "Filter voices with a minimum notice period of the given number of days.",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                30
              ],
              "title": "Min Notice Period Days"
            }
          },
          {
            "name": "reader_app_enabled",
            "in": "query",
            "description": "Filter voices that are enabled for the reader app",
            "required": false,
            "schema": {
              "description": "Filter voices that are enabled for the reader app",
              "type": "boolean",
              "default": false,
              "examples": [
                true
              ],
              "title": "Reader App Enabled"
            }
          },
          {
            "name": "owner_id",
            "in": "query",
            "description": "Filter voices by public owner ID",
            "required": false,
            "schema": {
              "description": "Filter voices by public owner ID",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "7c9fab611d9a0e1fb2e7448a0c294a8804efc2bcc324b0a366a5d5232b7d1532"
              ],
              "title": "Owner Id"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort criteria",
            "required": false,
            "schema": {
              "description": "Sort criteria",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "created_date"
              ],
              "title": "Sort"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_shared"
      }
    },
    "/v1/similar-voices": {
      "post": {
        "operationId": "Get_similar_library_voices_v1_similar_voices_post",
        "summary": "Get Similar Library Voices",
        "description": "Returns a list of shared voices similar to the provided audio sample. If neither similarity_threshold nor top_k is provided, we will apply default values.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Get_similar_library_voices_v1_similar_voices_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_similar_library_voices"
      }
    },
    "/v1/usage/character-stats": {
      "get": {
        "operationId": "Get_character_usage_metrics_v1_usage_character_stats_get",
        "summary": "Get Character Usage Metrics",
        "description": "Returns the credit usage metrics for the current user or the entire workspace they are part of. The response will return a time axis with unix timestamps for each day and daily usage along that axis. The usage will be broken down by the specified breakdown type. For example, breakdown type \"voice\" will return the usage of each voice along the time axis.",
        "parameters": [
          {
            "name": "start_unix",
            "in": "query",
            "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day.",
            "required": true,
            "schema": {
              "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day.",
              "type": "integer",
              "examples": [
                "1685574000"
              ],
              "title": "Start Unix"
            }
          },
          {
            "name": "end_unix",
            "in": "query",
            "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day.",
            "required": true,
            "schema": {
              "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day.",
              "type": "integer",
              "examples": [
                "1688165999"
              ],
              "title": "End Unix"
            }
          },
          {
            "name": "include_workspace_metrics",
            "in": "query",
            "description": "Whether or not to include the statistics of the entire workspace.",
            "required": false,
            "schema": {
              "description": "Whether or not to include the statistics of the entire workspace.",
              "type": "boolean",
              "default": false,
              "title": "Include Workspace Metrics"
            }
          },
          {
            "name": "breakdown_type",
            "in": "query",
            "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
            "required": false,
            "schema": {
              "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
              "default": "none",
              "$ref": "#/components/schemas/BreakdownTypes"
            }
          },
          {
            "name": "aggregation_interval",
            "in": "query",
            "description": "How to aggregate usage data over time. Can be \"hour\", \"day\", \"week\", \"month\", or \"cumulative\".",
            "required": false,
            "schema": {
              "description": "How to aggregate usage data over time. Can be \"hour\", \"day\", \"week\", \"month\", or \"cumulative\".",
              "default": "day",
              "$ref": "#/components/schemas/UsageAggregationInterval"
            }
          },
          {
            "name": "metric",
            "in": "query",
            "description": "Which metric to aggregate.",
            "required": false,
            "schema": {
              "description": "Which metric to aggregate.",
              "default": "credits",
              "$ref": "#/components/schemas/MetricType"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageCharactersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "usage"
        ],
        "x-fern-sdk-group-name": "usage",
        "x-fern-sdk-method-name": "get_characters_usage_metrics"
      }
    },
    "/v1/pronunciation-dictionaries/add-from-file": {
      "post": {
        "operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post",
        "summary": "Add A Pronunciation Dictionary",
        "description": "Creates a new pronunciation dictionary from a lexicon .PLS file",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "add_from_file"
      }
    },
    "/v1/pronunciation-dictionaries/add-from-rules": {
      "post": {
        "operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post",
        "summary": "Add A Pronunciation Dictionary",
        "description": "Creates a new pronunciation dictionary from provided rules.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "add_from_rules"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/add-rules": {
      "post": {
        "operationId": "Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post",
        "summary": "Add Rules To The Pronunciation Dictionary",
        "description": "Add rules to the pronunciation dictionary",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "description": "The id of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PronunciationDictionaryRulesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "add_rules"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/remove-rules": {
      "post": {
        "operationId": "Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post",
        "summary": "Remove Rules From The Pronunciation Dictionary",
        "description": "Remove rules from the pronunciation dictionary",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "description": "The id of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PronunciationDictionaryRulesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "remove_rules"
      }
    },
    "/v1/pronunciation-dictionaries/{dictionary_id}/{version_id}/download": {
      "get": {
        "operationId": "Get_a_PLS_file_with_a_pronunciation_dictionary_version_rules_v1_pronunciation_dictionaries__dictionary_id___version_id__download_get",
        "summary": "Get A Pls File With A Pronunciation Dictionary Version Rules",
        "description": "Get a PLS file with a pronunciation dictionary version rules",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "description": "The id of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Dictionary Id"
            }
          },
          {
            "name": "version_id",
            "in": "path",
            "description": "The id of the version of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the version of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "BdF0s0aZ3oFoKnDYdTox"
              ],
              "title": "Version Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The PLS file containing pronunciation dictionary rules",
            "headers": {
              "Content-Disposition": {
                "description": "Attachment filename",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "download"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/": {
      "get": {
        "operationId": "Get_metadata_for_a_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id___get",
        "summary": "Get Metadata For A Pronunciation Dictionary",
        "description": "Get metadata for a pronunciation dictionary",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "description": "The id of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/pronunciation-dictionaries/": {
      "get": {
        "operationId": "Get_Pronunciation_Dictionaries_v1_pronunciation_dictionaries__get",
        "summary": "Get Pronunciation Dictionaries",
        "description": "Get a list of the pronunciation dictionaries you have access to and their metadata",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Which field to sort by, one of 'created_at_unix' or 'name'.",
            "required": false,
            "schema": {
              "description": "Which field to sort by, one of 'created_at_unix' or 'name'.",
              "default": "creation_time_unix",
              "anyOf": [
                {
                  "enum": [
                    "creation_time_unix",
                    "name"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "creation_time_unix"
              ],
              "title": "Sort"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Which direction to sort the voices in. 'ascending' or 'descending'.",
            "required": false,
            "schema": {
              "description": "Which direction to sort the voices in. 'ascending' or 'descending'.",
              "default": "DESCENDING",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "descending"
              ],
              "title": "Sort Direction"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPronunciationDictionariesMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v1/workspace/groups/search": {
      "get": {
        "operationId": "Search_user_groups_v1_workspace_groups_search_get",
        "summary": "Search User Groups",
        "description": "Searches for user groups in the workspace. Multiple or no groups may be returned.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the target group.",
            "required": true,
            "schema": {
              "description": "Name of the target group.",
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": true,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceGroupByNameResponseModel"
                  },
                  "title": "Response Search User Groups V1 Workspace Groups Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/groups/{group_id}/members/remove": {
      "post": {
        "operationId": "Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post",
        "summary": "Delete Member From User Group",
        "description": "Removes a member from the specified group. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "The ID of the target group.",
            "required": true,
            "schema": {
              "description": "The ID of the target group.",
              "type": "string",
              "title": "Group Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": true,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceGroupMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/groups/{group_id}/members": {
      "post": {
        "operationId": "Add_member_to_user_group_v1_workspace_groups__group_id__members_post",
        "summary": "Add Member To User Group",
        "description": "Adds a member of your workspace to the specified group. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "The ID of the target group.",
            "required": true,
            "schema": {
              "description": "The ID of the target group.",
              "type": "string",
              "title": "Group Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": true,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceGroupMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/invites/add": {
      "post": {
        "operationId": "Invite_user_v1_workspace_invites_add_post",
        "summary": "Invite User",
        "description": "Sends an email invitation to join your workspace to the provided email. If the user doesn't have an account they will be prompted to create one. If the user accepts this invite they will be added as a user to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators. If the user is already in the workspace a 400 error will be returned.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Invite_user_v1_workspace_invites_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/invites/add-bulk": {
      "post": {
        "operationId": "Invite_multiple_users_v1_workspace_invites_add_bulk_post",
        "summary": "Invite Multiple Users",
        "description": "Sends email invitations to join your workspace to the provided emails. Requires all email addresses to be part of a verified domain. If the users don't have an account they will be prompted to create one. If the users accept these invites they will be added as users to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/invites": {
      "delete": {
        "operationId": "Delete_existing_invitation_v1_workspace_invites_delete",
        "summary": "Delete Existing Invitation",
        "description": "Invalidates an existing email invitation. The invitation will still show up in the inbox it has been delivered to, but activating it to join the workspace won't work. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_existing_invitation_v1_workspace_invites_delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/members": {
      "post": {
        "operationId": "Update_member_v1_workspace_members_post",
        "summary": "Update Member",
        "description": "Updates attributes of a workspace member. Apart from the email identifier, all parameters will remain unchanged unless specified. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_member_v1_workspace_members_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkspaceMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      },
      "delete": {
        "operationId": "Delete_member_v1_workspace_members_delete",
        "summary": "Delete Member",
        "description": "Deletes a workspace member. This endpoint may only be called by workspace administrators.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_member_v1_workspace_members_delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/resources/{resource_id}": {
      "get": {
        "operationId": "Get_resource_v1_workspace_resources__resource_id__get",
        "summary": "Get Resource",
        "description": "Gets the metadata of a resource by ID.",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "description": "The ID of the target resource.",
            "required": true,
            "schema": {
              "description": "The ID of the target resource.",
              "type": "string",
              "title": "Resource Id"
            }
          },
          {
            "name": "resource_type",
            "in": "query",
            "description": "Resource type of the target resource.",
            "required": true,
            "schema": {
              "description": "Resource type of the target resource.",
              "$ref": "#/components/schemas/WorkspaceResourceType"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/resources/{resource_id}/share": {
      "post": {
        "operationId": "Share_workspace_resource_v1_workspace_resources__resource_id__share_post",
        "summary": "Share Workspace Resource",
        "description": "Grants a role on a workspace resource to a user or a group. It overrides any existing role this user/group/workspace api key has on the resource. To target a user, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. You must have admin access to the resource to share it.",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "description": "The ID of the target resource.",
            "required": true,
            "schema": {
              "description": "The ID of the target resource.",
              "type": "string",
              "title": "Resource Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/resources/{resource_id}/unshare": {
      "post": {
        "operationId": "Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post",
        "summary": "Unshare Workspace Resource",
        "description": "Removes any existing role on a workspace resource from a user or a group. To target a user, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. You must have admin access to the resource to unshare it. You cannot remove permissions from the user who created the resource.",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "description": "The ID of the target resource.",
            "required": true,
            "schema": {
              "description": "The ID of the target resource.",
              "type": "string",
              "title": "Resource Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/profile/{handle}": {
      "get": {
        "operationId": "Get_a_profile_page_profile__handle__get",
        "summary": "Get A Profile Page",
        "description": "Gets a profile page based on a handle",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "description": "Handle for a VA's profile page",
            "required": true,
            "schema": {
              "description": "Handle for a VA's profile page",
              "type": "string",
              "examples": [
                "talexgeorge"
              ],
              "title": "Handle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "profile",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/speech-to-text": {
      "post": {
        "operationId": "Speech_to_Text_v1_speech_to_text_post",
        "summary": "Speech To Text",
        "description": "Transcribe an audio or video file.",
        "parameters": [
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Text_v1_speech_to_text_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-to-text"
        ],
        "x-fern-sdk-group-name": "speech_to_text",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/forced-alignment": {
      "post": {
        "operationId": "Create_forced_alignment_v1_forced_alignment_post",
        "summary": "Create Forced Alignment",
        "description": "Force align an audio file to text. Use this endpoint to get the timing information for each character and word in an audio file based on a provided text transcript.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_forced_alignment_v1_forced_alignment_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForcedAlignmentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "forced-alignment"
        ],
        "x-fern-sdk-group-name": "forced_alignment",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/conversation/get_signed_url": {
      "get": {
        "operationId": "Get_Signed_Url_v1_convai_conversation_get_signed_url_get",
        "summary": "Get Signed Url",
        "description": "Get a signed url to start a conversation with an agent with an agent that requires authorization",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "description": "The id of the agent you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the agent you're taking the action on.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationSignedUrlResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_signed_url"
      }
    },
    "/v1/convai/twilio/outbound_call": {
      "post": {
        "operationId": "Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post",
        "summary": "Handle An Outbound Call Via Twilio",
        "description": "Handle an outbound call via Twilio",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwilioOutboundCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "twilio_outbound_call"
      }
    },
    "/v1/convai/agents/create": {
      "post": {
        "operationId": "Create_Agent_v1_convai_agents_create_post",
        "summary": "Create Agent",
        "description": "Create an agent from a config object",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Agent_v1_convai_agents_create_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "create_agent"
      }
    },
    "/v1/convai/agents/{agent_id}": {
      "get": {
        "operationId": "Get_Agent_v1_convai_agents__agent_id__get",
        "summary": "Get Agent",
        "description": "Retrieve config for an agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_agent"
      },
      "patch": {
        "operationId": "Patches_an_Agent_settings_v1_convai_agents__agent_id__patch",
        "summary": "Patches An Agent Settings",
        "description": "Patches an Agent settings",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "update_agent"
      },
      "delete": {
        "operationId": "Delete_Agent_v1_convai_agents__agent_id__delete",
        "summary": "Delete Agent",
        "description": "Delete an agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "204": {
            "description": "Agent successfully deleted"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_agent"
      }
    },
    "/v1/convai/agents/{agent_id}/widget": {
      "get": {
        "operationId": "Get_Agent_widget_config_v1_convai_agents__agent_id__widget_get",
        "summary": "Get Agent Widget Config",
        "description": "Retrieve the widget configuration for an agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "conversation_signature",
            "in": "query",
            "description": "An expiring token that enables a conversation to start. These can be generated for an agent using the /v1/convai/conversation/get_signed_url endpoint",
            "required": false,
            "schema": {
              "description": "An expiring token that enables a conversation to start. These can be generated for an agent using the /v1/convai/conversation/get_signed_url endpoint",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Conversation Signature"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentEmbedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_agent_widget"
      }
    },
    "/v1/convai/agents/{agent_id}/link": {
      "get": {
        "operationId": "Get_shareable_agent_link_v1_convai_agents__agent_id__link_get",
        "summary": "Get Shareable Agent Link",
        "description": "Get the current link used to share the agent with others",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentLinkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_agent_link"
      }
    },
    "/v1/convai/agents/{agent_id}/avatar": {
      "post": {
        "operationId": "Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post",
        "summary": "Post Agent Avatar",
        "description": "Sets the avatar for an agent displayed in the widget",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostAgentAvatarResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "post_agent_avatar"
      }
    },
    "/v1/convai/agents": {
      "get": {
        "operationId": "List_agents_v1_convai_agents_get",
        "summary": "List Agents",
        "description": "Returns a list of your agents and their metadata.",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by agents name.",
            "required": false,
            "schema": {
              "description": "Search by agents name.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_agents"
      }
    },
    "/v1/convai/conversations": {
      "get": {
        "operationId": "Get_Conversations_v1_convai_conversations_get",
        "summary": "Get Conversations",
        "description": "Get all conversations of agents that user owns. With option to restrict to a specific agent.",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "agent_id",
            "in": "query",
            "description": "The id of the agent you're taking the action on.",
            "required": false,
            "schema": {
              "description": "The id of the agent you're taking the action on.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "call_successful",
            "in": "query",
            "description": "The result of the success evaluation",
            "required": false,
            "schema": {
              "description": "The result of the success evaluation",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EvaluationSuccessResult"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "success"
              ],
              "title": "Call Successful"
            }
          },
          {
            "name": "call_start_before_unix",
            "in": "query",
            "description": "Unix timestamp (in seconds) to filter conversations up to this start date.",
            "required": false,
            "schema": {
              "description": "Unix timestamp (in seconds) to filter conversations up to this start date.",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Call Start Before Unix"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConversationsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_conversations"
      }
    },
    "/v1/convai/conversations/{conversation_id}": {
      "get": {
        "operationId": "Get_Conversation_Details_v1_convai_conversations__conversation_id__get",
        "summary": "Get Conversation Details",
        "description": "Get the details of a particular conversation",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the conversation you're taking the action on.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Conversation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConversationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_conversation"
      },
      "delete": {
        "operationId": "Delete_Conversation_v1_convai_conversations__conversation_id__delete",
        "summary": "Delete Conversation",
        "description": "Delete a particular conversation",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the conversation you're taking the action on.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Conversation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_conversation"
      }
    },
    "/v1/convai/conversations/{conversation_id}/audio": {
      "get": {
        "operationId": "Get_Conversation_Audio_v1_convai_conversations__conversation_id__audio_get",
        "summary": "Get Conversation Audio",
        "description": "Get the audio recording of a particular conversation",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the conversation you're taking the action on.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Conversation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_conversation_audio",
        "x-fern-streaming": true
      }
    },
    "/v1/convai/conversations/{conversation_id}/feedback": {
      "post": {
        "operationId": "Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post",
        "summary": "Send Conversation Feedback",
        "description": "Send the feedback for the given conversation",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the conversation you're taking the action on.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "post_conversation_feedback"
      }
    },
    "/v1/convai/phone-numbers/create": {
      "post": {
        "operationId": "Import_phone_number_v1_convai_phone_numbers_create_post",
        "summary": "Import Phone Number",
        "description": "Import Phone Number from provider configuration (Twilio or SIP trunk)",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Create Phone Request Information",
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/CreateTwilioPhoneNumberRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateSIPTrunkPhoneNumberRequest"
                  }
                ],
                "title": "Phone Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePhoneNumberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "create_phone_number"
      }
    },
    "/v1/convai/phone-numbers/{phone_number_id}": {
      "get": {
        "operationId": "Get_phone_number_v1_convai_phone_numbers__phone_number_id__get",
        "summary": "Get Phone Number",
        "description": "Retrieve Phone Number details by ID",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "title": "Phone Number Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhoneNumberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_phone_number"
      },
      "delete": {
        "operationId": "Delete_phone_number_v1_convai_phone_numbers__phone_number_id__delete",
        "summary": "Delete Phone Number",
        "description": "Delete Phone Number by ID",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "title": "Phone Number Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_phone_number"
      },
      "patch": {
        "operationId": "Update_phone_number_v1_convai_phone_numbers__phone_number_id__patch",
        "summary": "Update Phone Number",
        "description": "Update Phone Number details by ID",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "title": "Phone Number Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Patch Phone Request Information",
                "$ref": "#/components/schemas/UpdatePhoneNumberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhoneNumberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "update_phone_number"
      }
    },
    "/v1/convai/phone-numbers/": {
      "get": {
        "operationId": "List_phone_numbers_v1_convai_phone_numbers__get",
        "summary": "List Phone Numbers",
        "description": "Retrieve all Phone Numbers",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetPhoneNumberResponseModel"
                  },
                  "title": "Response List Phone Numbers V1 Convai Phone Numbers  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_phone_numbers"
      }
    },
    "/v1/convai/knowledge-base": {
      "post": {
        "operationId": "Add_to_knowledge_base_v1_convai_knowledge_base_post",
        "summary": "Add To Knowledge Base",
        "description": "Uploads a file or reference a webpage to use as part of the shared knowledge base",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_to_knowledge_base_v1_convai_knowledge_base_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "add_to_knowledge_base"
      },
      "get": {
        "operationId": "Get_knowledge_base_list_v1_convai_knowledge_base_get",
        "summary": "Get Knowledge Base List",
        "description": "Get a list of available knowledge base documents",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "If specified, the endpoint returns only such knowledge base documents whose names start with this string.",
            "required": false,
            "schema": {
              "description": "If specified, the endpoint returns only such knowledge base documents whose names start with this string.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "show_only_owned_documents",
            "in": "query",
            "description": "If set to true, the endpoint will return only documents owned by you (and not shared from somebody else).",
            "required": false,
            "schema": {
              "description": "If set to true, the endpoint will return only documents owned by you (and not shared from somebody else).",
              "type": "boolean",
              "default": false,
              "title": "Show Only Owned Documents"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "If present, the endpoint will return only documents of the given types.",
            "required": false,
            "schema": {
              "description": "If present, the endpoint will return only documents of the given types.",
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBaseDocumentType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Types"
            }
          },
          {
            "name": "use_typesense",
            "in": "query",
            "description": "If set to true, the endpoint will use typesense DB to search for the documents).",
            "required": false,
            "schema": {
              "description": "If set to true, the endpoint will use typesense DB to search for the documents).",
              "type": "boolean",
              "default": false,
              "title": "Use Typesense"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_knowledge_base_list"
      }
    },
    "/v1/convai/add-to-knowledge-base": {
      "post": {
        "operationId": "Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post",
        "summary": "Add To Knowledge Base",
        "description": "Uploads a file or reference a webpage for the agent to use as part of it's knowledge base",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai"
      }
    },
    "/v1/convai/agents/{agent_id}/add-to-knowledge-base": {
      "post": {
        "operationId": "Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post",
        "summary": "Add To Knowledge Base",
        "description": "Uploads a file or reference a webpage for the agent to use as part of it's knowledge base",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai"
      }
    },
    "/v1/convai/knowledge-base/url": {
      "post": {
        "operationId": "Create_URL_document_v1_convai_knowledge_base_url_post",
        "summary": "Create Url Document",
        "description": "Create a knowledge base document generated by scraping the given webpage.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_URL_document_v1_convai_knowledge_base_url_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "create_knowledge_base_url_document"
      }
    },
    "/v1/convai/knowledge-base/file": {
      "post": {
        "operationId": "Create_file_document_v1_convai_knowledge_base_file_post",
        "summary": "Create File Document",
        "description": "Create a knowledge base document generated form the uploaded file.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_file_document_v1_convai_knowledge_base_file_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "create_knowledge_base_file_document"
      }
    },
    "/v1/convai/knowledge-base/text": {
      "post": {
        "operationId": "Create_text_document_v1_convai_knowledge_base_text_post",
        "summary": "Create Text Document",
        "description": "Create a knowledge base document containing the provided text.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_text_document_v1_convai_knowledge_base_text_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "create_knowledge_base_text_document"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/rag-index": {
      "post": {
        "operationId": "Compute_RAG_index__v1_convai_knowledge_base__documentation_id__rag_index_post",
        "summary": "Compute Rag Index.",
        "description": "In case the document is not RAG indexed, it triggers rag indexing task, otherwise it just returns the current status.",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Payload for RAG index status endpoint.",
                "$ref": "#/components/schemas/RAGIndexRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGIndexResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "rag_index_status"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}": {
      "get": {
        "operationId": "Get_documentation_from_knowledge_base_v1_convai_knowledge_base__documentation_id__get",
        "summary": "Get Documentation From Knowledge Base",
        "description": "Get details about a specific documentation making up the agent's knowledge base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "url": "#/components/schemas/GetKnowledgeBaseURLResponseModel",
                      "file": "#/components/schemas/GetKnowledgeBaseFileResponseModel",
                      "text": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseURLResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseFileResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  ],
                  "title": "Response Get Documentation From Knowledge Base V1 Convai Knowledge Base  Documentation Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_knowledge_base_document_by_id"
      },
      "delete": {
        "operationId": "Delete_knowledge_base_document_v1_convai_knowledge_base__documentation_id__delete",
        "summary": "Delete Knowledge Base Document",
        "description": "Delete a document from the knowledge base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_knowledge_base_document"
      }
    },
    "/v1/convai/agents/{agent_id}/knowledge-base/{documentation_id}": {
      "get": {
        "operationId": "Get_documentation_from_knowledge_base_v1_convai_agents__agent_id__knowledge_base__documentation_id__get",
        "summary": "Get Documentation From Knowledge Base",
        "description": "Get details about a specific documentation making up the agent's knowledge base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "url": "#/components/schemas/GetKnowledgeBaseURLResponseModel",
                      "file": "#/components/schemas/GetKnowledgeBaseFileResponseModel",
                      "text": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseURLResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseFileResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  ],
                  "title": "Response Get Documentation From Knowledge Base V1 Convai Agents  Agent Id  Knowledge Base  Documentation Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/dependent-agents": {
      "get": {
        "operationId": "Get_dependent_agents_list_v1_convai_knowledge_base__documentation_id__dependent_agents_get",
        "summary": "Get Dependent Agents List",
        "description": "Get a list of agents depending on this knowledge base document",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseDependentAgentsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_dependent_agents"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/content": {
      "get": {
        "operationId": "Get_document_content_v1_convai_knowledge_base__documentation_id__content_get",
        "summary": "Get Document Content",
        "description": "Get the entire content of a document from the knowledge base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming document content",
            "content": {
              "text/html": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_knowledge_base_document_content",
        "x-fern-sdk-streaming": true
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/chunk/{chunk_id}": {
      "get": {
        "operationId": "Get_documentation_chunk_from_knowledge_base_v1_convai_knowledge_base__documentation_id__chunk__chunk_id__get",
        "summary": "Get Documentation Chunk From Knowledge Base",
        "description": "Get details about a specific documentation part used by RAG.",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "chunk_id",
            "in": "path",
            "description": "The id of a document RAG chunk from the knowledge base.",
            "required": true,
            "schema": {
              "description": "The id of a document RAG chunk from the knowledge base.",
              "type": "string",
              "embed": true,
              "examples": [
                1
              ],
              "title": "Chunk Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseDocumentChunkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_knowledge_base_document_part_by_id"
      }
    },
    "/v1/convai/settings": {
      "get": {
        "operationId": "Get_Convai_settings_v1_convai_settings_get",
        "summary": "Get Convai Settings",
        "description": "Retrieve Convai settings for the workspace",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAISettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_settings"
      },
      "patch": {
        "operationId": "Update_Convai_settings_v1_convai_settings_patch",
        "summary": "Update Convai Settings",
        "description": "Update Convai settings for the workspace",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Convai settings to update",
                "$ref": "#/components/schemas/PatchConvAISettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAISettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "update_settings"
      }
    },
    "/v1/convai/settings/dashboard": {
      "get": {
        "operationId": "Get_Convai_dashboard_settings_v1_convai_settings_dashboard_get",
        "summary": "Get Convai Dashboard Settings",
        "description": "Retrieve Convai dashboard settings for the workspace",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAIDashboardSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_dashboard_settings"
      },
      "patch": {
        "operationId": "Update_Convai_dashboard_settings_v1_convai_settings_dashboard_patch",
        "summary": "Update Convai Dashboard Settings",
        "description": "Update Convai dashboard settings for the workspace",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Convai dashboard settings to update",
                "$ref": "#/components/schemas/PatchConvAIDashboardSettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAIDashboardSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "update_dashboard_settings"
      }
    },
    "/v1/convai/secrets": {
      "post": {
        "operationId": "Create_ConvAI_workspace_secret_v1_convai_secrets_post",
        "summary": "Create Convai Workspace Secret",
        "description": "Create a new secret for the workspace",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Secret to create",
                "$ref": "#/components/schemas/PostWorkspaceSecretRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWorkspaceSecretResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "create_secret"
      },
      "get": {
        "operationId": "Get_ConvAI_workspace_secrets_v1_convai_secrets_get",
        "summary": "Get Convai Workspace Secrets",
        "description": "Get all workspace secrets for the user",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkspaceSecretsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_secrets"
      }
    },
    "/v1/convai/secrets/{secret_id}": {
      "delete": {
        "operationId": "Delete_ConvAI_workspace_secret_v1_convai_secrets__secret_id__delete",
        "summary": "Delete Convai Workspace Secret",
        "description": "Delete a workspace secret if it's not in use",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Secret Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_secret"
      }
    },
    "/v1/voices/pvc": {
      "post": {
        "operationId": "Create_PVC_voice_v1_voices_pvc_post",
        "summary": "Create Pvc Voice",
        "description": "Creates a new PVC voice with metadata but no samples",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_PVC_voice_v1_voices_pvc_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/voices/pvc/{voice_id}": {
      "post": {
        "operationId": "Edit_PVC_voice_v1_voices_pvc__voice_id__post",
        "summary": "Edit Pvc Voice",
        "description": "Edit PVC voice metadata",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples": {
      "post": {
        "operationId": "Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post",
        "summary": "Add Samples To Pvc Voice",
        "description": "Add audio samples to a PVC voice",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SampleResponseModel"
                  },
                  "title": "Response Add Samples To Pvc Voice V1 Voices Pvc  Voice Id  Samples Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}": {
      "post": {
        "operationId": "Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post",
        "summary": "Update Pvc Voice Sample",
        "description": "Update a PVC voice sample - apply noise removal, or select speaker.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used",
            "required": true,
            "schema": {
              "description": "Sample ID to be used",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "operationId": "Delete_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__delete",
        "summary": "Delete Pvc Voice Sample",
        "description": "Delete a sample from a PVC voice.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used",
            "required": true,
            "schema": {
              "description": "Sample ID to be used",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVoiceSampleResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/audio": {
      "get": {
        "operationId": "Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get",
        "summary": "Retrieve Voice Sample Audio",
        "description": "Retrieve the first 30 seconds of voice sample audio with or without noise removal.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used",
            "required": true,
            "schema": {
              "description": "Sample ID to be used",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSamplePreviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/waveform": {
      "get": {
        "operationId": "Retrieve_voice_sample_visual_waveform_v1_voices_pvc__voice_id__samples__sample_id__waveform_get",
        "summary": "Retrieve Voice Sample Visual Waveform",
        "description": "Retrieve the visual waveform of a voice sample.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used",
            "required": true,
            "schema": {
              "description": "Sample ID to be used",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSampleVisualWaveformResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "waveform"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/speakers": {
      "get": {
        "operationId": "Retrieve_speaker_separation_status_v1_voices_pvc__voice_id__samples__sample_id__speakers_get",
        "summary": "Retrieve Speaker Separation Status",
        "description": "Retrieve the status of the speaker separation process and the list of detected speakers if complete.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used",
            "required": true,
            "schema": {
              "description": "Sample ID to be used",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerSeparationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "speakers"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/separate-speakers": {
      "post": {
        "operationId": "Start_speaker_separation_v1_voices_pvc__voice_id__samples__sample_id__separate_speakers_post",
        "summary": "Start Speaker Separation",
        "description": "Start speaker separation process for a sample",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used",
            "required": true,
            "schema": {
              "description": "Sample ID to be used",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartSpeakerSeparationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "speakers"
        ],
        "x-fern-sdk-method-name": "separate"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/speakers/{speaker_id}/audio": {
      "get": {
        "operationId": "Retrieve_separated_speaker_audio_v1_voices_pvc__voice_id__samples__sample_id__speakers__speaker_id__audio_get",
        "summary": "Retrieve Separated Speaker Audio",
        "description": "Retrieve the separated audio for a specific speaker.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used",
            "required": true,
            "schema": {
              "description": "Sample ID to be used",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "speaker_id",
            "in": "path",
            "description": "Speaker ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id}/samples/{sample_id}/speakers to list all the available speakers for a sample.",
            "required": true,
            "schema": {
              "description": "Speaker ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id}/samples/{sample_id}/speakers to list all the available speakers for a sample.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Speaker Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerAudioResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "speakers",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/captcha": {
      "get": {
        "operationId": "Get_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_get",
        "summary": "Get Pvc Voice Captcha",
        "description": "Get captcha for PVC voice verification.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "verification",
          "captcha"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "post": {
        "operationId": "Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post",
        "summary": "Verify Pvc Voice Captcha",
        "description": "Submit captcha verification for PVC voice.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyPVCVoiceCaptchaResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "verification",
          "captcha"
        ],
        "x-fern-sdk-method-name": "verify"
      }
    },
    "/v1/voices/pvc/{voice_id}/train": {
      "post": {
        "operationId": "Run_PVC_training_v1_voices_pvc__voice_id__train_post",
        "summary": "Run Pvc Training",
        "description": "Start PVC training process for a voice.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPVCVoiceTrainingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc"
        ],
        "x-fern-sdk-method-name": "train"
      }
    },
    "/v1/voices/pvc/{voice_id}/verification": {
      "post": {
        "operationId": "Request_manual_verification_v1_voices_pvc__voice_id__verification_post",
        "summary": "Request Manual Verification",
        "description": "Request manual verification for a PVC voice.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestPVCManualVerificationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "pvc-voices"
        ],
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "verification"
        ],
        "x-fern-sdk-method-name": "request"
      }
    },
    "/docs": {
      "get": {
        "operationId": "redirect_to_mintlify_docs_get",
        "summary": "Redirect To Mintlify",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ASRConversationalConfig": {
        "type": "object",
        "properties": {
          "quality": {
            "description": "The quality of the transcription",
            "default": "high",
            "$ref": "#/components/schemas/ASRQuality"
          },
          "provider": {
            "description": "The provider of the transcription service",
            "default": "elevenlabs",
            "$ref": "#/components/schemas/ASRProvider"
          },
          "user_input_audio_format": {
            "description": "The format of the audio to be transcribed",
            "default": "pcm_16000",
            "$ref": "#/components/schemas/ASRInputFormat"
          },
          "keywords": {
            "description": "Keywords to boost prediction probability for",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Keywords"
          }
        },
        "example": {
          "keywords": [
            "hello",
            "world"
          ],
          "provider": "elevenlabs",
          "quality": "high",
          "user_input_audio_format": "pcm_16000"
        },
        "title": "ASRConversationalConfig"
      },
      "ASRInputFormat": {
        "type": "string",
        "enum": [
          "pcm_8000",
          "pcm_16000",
          "pcm_22050",
          "pcm_24000",
          "pcm_44100",
          "pcm_48000",
          "ulaw_8000"
        ],
        "title": "ASRInputFormat"
      },
      "ASRProvider": {
        "type": "string",
        "enum": [
          "elevenlabs"
        ],
        "title": "ASRProvider"
      },
      "ASRQuality": {
        "type": "string",
        "enum": [
          "high"
        ],
        "title": "ASRQuality"
      },
      "AddChapterResponseModel": {
        "type": "object",
        "properties": {
          "chapter": {
            "$ref": "#/components/schemas/ChapterWithContentResponseModel"
          }
        },
        "required": [
          "chapter"
        ],
        "title": "AddChapterResponseModel"
      },
      "AddKnowledgeBaseResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          }
        },
        "required": [
          "id",
          "name",
          "prompt_injectable"
        ],
        "title": "AddKnowledgeBaseResponseModel"
      },
      "AddProjectResponseModel": {
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "required": [
          "project"
        ],
        "title": "AddProjectResponseModel"
      },
      "AddPronunciationDictionaryResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the created pronunciation dictionary.",
            "type": "string",
            "title": "Id"
          },
          "name": {
            "description": "The name of the created pronunciation dictionary.",
            "type": "string",
            "title": "Name"
          },
          "created_by": {
            "description": "The user ID of the creator of the pronunciation dictionary.",
            "type": "string",
            "title": "Created By"
          },
          "creation_time_unix": {
            "description": "The creation time of the pronunciation dictionary in Unix timestamp.",
            "type": "integer",
            "title": "Creation Time Unix"
          },
          "version_id": {
            "description": "The ID of the created pronunciation dictionary version.",
            "type": "string",
            "title": "Version Id"
          },
          "version_rules_num": {
            "description": "The number of rules in the version of the pronunciation dictionary.",
            "type": "integer",
            "title": "Version Rules Num"
          },
          "description": {
            "description": "The description of the pronunciation dictionary.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permission_on_resource": {
            "description": "The permission on the resource of the pronunciation dictionary.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource"
          }
        },
        "example": {
          "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
          "creation_time_unix": 1714156800,
          "description": "This is a test dictionary",
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "name": "My Dictionary",
          "version_id": "5xM3yVvZQKV0EfqQpLrJ"
        },
        "required": [
          "id",
          "name",
          "created_by",
          "creation_time_unix",
          "version_id",
          "version_rules_num",
          "permission_on_resource"
        ],
        "title": "AddPronunciationDictionaryResponseModel"
      },
      "AddVoiceIVCResponseModel": {
        "type": "object",
        "properties": {
          "voice_id": {
            "description": "The ID of the newly created voice.",
            "type": "string",
            "title": "Voice Id"
          },
          "requires_verification": {
            "description": "Whether the voice requires verification",
            "type": "boolean",
            "title": "Requires Verification"
          }
        },
        "example": {
          "requires_verification": false,
          "voice_id": "c38kUX8pkfYO2kHyqfFy"
        },
        "required": [
          "voice_id",
          "requires_verification"
        ],
        "title": "AddVoiceIVCResponseModel"
      },
      "AddVoiceResponseModel": {
        "type": "object",
        "properties": {
          "voice_id": {
            "description": "The ID of the voice.",
            "type": "string",
            "title": "Voice Id"
          }
        },
        "example": {
          "voice_id": "b38kUX8pkfYO2kHyqfFy"
        },
        "required": [
          "voice_id"
        ],
        "title": "AddVoiceResponseModel"
      },
      "AddWorkspaceGroupMemberResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace group member addition request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "AddWorkspaceGroupMemberResponseModel"
      },
      "AddWorkspaceInviteResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace invite request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "AddWorkspaceInviteResponseModel"
      },
      "AdditionalFormatResponseModel": {
        "type": "object",
        "properties": {
          "requested_format": {
            "description": "The requested format.",
            "type": "string",
            "title": "Requested Format"
          },
          "file_extension": {
            "description": "The file extension of the additional format.",
            "type": "string",
            "title": "File Extension"
          },
          "content_type": {
            "description": "The content type of the additional format.",
            "type": "string",
            "title": "Content Type"
          },
          "is_base64_encoded": {
            "description": "Whether the content is base64 encoded.",
            "type": "boolean",
            "title": "Is Base64 Encoded"
          },
          "content": {
            "description": "The content of the additional format.",
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "requested_format",
          "file_extension",
          "content_type",
          "is_base64_encoded",
          "content"
        ],
        "title": "AdditionalFormatResponseModel"
      },
      "AdditionalFormats": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExportOptions"
        },
        "maxItems": 10,
        "title": "AdditionalFormats"
      },
      "AgentBan": {
        "type": "object",
        "properties": {
          "at_unix": {
            "type": "integer",
            "title": "At Unix"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "reason_type": {
            "$ref": "#/components/schemas/BanReasonType"
          }
        },
        "required": [
          "at_unix",
          "reason_type"
        ],
        "title": "AgentBan"
      },
      "AgentCallLimits": {
        "type": "object",
        "properties": {
          "agent_concurrency_limit": {
            "description": "The maximum number of concurrent conversations. -1 indicates that there is no maximum",
            "type": "integer",
            "default": -1,
            "title": "Agent Concurrency Limit"
          },
          "daily_limit": {
            "description": "The maximum number of conversations per day",
            "type": "integer",
            "default": 100000,
            "title": "Daily Limit"
          }
        },
        "example": {
          "agent_concurrency_limit": -1,
          "daily_limit": 100000
        },
        "title": "AgentCallLimits"
      },
      "AgentConfigAPIModel-Input": {
        "type": "object",
        "properties": {
          "first_message": {
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "type": "string",
            "default": "",
            "title": "First Message"
          },
          "language": {
            "description": "Language of the agent - used for ASR and TTS",
            "type": "string",
            "default": "en",
            "title": "Language"
          },
          "dynamic_variables": {
            "description": "Configuration for dynamic variables",
            "$ref": "#/components/schemas/DynamicVariablesConfig"
          },
          "prompt": {
            "description": "The prompt for the agent",
            "$ref": "#/components/schemas/PromptAgent-Input"
          }
        },
        "example": {
          "first_message": "Hello, how can I help you today?",
          "language": "en"
        },
        "title": "AgentConfigAPIModel"
      },
      "AgentConfigAPIModel-Output": {
        "type": "object",
        "properties": {
          "first_message": {
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "type": "string",
            "default": "",
            "title": "First Message"
          },
          "language": {
            "description": "Language of the agent - used for ASR and TTS",
            "type": "string",
            "default": "en",
            "title": "Language"
          },
          "dynamic_variables": {
            "description": "Configuration for dynamic variables",
            "$ref": "#/components/schemas/DynamicVariablesConfig"
          },
          "prompt": {
            "description": "The prompt for the agent",
            "$ref": "#/components/schemas/PromptAgent-Output"
          }
        },
        "example": {
          "first_message": "Hello, how can I help you today?",
          "language": "en"
        },
        "title": "AgentConfigAPIModel"
      },
      "AgentConfigOverride": {
        "type": "object",
        "properties": {
          "prompt": {
            "description": "The overrides for the prompt configuration",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptAgentOverride"
              },
              {
                "type": "null"
              }
            ]
          },
          "first_message": {
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Message"
          },
          "language": {
            "description": "The language of the agent, used for ASR and TTS",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          }
        },
        "example": {
          "first_message": "Hello, how can I help you today?",
          "language": "en"
        },
        "title": "AgentConfigOverride"
      },
      "AgentConfigOverrideConfig": {
        "type": "object",
        "properties": {
          "prompt": {
            "description": "Overrides for the prompt configuration",
            "$ref": "#/components/schemas/PromptAgentOverrideConfig"
          },
          "first_message": {
            "description": "Whether to allow overriding the first message",
            "type": "boolean",
            "default": false,
            "title": "First Message"
          },
          "language": {
            "description": "Whether to allow overriding the language",
            "type": "boolean",
            "default": false,
            "title": "Language"
          }
        },
        "example": {
          "first_message": false,
          "language": false,
          "prompt": {
            "prompt": false
          }
        },
        "title": "AgentConfigOverrideConfig"
      },
      "AgentMetadataResponseModel": {
        "type": "object",
        "properties": {
          "created_at_unix_secs": {
            "description": "The creation time of the agent in unix seconds",
            "type": "integer",
            "title": "Created At Unix Secs"
          }
        },
        "required": [
          "created_at_unix_secs"
        ],
        "title": "AgentMetadataResponseModel"
      },
      "AgentPlatformSettingsRequestModel": {
        "type": "object",
        "properties": {
          "auth": {
            "description": "Settings for authentication",
            "$ref": "#/components/schemas/AuthSettings"
          },
          "evaluation": {
            "description": "Settings for evaluation",
            "$ref": "#/components/schemas/EvaluationSettings"
          },
          "widget": {
            "description": "Configuration for the widget",
            "$ref": "#/components/schemas/WidgetConfig"
          },
          "data_collection": {
            "description": "Data collection settings",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "title": "Data Collection"
          },
          "overrides": {
            "description": "Additional overrides for the agent during conversation initiation",
            "$ref": "#/components/schemas/ConversationInitiationClientDataConfig-Input"
          },
          "call_limits": {
            "description": "Call limits for the agent",
            "$ref": "#/components/schemas/AgentCallLimits"
          },
          "privacy": {
            "description": "Privacy settings for the agent",
            "$ref": "#/components/schemas/PrivacyConfig"
          },
          "workspace_overrides": {
            "description": "Workspace overrides for the agent",
            "$ref": "#/components/schemas/AgentWorkspaceOverrides-Input"
          }
        },
        "title": "AgentPlatformSettingsRequestModel"
      },
      "AgentPlatformSettingsResponseModel": {
        "type": "object",
        "properties": {
          "auth": {
            "description": "Settings for authentication",
            "$ref": "#/components/schemas/AuthSettings"
          },
          "evaluation": {
            "description": "Settings for evaluation",
            "$ref": "#/components/schemas/EvaluationSettings"
          },
          "widget": {
            "description": "Configuration for the widget",
            "$ref": "#/components/schemas/WidgetConfig"
          },
          "data_collection": {
            "description": "Data collection settings",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "title": "Data Collection"
          },
          "overrides": {
            "description": "Additional overrides for the agent during conversation initiation",
            "$ref": "#/components/schemas/ConversationInitiationClientDataConfig-Output"
          },
          "call_limits": {
            "description": "Call limits for the agent",
            "$ref": "#/components/schemas/AgentCallLimits"
          },
          "privacy": {
            "description": "Privacy settings for the agent",
            "$ref": "#/components/schemas/PrivacyConfig"
          },
          "workspace_overrides": {
            "description": "Workspace overrides for the agent",
            "$ref": "#/components/schemas/AgentWorkspaceOverrides-Output"
          },
          "safety": {
            "$ref": "#/components/schemas/SafetyResponseModel"
          }
        },
        "title": "AgentPlatformSettingsResponseModel"
      },
      "AgentSummaryResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "description": "The ID of the agent",
            "type": "string",
            "title": "Agent Id"
          },
          "name": {
            "description": "The name of the agent",
            "type": "string",
            "title": "Name"
          },
          "created_at_unix_secs": {
            "description": "The creation time of the agent in unix seconds",
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_info": {
            "description": "The access information of the agent",
            "$ref": "#/components/schemas/ResourceAccessInfo"
          }
        },
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB",
          "created_at_unix_secs": 1716153600,
          "name": "My Agent"
        },
        "required": [
          "agent_id",
          "name",
          "created_at_unix_secs",
          "access_info"
        ],
        "title": "AgentSummaryResponseModel"
      },
      "AgentTransfer": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          }
        },
        "required": [
          "agent_id",
          "condition"
        ],
        "title": "AgentTransfer"
      },
      "AgentWorkspaceOverrides-Input": {
        "type": "object",
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "description": "The webhook to send conversation initiation client data to",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "title": "AgentWorkspaceOverrides"
      },
      "AgentWorkspaceOverrides-Output": {
        "type": "object",
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "description": "The webhook to send conversation initiation client data to",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "title": "AgentWorkspaceOverrides"
      },
      "AllowlistItem": {
        "type": "object",
        "properties": {
          "hostname": {
            "description": "The hostname of the allowed origin",
            "type": "string",
            "title": "Hostname"
          }
        },
        "required": [
          "hostname"
        ],
        "title": "AllowlistItem"
      },
      "ArrayJsonSchemaProperty-Input": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "array",
            "const": "array",
            "title": "Type"
          },
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Input"
              }
            ],
            "title": "Items"
          },
          "description": {
            "type": "string",
            "default": "",
            "title": "Description"
          }
        },
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "title": "ArrayJsonSchemaProperty"
      },
      "ArrayJsonSchemaProperty-Output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "array",
            "const": "array",
            "title": "Type"
          },
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Output"
              }
            ],
            "title": "Items"
          },
          "description": {
            "type": "string",
            "default": "",
            "title": "Description"
          }
        },
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "title": "ArrayJsonSchemaProperty"
      },
      "AudioNativeCreateProjectResponseModel": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "The ID of the created Audio Native project.",
            "type": "string",
            "title": "Project Id"
          },
          "converting": {
            "description": "Whether the project is currently being converted.",
            "type": "boolean",
            "title": "Converting"
          },
          "html_snippet": {
            "description": "The HTML snippet to embed the Audio Native player.",
            "type": "string",
            "title": "Html Snippet"
          }
        },
        "example": {
          "converting": false,
          "html_snippet": "<div id='audio-native-player'></div>",
          "project_id": "JBFqnCBsd6RMkjVDRZzb"
        },
        "required": [
          "project_id",
          "converting",
          "html_snippet"
        ],
        "title": "AudioNativeCreateProjectResponseModel"
      },
      "AudioNativeEditContentResponseModel": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "converting": {
            "description": "Whether the project is currently being converted.",
            "type": "boolean",
            "title": "Converting"
          },
          "publishing": {
            "description": "Whether the project is currently being published.",
            "type": "boolean",
            "title": "Publishing"
          },
          "html_snippet": {
            "description": "The HTML snippet to embed the Audio Native player.",
            "type": "string",
            "title": "Html Snippet"
          }
        },
        "example": {
          "converting": false,
          "html_snippet": "<div id='audio-native-player'></div>",
          "project_id": "JBFqnCBsd6RMkjVDRZzb",
          "publishing": false
        },
        "required": [
          "project_id",
          "converting",
          "publishing",
          "html_snippet"
        ],
        "title": "AudioNativeEditContentResponseModel"
      },
      "AudioNativeProjectSettingsResponseModel": {
        "type": "object",
        "properties": {
          "title": {
            "description": "The title of the project.",
            "type": "string",
            "title": "Title"
          },
          "image": {
            "description": "The image of the project.",
            "type": "string",
            "title": "Image"
          },
          "author": {
            "description": "The author of the project.",
            "type": "string",
            "title": "Author"
          },
          "small": {
            "description": "Whether the project is small.",
            "type": "boolean",
            "title": "Small"
          },
          "text_color": {
            "description": "The text color of the project.",
            "type": "string",
            "title": "Text Color"
          },
          "background_color": {
            "description": "The background color of the project.",
            "type": "string",
            "title": "Background Color"
          },
          "sessionization": {
            "description": "The sessionization of the project. Specifies for how many minutes to persist the session across page reloads.",
            "type": "integer",
            "title": "Sessionization"
          },
          "audio_path": {
            "description": "The path of the audio file.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Path"
          },
          "audio_url": {
            "description": "The URL of the audio file.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Url"
          },
          "status": {
            "description": "Current state of the project",
            "type": "string",
            "default": "ready",
            "enum": [
              "processing",
              "ready"
            ],
            "title": "Status"
          }
        },
        "example": {
          "audio_path": "audio/my_project.mp3",
          "audio_url": "https://example.com/audio/my_project.mp3",
          "author": "John Doe",
          "background_color": "#FFFFFF",
          "image": "https://example.com/image.jpg",
          "sessionization": 1,
          "small": false,
          "status": "ready",
          "text_color": "#000000",
          "title": "My Project"
        },
        "required": [
          "title",
          "image",
          "author",
          "small",
          "text_color",
          "background_color",
          "sessionization"
        ],
        "title": "AudioNativeProjectSettingsResponseModel"
      },
      "AudioWithTimestampsResponseModel": {
        "type": "object",
        "properties": {
          "audio_base64": {
            "description": "Base64 encoded audio data",
            "type": "string",
            "title": "Audio Base64"
          },
          "alignment": {
            "description": "Timestamp information for each character in the original text",
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "normalized_alignment": {
            "description": "Timestamp information for each character in the normalized text",
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "example": {
          "alignment": {
            "character_end_times_seconds": [
              0.1,
              0.2,
              0.3,
              0.4,
              0.5
            ],
            "character_start_times_seconds": [
              0,
              0.1,
              0.2,
              0.3,
              0.4
            ],
            "characters": [
              "H",
              "e",
              "l",
              "l",
              "o"
            ]
          },
          "audio_base64": "base64_encoded_audio_string",
          "normalized_alignment": {
            "character_end_times_seconds": [
              0.1,
              0.2,
              0.3,
              0.4,
              0.5
            ],
            "character_start_times_seconds": [
              0,
              0.1,
              0.2,
              0.3,
              0.4
            ],
            "characters": [
              "H",
              "e",
              "l",
              "l",
              "o"
            ]
          }
        },
        "required": [
          "audio_base64"
        ],
        "title": "AudioWithTimestampsResponseModel"
      },
      "AuthSettings": {
        "type": "object",
        "properties": {
          "enable_auth": {
            "description": "If set to true, starting a conversation with an agent will require a signed token",
            "type": "boolean",
            "default": false,
            "title": "Enable Auth"
          },
          "allowlist": {
            "description": "A list of hosts that are allowed to start conversations with the agent",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowlistItem"
            },
            "title": "Allowlist"
          },
          "shareable_token": {
            "description": "A shareable token that can be used to start a conversation with the agent",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Token"
          }
        },
        "example": {
          "allowlist": [
            {
              "hostname": "https://example.com"
            }
          ],
          "enable_auth": true,
          "shareable_token": "1234567890"
        },
        "title": "AuthSettings"
      },
      "AuthorizationMethod": {
        "type": "string",
        "enum": [
          "invalid",
          "public",
          "authorization_header",
          "signed_url",
          "shareable_link"
        ],
        "title": "AuthorizationMethod"
      },
      "BanReasonType": {
        "type": "string",
        "enum": [
          "safety",
          "manual"
        ],
        "title": "BanReasonType"
      },
      "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post": {
        "type": "object",
        "properties": {
          "language": {
            "description": "The Target language.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          }
        },
        "required": [
          "language"
        ],
        "title": "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post"
      },
      "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the pronunciation dictionary, used for identification only.",
            "type": "string",
            "examples": [
              "My Dictionary"
            ],
            "title": "Name"
          },
          "file": {
            "description": "A lexicon .pls file which we will use to initialize the project with.",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File"
          },
          "description": {
            "description": "A description of the pronunciation dictionary, used for identification only.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Contains pronunciation's of our character names"
            ],
            "title": "Description"
          },
          "workspace_access": {
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "viewer"
            ],
            "title": "Workspace Access"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
      },
      "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post": {
        "type": "object",
        "properties": {
          "rules": {
            "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
                },
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
                }
              ]
            },
            "examples": [
              "\n    [\n        {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b' },\n        {'string_to_replace': 'c', 'type': 'phoneme', 'phoneme': 'd', 'alphabet': 'ipa' }\n    ]"
            ],
            "title": "Rules"
          },
          "name": {
            "description": "The name of the pronunciation dictionary, used for identification only.",
            "type": "string",
            "examples": [
              "My Dictionary"
            ],
            "title": "Name"
          },
          "description": {
            "description": "A description of the pronunciation dictionary, used for identification only.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Contains pronunciation's of our character names"
            ],
            "title": "Description"
          },
          "workspace_access": {
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "viewer"
            ],
            "title": "Workspace Access"
          }
        },
        "required": [
          "rules",
          "name"
        ],
        "title": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post"
      },
      "Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the chapter, used for identification only.",
            "type": "string",
            "examples": [
              "Chapter 1"
            ],
            "title": "Name"
          },
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post"
      },
      "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the target workspace member.",
            "type": "string",
            "title": "Email"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post"
      },
      "Body_Add_project_v1_projects_add_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Studio project, used for identification only.",
            "type": "string",
            "examples": [
              "Project 1"
            ],
            "title": "Name"
          },
          "default_title_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": {
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Model Id"
          },
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          },
          "from_document": {
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document"
          },
          "quality_preset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "type": "string",
            "default": "standard",
            "examples": [
              "standard"
            ],
            "title": "Quality of the generated audio."
          },
          "title": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Romeo and Juliet"
            ],
            "title": "Title"
          },
          "author": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "William Shakespeare"
            ],
            "title": "Author"
          },
          "description": {
            "description": "An optional description of the Studio project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "A tragic love story between two young lovers."
            ],
            "title": "Description"
          },
          "genres": {
            "description": "An optional list of genres associated with the Studio project.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "Romance",
                "Drama"
              ]
            ],
            "title": "Genres"
          },
          "target_audience": {
            "description": "An optional target audience of the Studio project.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "adult"
            ],
            "title": "Target Audience"
          },
          "language": {
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "en"
            ],
            "title": "Language"
          },
          "content_type": {
            "description": "An optional content type of the Studio project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Book"
            ],
            "title": "Content Type"
          },
          "original_publication_date": {
            "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "1597-01-01"
            ],
            "title": "Original Publication Date"
          },
          "mature_content": {
            "description": "An optional specification of whether this Studio project contains mature content.",
            "default": false,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              false
            ],
            "title": "Mature Content"
          },
          "isbn_number": {
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "0-306-40615-2"
            ],
            "title": "Isbn Number"
          },
          "acx_volume_normalization": {
            "description": "[Deprecated] When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Acx Volume Normalization"
          },
          "volume_normalization": {
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Volume Normalization"
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "callback_url": {
            "description": "A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ],
            "title": "Callback Url"
          },
          "fiction": {
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "fiction"
            ],
            "title": "Fiction"
          },
          "apply_text_normalization": {
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "auto",
                  "on",
                  "off",
                  "apply_english"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Apply Text Normalization"
          },
          "auto_convert": {
            "description": "Whether to auto convert the Studio project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          },
          "auto_assign_voices": {
            "description": "[Alpha Feature] Whether automatically assign voices to phrases in the create Project.",
            "default": false,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Assign Voices"
          },
          "source_type": {
            "description": "The type of Studio project to create.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "book"
            ],
            "title": "Source Type"
          }
        },
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id"
        ],
        "title": "Body_Add_project_v1_projects_add_post"
      },
      "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post": {
        "type": "object",
        "properties": {
          "rules": {
            "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
                },
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
                }
              ]
            },
            "examples": [
              "\n    [\n        {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b' },\n        {'string_to_replace': 'c', 'type': 'phoneme', 'phoneme': 'd', 'alphabet': 'ipa' }\n    ]"
            ],
            "title": "Rules"
          }
        },
        "required": [
          "rules"
        ],
        "title": "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
      },
      "Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post": {
        "type": "object",
        "properties": {
          "files": {
            "description": "Audio files used to create the voice.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "title": "Files"
          },
          "remove_background_noise": {
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          }
        },
        "required": [
          "files"
        ],
        "title": "Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post"
      },
      "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post": {
        "type": "object",
        "properties": {
          "new_name": {
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "type": "string",
            "examples": [
              "John Smith"
            ],
            "title": "New Name"
          }
        },
        "required": [
          "new_name"
        ],
        "title": "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post"
      },
      "Body_Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "A custom, human-readable name for the document.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "url": {
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "title": "Url"
          },
          "file": {
            "description": "Documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "title": "Body_Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post"
      },
      "Body_Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "A custom, human-readable name for the document.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "url": {
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "title": "Url"
          },
          "file": {
            "description": "Documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "title": "Body_Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post"
      },
      "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "A custom, human-readable name for the document.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "url": {
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "title": "Url"
          },
          "file": {
            "description": "Documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "title": "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post"
      },
      "Body_Add_voice_v1_voices_add_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "type": "string",
            "examples": [
              "John Smith"
            ],
            "title": "Name"
          },
          "files": {
            "description": "A list of file paths to audio recordings intended for voice cloning.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "title": "Files"
          },
          "remove_background_noise": {
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          },
          "description": {
            "description": "A description of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ],
            "title": "Description"
          },
          "labels": {
            "description": "Serialized labels dictionary for the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "required": [
          "name",
          "files"
        ],
        "title": "Body_Add_voice_v1_voices_add_post"
      },
      "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post": {
        "type": "object",
        "properties": {
          "audio": {
            "description": "The audio file from which vocals/speech will be isolated from.",
            "type": "string",
            "format": "binary",
            "title": "Audio"
          },
          "file_format": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "pcm_s16le_16",
              "other"
            ],
            "title": "File Format"
          }
        },
        "required": [
          "audio"
        ],
        "title": "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
      },
      "Body_Audio_Isolation_v1_audio_isolation_post": {
        "type": "object",
        "properties": {
          "audio": {
            "description": "The audio file from which vocals/speech will be isolated from.",
            "type": "string",
            "format": "binary",
            "title": "Audio"
          },
          "file_format": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "pcm_s16le_16",
              "other"
            ],
            "title": "File Format"
          }
        },
        "required": [
          "audio"
        ],
        "title": "Body_Audio_Isolation_v1_audio_isolation_post"
      },
      "Body_Create_Agent_v1_convai_agents_create_post": {
        "type": "object",
        "properties": {
          "conversation_config": {
            "description": "Conversation configuration for an agent",
            "$ref": "#/components/schemas/ConversationalConfigAPIModel-Input"
          },
          "platform_settings": {
            "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentPlatformSettingsRequestModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "description": "A name to make the agent easier to find",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "My agent"
            ],
            "optional": true,
            "title": "Name"
          }
        },
        "required": [
          "conversation_config"
        ],
        "title": "Body_Create_Agent_v1_convai_agents_create_post"
      },
      "Body_Create_PVC_voice_v1_voices_pvc_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "type": "string",
            "examples": [
              "John Smith"
            ],
            "maxLength": 100,
            "title": "Name"
          },
          "language": {
            "description": "Language used in the samples.",
            "type": "string",
            "examples": [
              "en"
            ],
            "title": "Language"
          },
          "description": {
            "description": "Description to use for the created voice.",
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ],
            "title": "Description"
          },
          "labels": {
            "description": "Serialized labels dictionary for the voice.",
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "required": [
          "name",
          "language"
        ],
        "title": "Body_Create_PVC_voice_v1_voices_pvc_post"
      },
      "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post": {
        "type": "object",
        "properties": {
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "invalidate_affected_text": {
            "description": "This will automatically mark text in this project for reconversion when the new dictionary applies or the old one no longer does.",
            "type": "boolean",
            "default": true,
            "examples": [
              false
            ],
            "title": "Invalidate Affected Text"
          }
        },
        "required": [
          "pronunciation_dictionary_locators"
        ],
        "title": "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post"
      },
      "Body_Create_Studio_project_v1_studio_projects_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Studio project, used for identification only.",
            "type": "string",
            "examples": [
              "Project 1"
            ],
            "title": "Name"
          },
          "default_title_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": {
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Model Id"
          },
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          },
          "from_document": {
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document"
          },
          "quality_preset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "type": "string",
            "default": "standard",
            "examples": [
              "standard"
            ],
            "title": "Quality of the generated audio."
          },
          "title": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Romeo and Juliet"
            ],
            "title": "Title"
          },
          "author": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "William Shakespeare"
            ],
            "title": "Author"
          },
          "description": {
            "description": "An optional description of the Studio project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "A tragic love story between two young lovers."
            ],
            "title": "Description"
          },
          "genres": {
            "description": "An optional list of genres associated with the Studio project.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "Romance",
                "Drama"
              ]
            ],
            "title": "Genres"
          },
          "target_audience": {
            "description": "An optional target audience of the Studio project.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "adult"
            ],
            "title": "Target Audience"
          },
          "language": {
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "en"
            ],
            "title": "Language"
          },
          "content_type": {
            "description": "An optional content type of the Studio project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Book"
            ],
            "title": "Content Type"
          },
          "original_publication_date": {
            "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "1597-01-01"
            ],
            "title": "Original Publication Date"
          },
          "mature_content": {
            "description": "An optional specification of whether this Studio project contains mature content.",
            "default": false,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              false
            ],
            "title": "Mature Content"
          },
          "isbn_number": {
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "0-306-40615-2"
            ],
            "title": "Isbn Number"
          },
          "acx_volume_normalization": {
            "description": "[Deprecated] When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Acx Volume Normalization"
          },
          "volume_normalization": {
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Volume Normalization"
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "callback_url": {
            "description": "A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ],
            "title": "Callback Url"
          },
          "fiction": {
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "fiction"
            ],
            "title": "Fiction"
          },
          "apply_text_normalization": {
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "auto",
                  "on",
                  "off",
                  "apply_english"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Apply Text Normalization"
          },
          "auto_convert": {
            "description": "Whether to auto convert the Studio project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          },
          "auto_assign_voices": {
            "description": "[Alpha Feature] Whether automatically assign voices to phrases in the create Project.",
            "default": false,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Assign Voices"
          },
          "source_type": {
            "description": "The type of Studio project to create.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "book"
            ],
            "title": "Source Type"
          }
        },
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id"
        ],
        "title": "Body_Create_Studio_project_v1_studio_projects_post"
      },
      "Body_Create_URL_document_v1_convai_knowledge_base_url_post": {
        "type": "object",
        "properties": {
          "url": {
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "title": "Url"
          },
          "name": {
            "description": "A custom, human-readable name for the document.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "required": [
          "url"
        ],
        "title": "Body_Create_URL_document_v1_convai_knowledge_base_url_post"
      },
      "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post": {
        "type": "object",
        "properties": {
          "voice_name": {
            "description": "Name to use for the created voice.",
            "type": "string",
            "examples": [
              "Sassy squeaky mouse"
            ],
            "title": "Voice Name"
          },
          "voice_description": {
            "description": "Description to use for the created voice.",
            "type": "string",
            "examples": [
              "A sassy squeaky mouse"
            ],
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description"
          },
          "generated_voice_id": {
            "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
            "type": "string",
            "examples": [
              "37HceQefKmEi3bGovXjL"
            ],
            "title": "Generated Voice Id"
          },
          "labels": {
            "description": "Optional, metadata to add to the created voice. Defaults to None.",
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              {
                "language": "en"
              }
            ],
            "name": "Voice metadata",
            "title": "Labels"
          },
          "played_not_selected_voice_ids": {
            "description": "List of voice ids that the user has played but not selected. Used for RLHF.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Played Not Selected Voice Ids"
          }
        },
        "required": [
          "voice_name",
          "voice_description",
          "generated_voice_id"
        ],
        "title": "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post"
      },
      "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post": {
        "type": "object",
        "properties": {
          "voice_name": {
            "description": "Name to use for the created voice.",
            "type": "string",
            "examples": [
              "Sassy squeaky mouse"
            ],
            "title": "Voice Name"
          },
          "voice_description": {
            "description": "Description to use for the created voice.",
            "type": "string",
            "examples": [
              "A sassy squeaky mouse"
            ],
            "title": "Voice Description"
          },
          "generated_voice_id": {
            "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
            "type": "string",
            "examples": [
              "37HceQefKmEi3bGovXjL"
            ],
            "title": "Generated Voice Id"
          },
          "played_not_selected_voice_ids": {
            "description": "List of voice ids that the user has played but not selected. Used for RLHF.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Played Not Selected Voice Ids"
          },
          "labels": {
            "description": "Optional, metadata to add to the created voice. Defaults to None.",
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              {
                "language": "en"
              }
            ],
            "name": "Voice metadata",
            "title": "Labels"
          }
        },
        "required": [
          "voice_name",
          "voice_description",
          "generated_voice_id"
        ],
        "title": "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
      },
      "Body_Create_chapter_v1_studio_projects__project_id__chapters_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the chapter, used for identification only.",
            "type": "string",
            "examples": [
              "Chapter 1"
            ],
            "title": "Name"
          },
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Create_chapter_v1_studio_projects__project_id__chapters_post"
      },
      "Body_Create_file_document_v1_convai_knowledge_base_file_post": {
        "type": "object",
        "properties": {
          "file": {
            "description": "Documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "name": {
            "description": "A custom, human-readable name for the document.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "required": [
          "file"
        ],
        "title": "Body_Create_file_document_v1_convai_knowledge_base_file_post"
      },
      "Body_Create_forced_alignment_v1_forced_alignment_post": {
        "type": "object",
        "properties": {
          "file": {
            "description": "The file to align. All major audio formats are supported. The file size must be less than 1GB.",
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "text": {
            "description": "The text to align with the audio. The input text can be in any format, however diarization is not supported at this time.",
            "type": "string",
            "title": "Text"
          },
          "enabled_spooled_file": {
            "description": "If true, the file will be streamed to the server and processed in chunks. This is useful for large files that cannot be loaded into memory. The default is false.",
            "type": "boolean",
            "default": false,
            "title": "Enabled Spooled File"
          }
        },
        "required": [
          "file",
          "text"
        ],
        "title": "Body_Create_forced_alignment_v1_forced_alignment_post"
      },
      "Body_Create_podcast_v1_projects_podcast_create_post": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Model Id"
          },
          "mode": {
            "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastConversationMode"
              },
              {
                "$ref": "#/components/schemas/PodcastBulletinMode"
              }
            ],
            "examples": [
              {
                "conversation": {
                  "guest_voice_id": "bYTqZQo3Jz7LQtmGTgwi",
                  "host_voice_id": "6lCwbsX1yVjD49QmpkTR"
                },
                "type": "conversation"
              }
            ],
            "title": "Mode"
          },
          "source": {
            "description": "The source content for the Podcast.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastTextSource"
              },
              {
                "$ref": "#/components/schemas/PodcastURLSource"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PodcastTextSource"
                    },
                    {
                      "$ref": "#/components/schemas/PodcastURLSource"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "examples": [
              {
                "type": "url",
                "url": "https://en.wikipedia.org/wiki/Cognitive_science"
              }
            ],
            "title": "Source"
          },
          "quality_preset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "type": "string",
            "default": "standard",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "examples": [
              "standard"
            ],
            "title": "Quality of the generated audio."
          },
          "duration_scale": {
            "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - prodces podcasts longer than 7 minutes.\n",
            "type": "string",
            "default": "default",
            "enum": [
              "short",
              "default",
              "long"
            ],
            "examples": [
              "short"
            ],
            "title": "The duration of the generated podcast. This varies depending on the format, voice and language."
          },
          "language": {
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "en"
            ],
            "title": "Language"
          },
          "highlights": {
            "description": "A brief summary or highlights of the Studio project's content, providing key points or themes. This should be between 10 and 70 characters.",
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 70,
                  "minLength": 10
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "Emphasize the importance of AI on education"
              ]
            ],
            "title": "Highlights"
          },
          "callback_url": {
            "description": "A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ],
            "title": "Callback Url"
          }
        },
        "required": [
          "model_id",
          "mode",
          "source"
        ],
        "title": "Body_Create_podcast_v1_projects_podcast_create_post"
      },
      "Body_Create_podcast_v1_studio_podcasts_post": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Model Id"
          },
          "mode": {
            "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastConversationMode"
              },
              {
                "$ref": "#/components/schemas/PodcastBulletinMode"
              }
            ],
            "examples": [
              {
                "conversation": {
                  "guest_voice_id": "bYTqZQo3Jz7LQtmGTgwi",
                  "host_voice_id": "6lCwbsX1yVjD49QmpkTR"
                },
                "type": "conversation"
              }
            ],
            "title": "Mode"
          },
          "source": {
            "description": "The source content for the Podcast.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastTextSource"
              },
              {
                "$ref": "#/components/schemas/PodcastURLSource"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PodcastTextSource"
                    },
                    {
                      "$ref": "#/components/schemas/PodcastURLSource"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "examples": [
              {
                "type": "url",
                "url": "https://en.wikipedia.org/wiki/Cognitive_science"
              }
            ],
            "title": "Source"
          },
          "quality_preset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "type": "string",
            "default": "standard",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "examples": [
              "standard"
            ],
            "title": "Quality of the generated audio."
          },
          "duration_scale": {
            "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - prodces podcasts longer than 7 minutes.\n",
            "type": "string",
            "default": "default",
            "enum": [
              "short",
              "default",
              "long"
            ],
            "examples": [
              "short"
            ],
            "title": "The duration of the generated podcast. This varies depending on the format, voice and language."
          },
          "language": {
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "en"
            ],
            "title": "Language"
          },
          "highlights": {
            "description": "A brief summary or highlights of the Studio project's content, providing key points or themes. This should be between 10 and 70 characters.",
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 70,
                  "minLength": 10
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "Emphasize the importance of AI on education"
              ]
            ],
            "title": "Highlights"
          },
          "callback_url": {
            "description": "A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ],
            "title": "Callback Url"
          }
        },
        "required": [
          "model_id",
          "mode",
          "source"
        ],
        "title": "Body_Create_podcast_v1_studio_podcasts_post"
      },
      "Body_Create_text_document_v1_convai_knowledge_base_text_post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Text content to be added to the knowledge base.",
            "type": "string",
            "title": "Text"
          },
          "name": {
            "description": "A custom, human-readable name for the document.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Create_text_document_v1_convai_knowledge_base_text_post"
      },
      "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Project name.",
            "type": "string",
            "title": "Name"
          },
          "image": {
            "description": "(Deprecated) Image URL used in the player. If not provided, default image set in the Player settings is used.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "deprecated": true,
            "title": "Image"
          },
          "author": {
            "description": "Author used in the player and inserted at the start of the uploaded article. If not provided, the default author set in the Player settings is used.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "title": {
            "description": "Title used in the player and inserted at the top of the uploaded article. If not provided, the default title set in the Player settings is used.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "small": {
            "description": "(Deprecated) Whether to use small player or not. If not provided, default value set in the Player settings is used.",
            "type": "boolean",
            "default": false,
            "deprecated": true,
            "title": "Small"
          },
          "text_color": {
            "description": "Text color used in the player. If not provided, default text color set in the Player settings is used.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Color"
          },
          "background_color": {
            "description": "Background color used in the player. If not provided, default background color set in the Player settings is used.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Color"
          },
          "sessionization": {
            "description": "(Deprecated) Specifies for how many minutes to persist the session across page reloads. If not provided, default sessionization set in the Player settings is used.",
            "type": "integer",
            "default": 0,
            "deprecated": true,
            "title": "Sessionization"
          },
          "voice_id": {
            "description": "Voice ID used to voice the content. If not provided, default voice ID set in the Player settings is used.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id"
          },
          "model_id": {
            "description": "TTS Model ID used in the player. If not provided, default model ID set in the Player settings is used.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "file": {
            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h5&gt;More of your content&lt;/h5&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'",
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "auto_convert": {
            "description": "Whether to auto convert the project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post"
      },
      "Body_Delete_existing_invitation_v1_workspace_invites_delete": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the customer",
            "type": "string",
            "examples": [
              "john.doe@testmail.com"
            ],
            "title": "Email"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Delete_existing_invitation_v1_workspace_invites_delete"
      },
      "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the target workspace member.",
            "type": "string",
            "title": "Email"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post"
      },
      "Body_Delete_member_v1_workspace_members_delete": {
        "type": "object",
        "properties": {
          "email": {
            "description": "Email of the target user.",
            "type": "string",
            "title": "Email"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Delete_member_v1_workspace_members_delete"
      },
      "Body_Download_history_items_v1_history_download_post": {
        "type": "object",
        "properties": {
          "history_item_ids": {
            "description": "A list of history items to download, you can get IDs of history items and other metadata using the GET https://api.elevenlabs.io/v1/history endpoint.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "History Item Ids"
          },
          "output_format": {
            "description": "Output format to transcode the audio file, can be wav or default.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Format"
          }
        },
        "required": [
          "history_item_ids"
        ],
        "title": "Body_Download_history_items_v1_history_download_post"
      },
      "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post": {
        "type": "object",
        "properties": {
          "file": {
            "description": "A list of file paths to audio recordings intended for voice cloning",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File"
          },
          "csv_file": {
            "description": "CSV file containing transcription/translation metadata",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Csv File"
          },
          "foreground_audio_file": {
            "description": "For use only with csv input",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Foreground Audio File"
          },
          "background_audio_file": {
            "description": "For use only with csv input",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Audio File"
          },
          "name": {
            "description": "Name of the dubbing project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "source_url": {
            "description": "URL of the source video/audio file.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url"
          },
          "source_lang": {
            "description": "Source language.",
            "type": "string",
            "default": "auto",
            "title": "Source Lang"
          },
          "target_lang": {
            "description": "The Target language to dub the content into.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Lang"
          },
          "num_speakers": {
            "description": "Number of speakers to use for the dubbing. Set to 0 to automatically detect the number of speakers",
            "type": "integer",
            "default": 0,
            "title": "Num Speakers"
          },
          "watermark": {
            "description": "Whether to apply watermark to the output video.",
            "type": "boolean",
            "default": false,
            "title": "Watermark"
          },
          "start_time": {
            "description": "Start time of the source video/audio file.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "description": "End time of the source video/audio file.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "highest_resolution": {
            "description": "Whether to use the highest resolution available.",
            "type": "boolean",
            "default": false,
            "title": "Highest Resolution"
          },
          "drop_background_audio": {
            "description": "An advanced setting. Whether to drop background audio from the final dub. This can improve dub quality where it's known that audio shouldn't have a background track such as for speeches or monologues.",
            "type": "boolean",
            "default": false,
            "title": "Drop Background Audio"
          },
          "use_profanity_filter": {
            "description": "[BETA] Whether transcripts should have profanities censored with the words '[censored]'",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Profanity Filter"
          },
          "dubbing_studio": {
            "description": "Whether to prepare dub for edits in dubbing studio or edits as a dubbing resource.",
            "type": "boolean",
            "default": false,
            "title": "Dubbing Studio"
          },
          "disable_voice_cloning": {
            "description": "[BETA] Instead of using a voice clone in dubbing, use a similar voice from the ElevenLabs Voice Library.",
            "type": "boolean",
            "default": false,
            "title": "Disable Voice Cloning"
          },
          "mode": {
            "description": "automatic or manual. Manual mode is only supported when creating a dubbing studio project",
            "default": "automatic",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mode"
          }
        },
        "title": "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
      },
      "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post": {
        "type": "object",
        "properties": {
          "segments": {
            "description": "Dub only this list of segments.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Segments"
          },
          "languages": {
            "description": "Dub only these languages for each segment.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages"
          }
        },
        "required": [
          "segments",
          "languages"
        ],
        "title": "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post"
      },
      "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "type": "string",
            "examples": [
              "John Smith"
            ],
            "maxLength": 100,
            "title": "Name"
          },
          "language": {
            "description": "Language used in the samples.",
            "type": "string",
            "examples": [
              "en"
            ],
            "title": "Language"
          },
          "description": {
            "description": "Description to use for the created voice.",
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ],
            "title": "Description"
          },
          "labels": {
            "description": "Serialized labels dictionary for the voice.",
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "title": "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post"
      },
      "Body_Edit_basic_project_info_v1_projects__project_id__post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Studio project, used for identification only.",
            "type": "string",
            "examples": [
              "Project 1"
            ],
            "title": "Name"
          },
          "default_title_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Paragraph Voice Id"
          },
          "title": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Romeo and Juliet"
            ],
            "title": "Title"
          },
          "author": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "William Shakespeare"
            ],
            "title": "Author"
          },
          "isbn_number": {
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "0-306-40615-2"
            ],
            "title": "Isbn Number"
          },
          "volume_normalization": {
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Volume Normalization"
          }
        },
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id"
        ],
        "title": "Body_Edit_basic_project_info_v1_projects__project_id__post"
      },
      "Body_Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the chapter, used for identification only.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Chapter 1"
            ],
            "title": "Name"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterContentInputModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The chapter content to use."
          }
        },
        "title": "Body_Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch"
      },
      "Body_Edit_project_content_v1_projects__project_id__content_post": {
        "type": "object",
        "properties": {
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          },
          "from_document": {
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document"
          },
          "auto_convert": {
            "description": "Whether to auto convert the Studio project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          }
        },
        "title": "Body_Edit_project_content_v1_projects__project_id__content_post"
      },
      "Body_Edit_voice_v1_voices__voice_id__edit_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "type": "string",
            "examples": [
              "John Smith"
            ],
            "title": "Name"
          },
          "files": {
            "description": "Audio files to add to the voice",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "title": "Files"
          },
          "remove_background_noise": {
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          },
          "description": {
            "description": "A description of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ],
            "title": "Description"
          },
          "labels": {
            "description": "Serialized labels dictionary for the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Edit_voice_v1_voices__voice_id__edit_post"
      },
      "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post": {
        "type": "object",
        "properties": {
          "gender": {
            "description": "Category code corresponding to the gender of the generated voice. Possible values: female, male.",
            "type": "string",
            "enum": [
              "female",
              "male"
            ],
            "examples": [
              "female"
            ],
            "title": "Gender"
          },
          "accent": {
            "description": "Category code corresponding to the accent of the generated voice. Possible values: british, american, african, australian, indian.",
            "type": "string",
            "examples": [
              "british"
            ],
            "title": "Accent"
          },
          "age": {
            "description": "Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old.",
            "type": "string",
            "enum": [
              "young",
              "middle_aged",
              "old"
            ],
            "examples": [
              "young"
            ],
            "title": "Age"
          },
          "accent_strength": {
            "description": "The strength of the accent of the generated voice. Has to be between 0.3 and 2.0.",
            "type": "number",
            "title": "Accent Strength"
          },
          "text": {
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "type": "string",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ],
            "maxLength": 1000,
            "minLength": 100,
            "title": "Text"
          }
        },
        "required": [
          "gender",
          "accent",
          "age",
          "accent_strength",
          "text"
        ],
        "title": "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
      },
      "Body_Get_similar_library_voices_v1_similar_voices_post": {
        "type": "object",
        "properties": {
          "audio_file": {
            "type": "string",
            "format": "binary",
            "title": "Audio File"
          },
          "similarity_threshold": {
            "description": "Threshold for voice similarity between provided sample and library voices. Values range from 0 to 2. The smaller the value the more similar voices will be returned.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              0.5
            ],
            "title": "Similarity Threshold"
          },
          "top_k": {
            "description": "Number of most similar voices to return. If similarity_threshold is provided, less than this number of voices may be returned. Values range from 1 to 100.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              10
            ],
            "title": "Top K"
          }
        },
        "title": "Body_Get_similar_library_voices_v1_similar_voices_post"
      },
      "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_phone_number_id": {
            "type": "string",
            "title": "Agent Phone Number Id"
          },
          "to_number": {
            "type": "string",
            "title": "To Number"
          },
          "conversation_initiation_client_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "agent_id",
          "agent_phone_number_id",
          "to_number"
        ],
        "title": "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post"
      },
      "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post": {
        "type": "object",
        "properties": {
          "emails": {
            "description": "The email of the customer",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              "john.doe@testmail.com"
            ],
            "title": "Emails"
          },
          "group_ids": {
            "description": "The group ids of the user",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "group_id_1",
                "group_id_2"
              ]
            ],
            "title": "Group Ids"
          }
        },
        "required": [
          "emails"
        ],
        "title": "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post"
      },
      "Body_Invite_user_v1_workspace_invites_add_post": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the customer",
            "type": "string",
            "examples": [
              "john.doe@testmail.com"
            ],
            "title": "Email"
          },
          "group_ids": {
            "description": "The group ids of the user",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "group_id_1",
                "group_id_2"
              ]
            ],
            "title": "Group Ids"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Invite_user_v1_workspace_invites_add_post"
      },
      "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch": {
        "type": "object",
        "properties": {
          "conversation_config": {
            "description": "Conversation configuration for an agent",
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Config"
          },
          "platform_settings": {
            "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content.",
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform Settings"
          },
          "name": {
            "description": "A name to make the agent easier to find",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "My agent"
            ],
            "optional": true,
            "title": "Name"
          }
        },
        "title": "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
      },
      "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post": {
        "type": "object",
        "properties": {
          "avatar_file": {
            "description": "An image file to be used as the agent's avatar.",
            "type": "string",
            "format": "binary",
            "title": "Avatar File"
          }
        },
        "required": [
          "avatar_file"
        ],
        "title": "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
      },
      "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post": {
        "type": "object",
        "properties": {
          "rule_strings": {
            "description": "List of strings to remove from the pronunciation dictionary.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              "['a', 'b']"
            ],
            "title": "Rule Strings"
          }
        },
        "required": [
          "rule_strings"
        ],
        "title": "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
      },
      "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post": {
        "type": "object",
        "properties": {
          "render_type": {
            "description": "The type of the render. One of ['mp4', 'aac', 'mp3', 'wav', 'aaf', 'tracks_zip', 'clips_zip']",
            "$ref": "#/components/schemas/RenderType"
          }
        },
        "required": [
          "render_type"
        ],
        "title": "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post"
      },
      "Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post": {
        "type": "object",
        "properties": {
          "files": {
            "description": "Verification documents",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "title": "Files"
          },
          "extra_text": {
            "description": "Extra text to be used in the manual verification process.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Text"
          }
        },
        "required": [
          "files"
        ],
        "title": "Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post"
      },
      "Body_Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get": {
        "type": "object",
        "properties": {
          "remove_background_noise": {
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          }
        },
        "title": "Body_Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get"
      },
      "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The model ID to use for the conversion.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "eleven_turbo_v2"
            ],
            "title": "Model Id"
          }
        },
        "title": "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post"
      },
      "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post": {
        "type": "object",
        "properties": {
          "feedback": {
            "description": "Either 'like' or 'dislike' to indicate the feedback for the conversation.",
            "$ref": "#/components/schemas/UserFeedbackScore",
            "examples": [
              "like"
            ]
          }
        },
        "required": [
          "feedback"
        ],
        "title": "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
      },
      "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post": {
        "type": "object",
        "properties": {
          "role": {
            "description": "Role to update the target principal with.",
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Role"
          },
          "resource_type": {
            "description": "Resource type of the target resource.",
            "$ref": "#/components/schemas/WorkspaceResourceType"
          },
          "user_email": {
            "description": "The email of the user",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email"
          },
          "group_id": {
            "description": "The ID of the target group. To target the permissions principals have by default on this resource, use the value 'default'.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          },
          "workspace_api_key_id": {
            "description": "The ID of the target workspace API key. This isn't the same as the key itself that would you pass in the header for authentication. Workspace admins can find this in the workspace settings UI.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Api Key Id"
          }
        },
        "required": [
          "role",
          "resource_type"
        ],
        "title": "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post"
      },
      "Body_Sound_Generation_v1_sound_generation_post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into a sound effect.",
            "type": "string",
            "examples": [
              "A large, ancient wooden door slowly opening in an eerie, abandoned castle.."
            ],
            "title": "Text"
          },
          "duration_seconds": {
            "description": "The duration of the sound which will be generated in seconds. Must be at least 0.5 and at most 22. If set to None we will guess the optimal duration using the prompt. Defaults to None.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds"
          },
          "prompt_influence": {
            "description": "A higher prompt influence makes your generation follow the prompt more closely while also making generations less variable. Must be a value between 0 and 1. Defaults to 0.3.",
            "default": 0.3,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Influence"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Sound_Generation_v1_sound_generation_post"
      },
      "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post": {
        "type": "object",
        "properties": {
          "audio": {
            "description": "The audio file which holds the content and emotion that will control the generated speech.",
            "type": "string",
            "format": "binary",
            "title": "Audio"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "type": "string",
            "default": "eleven_english_sts_v2",
            "title": "Model Id"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Settings"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "remove_background_noise": {
            "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          },
          "file_format": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "pcm_s16le_16",
              "other"
            ],
            "title": "File Format"
          }
        },
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
      },
      "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post": {
        "type": "object",
        "properties": {
          "audio": {
            "description": "The audio file which holds the content and emotion that will control the generated speech.",
            "type": "string",
            "format": "binary",
            "title": "Audio"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "type": "string",
            "default": "eleven_english_sts_v2",
            "title": "Model Id"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Settings"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "remove_background_noise": {
            "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          },
          "file_format": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "pcm_s16le_16",
              "other"
            ],
            "title": "File Format"
          }
        },
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
      },
      "Body_Speech_to_Text_v1_speech_to_text_post": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The ID of the model to use for transcription, currently only 'scribe_v1' and 'scribe_v1_experimental' are available.",
            "type": "string",
            "title": "Model Id"
          },
          "file": {
            "description": "The file to transcribe. All major audio and video formats are supported. Exactly one of the file or cloud_storage_url parameters must be provided. The file size must be less than 1GB.",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File"
          },
          "language_code": {
            "description": "An ISO-639-1 or ISO-639-3 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. Defaults to null, in this case the language is predicted automatically.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "tag_audio_events": {
            "description": "Whether to tag audio events like (laughter), (footsteps), etc. in the transcription.",
            "type": "boolean",
            "default": true,
            "title": "Tag Audio Events"
          },
          "num_speakers": {
            "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports.",
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Speakers"
          },
          "timestamps_granularity": {
            "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
            "type": "string",
            "default": "word",
            "enum": [
              "none",
              "word",
              "character"
            ],
            "title": "Timestamps Granularity"
          },
          "diarize": {
            "description": "Whether to annotate which speaker is currently talking in the uploaded file.",
            "type": "boolean",
            "default": false,
            "title": "Diarize"
          },
          "additional_formats": {
            "description": "A list of additional formats to export the transcript to.",
            "$ref": "#/components/schemas/AdditionalFormats",
            "examples": [
              [
                {
                  "format": "srt",
                  "include_speakers": true,
                  "include_timestamps": true
                },
                {
                  "format": "txt",
                  "include_speakers": false
                }
              ]
            ]
          },
          "file_format": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "type": "string",
            "default": "other",
            "enum": [
              "pcm_s16le_16",
              "other"
            ],
            "examples": [
              "pcm_s16le_16",
              "other"
            ],
            "title": "File Format"
          },
          "cloud_storage_url": {
            "description": "The valid AWS S3, Cloudflare R2 or Google Cloud Storage URL of the file to transcribe. Exactly one of the file or cloud_storage_url parameters must be provided. The file must be a valid publicly accessible cloud storage URL. The file size must be less than 2GB. URL can be pre-signed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "https://storage.googleapis.com/my-bucket/folder/audio.mp3",
              "https://my-bucket.s3.us-west-2.amazonaws.com/folder/audio.mp3",
              "https://account123.r2.cloudflarestorage.com/my-bucket/audio.mp3"
            ],
            "title": "Cloud Storage Url"
          }
        },
        "required": [
          "model_id"
        ],
        "title": "Body_Speech_to_Text_v1_speech_to_text_post"
      },
      "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post": {
        "type": "object",
        "properties": {
          "convert_to_mpeg": {
            "description": "Whether to convert the audio to mpeg format.",
            "type": "boolean",
            "default": false,
            "title": "Convert To Mpeg"
          }
        },
        "title": "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post"
      },
      "Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post": {
        "type": "object",
        "properties": {
          "convert_to_mpeg": {
            "description": "Whether to convert the audio to mpeg format.",
            "type": "boolean",
            "default": false,
            "title": "Convert To Mpeg"
          }
        },
        "title": "Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
      },
      "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post": {
        "type": "object",
        "properties": {
          "convert_to_mpeg": {
            "description": "Whether to convert the audio to mpeg format.",
            "type": "boolean",
            "default": false,
            "title": "Convert To Mpeg"
          }
        },
        "title": "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
      },
      "Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post": {
        "type": "object",
        "properties": {
          "convert_to_mpeg": {
            "description": "Whether to convert the audio to mpeg format.",
            "type": "boolean",
            "default": false,
            "title": "Convert To Mpeg"
          }
        },
        "title": "Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post"
      },
      "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into speech.",
            "type": "string",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ],
            "title": "Text"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "type": "string",
            "default": "eleven_monolingual_v1",
            "title": "Model Id"
          },
          "language_code": {
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "previous_text": {
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ],
            "title": "Previous Text"
          },
          "next_text": {
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ],
            "title": "Next Text"
          },
          "previous_request_ids": {
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ],
            "title": "Previous Request Ids"
          },
          "next_request_ids": {
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ],
            "title": "Next Request Ids"
          },
          "use_pvc_as_ivc": {
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "type": "boolean",
            "default": false,
            "deprecated": true,
            "examples": [
              true
            ],
            "title": "Use Pvc As Ivc"
          },
          "apply_text_normalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "examples": [
              true
            ],
            "title": "Apply Text Normalization"
          },
          "apply_language_text_normalization": {
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Apply Language Text Normalization"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
      },
      "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into speech.",
            "type": "string",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ],
            "title": "Text"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "type": "string",
            "default": "eleven_monolingual_v1",
            "title": "Model Id"
          },
          "language_code": {
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "previous_text": {
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ],
            "title": "Previous Text"
          },
          "next_text": {
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ],
            "title": "Next Text"
          },
          "previous_request_ids": {
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ],
            "title": "Previous Request Ids"
          },
          "next_request_ids": {
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ],
            "title": "Next Request Ids"
          },
          "use_pvc_as_ivc": {
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "type": "boolean",
            "default": false,
            "deprecated": true,
            "examples": [
              true
            ],
            "title": "Use Pvc As Ivc"
          },
          "apply_text_normalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "examples": [
              true
            ],
            "title": "Apply Text Normalization"
          },
          "apply_language_text_normalization": {
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Apply Language Text Normalization"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
      },
      "Body_Text_to_speech_v1_text_to_speech__voice_id__post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into speech.",
            "type": "string",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ],
            "title": "Text"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "type": "string",
            "default": "eleven_monolingual_v1",
            "title": "Model Id"
          },
          "language_code": {
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "previous_text": {
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ],
            "title": "Previous Text"
          },
          "next_text": {
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ],
            "title": "Next Text"
          },
          "previous_request_ids": {
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ],
            "title": "Previous Request Ids"
          },
          "next_request_ids": {
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ],
            "title": "Next Request Ids"
          },
          "use_pvc_as_ivc": {
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "type": "boolean",
            "default": false,
            "deprecated": true,
            "examples": [
              true
            ],
            "title": "Use Pvc As Ivc"
          },
          "apply_text_normalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "examples": [
              true
            ],
            "title": "Apply Text Normalization"
          },
          "apply_language_text_normalization": {
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Apply Language Text Normalization"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_v1_text_to_speech__voice_id__post"
      },
      "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into speech.",
            "type": "string",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ],
            "title": "Text"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "type": "string",
            "default": "eleven_monolingual_v1",
            "title": "Model Id"
          },
          "language_code": {
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "previous_text": {
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ],
            "title": "Previous Text"
          },
          "next_text": {
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ],
            "title": "Next Text"
          },
          "previous_request_ids": {
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ],
            "title": "Previous Request Ids"
          },
          "next_request_ids": {
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ],
            "title": "Next Request Ids"
          },
          "use_pvc_as_ivc": {
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "type": "boolean",
            "default": false,
            "deprecated": true,
            "examples": [
              true
            ],
            "title": "Use Pvc As Ivc"
          },
          "apply_text_normalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "examples": [
              true
            ],
            "title": "Apply Text Normalization"
          },
          "apply_language_text_normalization": {
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Apply Language Text Normalization"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
      },
      "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post": {
        "type": "object",
        "properties": {
          "segments": {
            "description": "Transcribe this specific list of segments.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Segments"
          }
        },
        "required": [
          "segments"
        ],
        "title": "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post"
      },
      "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post": {
        "type": "object",
        "properties": {
          "segments": {
            "description": "Translate only this list of segments.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Segments"
          },
          "languages": {
            "description": "Translate only these languages for each segment.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages"
          }
        },
        "required": [
          "segments",
          "languages"
        ],
        "title": "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post"
      },
      "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post": {
        "type": "object",
        "properties": {
          "resource_type": {
            "description": "Resource type of the target resource.",
            "$ref": "#/components/schemas/WorkspaceResourceType"
          },
          "user_email": {
            "description": "The email of the user",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email"
          },
          "group_id": {
            "description": "The ID of the target group. To target the permissions principals have by default on this resource, use the value 'default'.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          },
          "workspace_api_key_id": {
            "description": "The ID of the target workspace API key. This isn't the same as the key itself that would you pass in the header for authentication. Workspace admins can find this in the workspace settings UI.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Api Key Id"
          }
        },
        "required": [
          "resource_type"
        ],
        "title": "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post"
      },
      "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post": {
        "type": "object",
        "properties": {
          "remove_background_noise": {
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          },
          "selected_speaker_ids": {
            "description": "Speaker IDs to be used for PVC training. Make sure you send all the speaker IDs you want to use for PVC training in one request because the last request will override the previous ones.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "speaker_0"
            ],
            "title": "Selected Speaker Ids"
          },
          "trim_start_time": {
            "description": "The start time of the audio to be used for PVC training. Time should be in milliseconds",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              0
            ],
            "title": "Trim Start Time"
          },
          "trim_end_time": {
            "description": "The end time of the audio to be used for PVC training. Time should be in milliseconds",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              10
            ],
            "title": "Trim End Time"
          }
        },
        "title": "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post"
      },
      "Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post": {
        "type": "object",
        "properties": {
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "invalidate_affected_text": {
            "description": "This will automatically mark text in this project for reconversion when the new dictionary applies or the old one no longer does.",
            "type": "boolean",
            "default": true,
            "examples": [
              false
            ],
            "title": "Invalidate Affected Text"
          }
        },
        "required": [
          "pronunciation_dictionary_locators"
        ],
        "title": "Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post"
      },
      "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post": {
        "type": "object",
        "properties": {
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          },
          "from_document": {
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document"
          },
          "auto_convert": {
            "description": "Whether to auto convert the Studio project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          }
        },
        "title": "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post"
      },
      "Body_Update_Studio_project_v1_studio_projects__project_id__post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Studio project, used for identification only.",
            "type": "string",
            "examples": [
              "Project 1"
            ],
            "title": "Name"
          },
          "default_title_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Paragraph Voice Id"
          },
          "title": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Romeo and Juliet"
            ],
            "title": "Title"
          },
          "author": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "William Shakespeare"
            ],
            "title": "Author"
          },
          "isbn_number": {
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "0-306-40615-2"
            ],
            "title": "Isbn Number"
          },
          "volume_normalization": {
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Volume Normalization"
          }
        },
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id"
        ],
        "title": "Body_Update_Studio_project_v1_studio_projects__project_id__post"
      },
      "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post": {
        "type": "object",
        "properties": {
          "file": {
            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h5&gt;More of your content&lt;/h5&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'",
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "auto_convert": {
            "description": "Whether to auto convert the project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          },
          "auto_publish": {
            "description": "Whether to auto publish the new project snapshot after it's converted.",
            "type": "boolean",
            "default": false,
            "title": "Auto Publish"
          }
        },
        "title": "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post"
      },
      "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the chapter, used for identification only.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Chapter 1"
            ],
            "title": "Name"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterContentInputModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The chapter content to use."
          }
        },
        "title": "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post"
      },
      "Body_Update_member_v1_workspace_members_post": {
        "type": "object",
        "properties": {
          "email": {
            "description": "Email of the target user.",
            "type": "string",
            "title": "Email"
          },
          "is_locked": {
            "description": "Whether to lock or unlock the user account.",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Locked"
          },
          "workspace_role": {
            "description": "Role dictating permissions in the workspace.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "workspace_admin",
                  "workspace_member"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Update_member_v1_workspace_members_post"
      },
      "Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post": {
        "type": "object",
        "properties": {
          "recording": {
            "description": "Audio recording of the user",
            "type": "string",
            "format": "binary",
            "title": "Recording"
          }
        },
        "required": [
          "recording"
        ],
        "title": "Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post"
      },
      "BreakdownTypes": {
        "description": "How to break down the information. Cannot be \"user\" or \"api_key\" if include_workspace_metrics is False.",
        "type": "string",
        "enum": [
          "none",
          "voice",
          "voice_multiplier",
          "user",
          "groups",
          "api_keys",
          "all_api_keys",
          "product_type",
          "model",
          "resource",
          "request_queue"
        ],
        "title": "BreakdownTypes"
      },
      "ChapterContentBlockExtendableNodeResponseModel": {
        "description": "Not used. Make sure you anticipate new types in the future.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "_other",
            "title": "Type"
          }
        },
        "required": [
          "type"
        ],
        "title": "ChapterContentBlockExtendableNodeResponseModel"
      },
      "ChapterContentBlockInputModel": {
        "type": "object",
        "properties": {
          "block_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Id"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterContentParagraphTtsNodeInputModel"
            },
            "title": "Nodes"
          }
        },
        "required": [
          "nodes"
        ],
        "title": "ChapterContentBlockInputModel"
      },
      "ChapterContentBlockResponseModel": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "nodes": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChapterContentBlockTtsNodeResponseModel"
                },
                {
                  "$ref": "#/components/schemas/ChapterContentBlockExtendableNodeResponseModel"
                }
              ]
            },
            "title": "Nodes"
          }
        },
        "required": [
          "block_id",
          "nodes"
        ],
        "title": "ChapterContentBlockResponseModel"
      },
      "ChapterContentBlockTtsNodeResponseModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "tts_node",
            "title": "Type"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "required": [
          "type",
          "voice_id",
          "text"
        ],
        "title": "ChapterContentBlockTtsNodeResponseModel"
      },
      "ChapterContentInputModel": {
        "type": "object",
        "properties": {
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterContentBlockInputModel"
            },
            "title": "Blocks"
          }
        },
        "required": [
          "blocks"
        ],
        "title": "ChapterContentInputModel"
      },
      "ChapterContentParagraphTtsNodeInputModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "tts_node",
            "title": "Type"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          }
        },
        "required": [
          "type",
          "text",
          "voice_id"
        ],
        "title": "ChapterContentParagraphTtsNodeInputModel"
      },
      "ChapterContentResponseModel": {
        "type": "object",
        "properties": {
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterContentBlockResponseModel"
            },
            "title": "Blocks"
          }
        },
        "required": [
          "blocks"
        ],
        "title": "ChapterContentResponseModel"
      },
      "ChapterResponseModel": {
        "type": "object",
        "properties": {
          "chapter_id": {
            "description": "The ID of the chapter.",
            "type": "string",
            "title": "Chapter Id"
          },
          "name": {
            "description": "The name of the chapter.",
            "type": "string",
            "title": "Name"
          },
          "last_conversion_date_unix": {
            "description": "The last conversion date of the chapter.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix"
          },
          "conversion_progress": {
            "description": "The conversion progress of the chapter.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Progress"
          },
          "can_be_downloaded": {
            "description": "Whether the chapter can be downloaded.",
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "state": {
            "description": "The state of the chapter.",
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State"
          },
          "statistics": {
            "description": "The statistics of the chapter.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "last_conversion_error": {
            "description": "The last conversion error of the chapter.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Error"
          }
        },
        "example": {
          "can_be_downloaded": true,
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "conversion_progress": 0.5,
          "last_conversion_date_unix": 1714204800,
          "last_conversion_error": "Error message",
          "name": "Chapter 1",
          "state": "converting",
          "statistics": {
            "characters_converted": 500,
            "characters_unconverted": 1000,
            "paragraphs_converted": 20,
            "paragraphs_unconverted": 10
          }
        },
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state"
        ],
        "title": "ChapterResponseModel"
      },
      "ChapterSnapshotExtendedResponseModel": {
        "type": "object",
        "properties": {
          "chapter_snapshot_id": {
            "description": "The ID of the chapter snapshot.",
            "type": "string",
            "title": "Chapter Snapshot Id"
          },
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "chapter_id": {
            "description": "The ID of the chapter.",
            "type": "string",
            "title": "Chapter Id"
          },
          "created_at_unix": {
            "description": "The creation date of the chapter snapshot.",
            "type": "integer",
            "title": "Created At Unix"
          },
          "name": {
            "description": "The name of the chapter snapshot.",
            "type": "string",
            "title": "Name"
          },
          "character_alignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CharacterAlignmentModel"
            },
            "title": "Character Alignments"
          }
        },
        "example": {
          "chapter_id": "aw1NgEzBg83R7vgmiJt3",
          "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
          "created_at_unix": 1714204800,
          "name": "My Chapter Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt2"
        },
        "required": [
          "chapter_snapshot_id",
          "project_id",
          "chapter_id",
          "created_at_unix",
          "name",
          "character_alignments"
        ],
        "title": "ChapterSnapshotExtendedResponseModel"
      },
      "ChapterSnapshotResponseModel": {
        "type": "object",
        "properties": {
          "chapter_snapshot_id": {
            "description": "The ID of the chapter snapshot.",
            "type": "string",
            "title": "Chapter Snapshot Id"
          },
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "chapter_id": {
            "description": "The ID of the chapter.",
            "type": "string",
            "title": "Chapter Id"
          },
          "created_at_unix": {
            "description": "The creation date of the chapter snapshot.",
            "type": "integer",
            "title": "Created At Unix"
          },
          "name": {
            "description": "The name of the chapter snapshot.",
            "type": "string",
            "title": "Name"
          }
        },
        "example": {
          "chapter_id": "aw1NgEzBg83R7vgmiJt3",
          "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
          "created_at_unix": 1714204800,
          "name": "My Chapter Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt2"
        },
        "required": [
          "chapter_snapshot_id",
          "project_id",
          "chapter_id",
          "created_at_unix",
          "name"
        ],
        "title": "ChapterSnapshotResponseModel"
      },
      "ChapterSnapshotsResponseModel": {
        "type": "object",
        "properties": {
          "snapshots": {
            "description": "List of chapter snapshots.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterSnapshotResponseModel"
            },
            "title": "Snapshots"
          }
        },
        "example": {
          "snapshots": [
            {
              "chapter_id": "aw1NgEzBg83R7vgmiJt3",
              "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
              "created_at_unix": 1714204800,
              "name": "My Chapter Snapshot",
              "project_id": "aw1NgEzBg83R7vgmiJt2"
            }
          ]
        },
        "required": [
          "snapshots"
        ],
        "title": "ChapterSnapshotsResponseModel"
      },
      "ChapterStatisticsResponseModel": {
        "type": "object",
        "properties": {
          "characters_unconverted": {
            "description": "The number of unconverted characters.",
            "type": "integer",
            "title": "Characters Unconverted"
          },
          "characters_converted": {
            "description": "The number of converted characters.",
            "type": "integer",
            "title": "Characters Converted"
          },
          "paragraphs_converted": {
            "description": "The number of converted paragraphs.",
            "type": "integer",
            "title": "Paragraphs Converted"
          },
          "paragraphs_unconverted": {
            "description": "The number of unconverted paragraphs.",
            "type": "integer",
            "title": "Paragraphs Unconverted"
          }
        },
        "example": {
          "characters_converted": 500,
          "characters_unconverted": 1000,
          "paragraphs_converted": 20,
          "paragraphs_unconverted": 10
        },
        "required": [
          "characters_unconverted",
          "characters_converted",
          "paragraphs_converted",
          "paragraphs_unconverted"
        ],
        "title": "ChapterStatisticsResponseModel"
      },
      "ChapterWithContentResponseModel": {
        "type": "object",
        "properties": {
          "chapter_id": {
            "description": "The ID of the chapter.",
            "type": "string",
            "title": "Chapter Id"
          },
          "name": {
            "description": "The name of the chapter.",
            "type": "string",
            "title": "Name"
          },
          "last_conversion_date_unix": {
            "description": "The last conversion date of the chapter.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix"
          },
          "conversion_progress": {
            "description": "The conversion progress of the chapter.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Progress"
          },
          "can_be_downloaded": {
            "description": "Whether the chapter can be downloaded.",
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "state": {
            "description": "The state of the chapter.",
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State"
          },
          "statistics": {
            "description": "The statistics of the chapter.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "last_conversion_error": {
            "description": "The last conversion error of the chapter.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Error"
          },
          "content": {
            "$ref": "#/components/schemas/ChapterContentResponseModel"
          }
        },
        "example": {
          "can_be_downloaded": true,
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "conversion_progress": 0.5,
          "last_conversion_date_unix": 1714204800,
          "last_conversion_error": "Error message",
          "name": "Chapter 1",
          "state": "converting",
          "statistics": {
            "characters_converted": 500,
            "characters_unconverted": 1000,
            "paragraphs_converted": 20,
            "paragraphs_unconverted": 10
          }
        },
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state",
          "content"
        ],
        "title": "ChapterWithContentResponseModel"
      },
      "CharacterAlignmentModel": {
        "type": "object",
        "properties": {
          "characters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character End Times Seconds"
          }
        },
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "CharacterAlignmentModel"
      },
      "CharacterAlignmentResponseModel": {
        "type": "object",
        "properties": {
          "characters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character End Times Seconds"
          }
        },
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "CharacterAlignmentResponseModel"
      },
      "ClientEvent": {
        "type": "string",
        "enum": [
          "conversation_initiation_metadata",
          "asr_initiation_metadata",
          "ping",
          "audio",
          "interruption",
          "user_transcript",
          "agent_response",
          "agent_response_correction",
          "client_tool_call",
          "vad_score",
          "internal_turn_probability",
          "internal_tentative_agent_response"
        ],
        "title": "ClientEvent"
      },
      "ClientToolConfig-Input": {
        "description": "A client tool is one that sends an event to the user's client to trigger something client side",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "default": "",
            "title": "Id"
          },
          "type": {
            "description": "The type of tool",
            "type": "string",
            "default": "client",
            "const": "client",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "parameters": {
            "description": "Schema for any parameters to pass to the client",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "expects_response": {
            "description": "If true, calling this tool should block the conversation until the client responds with some response which is passed to the llm. If false then we will continue the conversation without waiting for the client to respond, this is useful to show content to a user but not block the conversation",
            "type": "boolean",
            "default": false,
            "title": "Expects Response"
          },
          "response_timeout_secs": {
            "description": "The maximum time in seconds to wait for a response from the client. Should only be set if expects_response is true",
            "anyOf": [
              {
                "type": "integer",
                "maximum": 30,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Timeout Secs"
          },
          "dynamic_variables": {
            "description": "Configuration for dynamic variables",
            "$ref": "#/components/schemas/DynamicVariablesConfig"
          }
        },
        "example": {
          "expects_response": false,
          "type": "client"
        },
        "required": [
          "name",
          "description"
        ],
        "title": "ClientToolConfig"
      },
      "ClientToolConfig-Output": {
        "description": "A client tool is one that sends an event to the user's client to trigger something client side",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "default": "",
            "title": "Id"
          },
          "type": {
            "description": "The type of tool",
            "type": "string",
            "default": "client",
            "const": "client",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "parameters": {
            "description": "Schema for any parameters to pass to the client",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "expects_response": {
            "description": "If true, calling this tool should block the conversation until the client responds with some response which is passed to the llm. If false then we will continue the conversation without waiting for the client to respond, this is useful to show content to a user but not block the conversation",
            "type": "boolean",
            "default": false,
            "title": "Expects Response"
          },
          "response_timeout_secs": {
            "description": "The maximum time in seconds to wait for a response from the client. Should only be set if expects_response is true",
            "anyOf": [
              {
                "type": "integer",
                "maximum": 30,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Timeout Secs"
          },
          "dynamic_variables": {
            "description": "Configuration for dynamic variables",
            "$ref": "#/components/schemas/DynamicVariablesConfig"
          }
        },
        "example": {
          "expects_response": false,
          "type": "client"
        },
        "required": [
          "name",
          "description"
        ],
        "title": "ClientToolConfig"
      },
      "CollectionContentItem": {
        "type": "object",
        "properties": {
          "added_at": {
            "type": "string",
            "format": "date-time",
            "title": "Added At"
          },
          "added_by": {
            "type": "string",
            "title": "Added By"
          },
          "_id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskDescriptionContentItem"
              },
              {
                "$ref": "#/components/schemas/NestedCollectionContentItem"
              }
            ],
            "title": "Data"
          }
        },
        "required": [
          "added_at",
          "added_by",
          "_id",
          "data"
        ],
        "title": "CollectionContentItem"
      },
      "CollectionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionContentItem"
            },
            "title": "Contents"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "contents"
        ],
        "title": "CollectionModel"
      },
      "CollectionsList": {
        "type": "object",
        "properties": {
          "collections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionModel"
            },
            "title": "Collections"
          }
        },
        "required": [
          "collections"
        ],
        "title": "CollectionsList"
      },
      "ConvAISecretLocator": {
        "description": "Used to reference a secret from the agent's secret store.",
        "type": "object",
        "properties": {
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          }
        },
        "required": [
          "secret_id"
        ],
        "title": "ConvAISecretLocator"
      },
      "ConvAIStoredSecretDependencies": {
        "type": "object",
        "properties": {
          "tools": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableToolIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableToolIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              }
            },
            "title": "Tools"
          },
          "agent_tools": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentToolIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentToolIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentToolIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentToolIdentifier"
                }
              }
            },
            "title": "Agent Tools"
          },
          "others": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecretDependencyType"
            },
            "title": "Others"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DependentPhoneNumberIdentifier"
            },
            "title": "Phone Numbers"
          }
        },
        "required": [
          "tools",
          "agent_tools",
          "others"
        ],
        "title": "ConvAIStoredSecretDependencies"
      },
      "ConvAIWebhooks": {
        "type": "object",
        "properties": {
          "post_call_webhook_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Post Call Webhook Id"
          }
        },
        "title": "ConvAIWebhooks"
      },
      "ConvAIWorkspaceStoredSecretConfig": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "stored",
            "title": "Type"
          },
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "used_by": {
            "$ref": "#/components/schemas/ConvAIStoredSecretDependencies"
          }
        },
        "required": [
          "type",
          "secret_id",
          "name",
          "used_by"
        ],
        "title": "ConvAIWorkspaceStoredSecretConfig"
      },
      "ConversationChargingCommonModel": {
        "type": "object",
        "properties": {
          "dev_discount": {
            "type": "boolean",
            "default": false,
            "title": "Dev Discount"
          },
          "tier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tier"
          },
          "llm_usage": {
            "$ref": "#/components/schemas/LLMCategoryUsage"
          },
          "llm_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Price"
          }
        },
        "title": "ConversationChargingCommonModel"
      },
      "ConversationConfig": {
        "type": "object",
        "properties": {
          "max_duration_seconds": {
            "description": "The maximum duration of a conversation in seconds",
            "type": "integer",
            "default": 600,
            "title": "Max Duration Seconds"
          },
          "client_events": {
            "description": "The events that will be sent to the client",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientEvent"
            },
            "title": "Client Events"
          }
        },
        "example": {
          "client_events": [
            "audio",
            "interruption"
          ],
          "max_duration_seconds": 600
        },
        "title": "ConversationConfig"
      },
      "ConversationConfigClientOverride-Input": {
        "type": "object",
        "properties": {
          "agent": {
            "description": "The overrides for the agent configuration",
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigOverride"
              },
              {
                "type": "null"
              }
            ]
          },
          "tts": {
            "description": "The overrides for the TTS configuration",
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalConfigOverride"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "ConversationConfigClientOverride"
      },
      "ConversationConfigClientOverride-Output": {
        "type": "object",
        "properties": {
          "agent": {
            "description": "The overrides for the agent configuration",
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigOverride"
              },
              {
                "type": "null"
              }
            ]
          },
          "tts": {
            "description": "The overrides for the TTS configuration",
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalConfigOverride"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "ConversationConfigClientOverride"
      },
      "ConversationConfigClientOverrideConfig-Input": {
        "type": "object",
        "properties": {
          "agent": {
            "description": "Overrides for the agent configuration",
            "$ref": "#/components/schemas/AgentConfigOverrideConfig"
          },
          "tts": {
            "description": "Overrides for the TTS configuration",
            "$ref": "#/components/schemas/TTSConversationalConfigOverrideConfig"
          }
        },
        "title": "ConversationConfigClientOverrideConfig"
      },
      "ConversationConfigClientOverrideConfig-Output": {
        "type": "object",
        "properties": {
          "agent": {
            "description": "Overrides for the agent configuration",
            "$ref": "#/components/schemas/AgentConfigOverrideConfig"
          },
          "tts": {
            "description": "Overrides for the TTS configuration",
            "$ref": "#/components/schemas/TTSConversationalConfigOverrideConfig"
          }
        },
        "title": "ConversationConfigClientOverrideConfig"
      },
      "ConversationDeletionSettings": {
        "type": "object",
        "properties": {
          "deletion_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletion Time Unix Secs"
          },
          "deleted_logs_at_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Logs At Time Unix Secs"
          },
          "deleted_audio_at_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Audio At Time Unix Secs"
          },
          "deleted_transcript_at_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Transcript At Time Unix Secs"
          },
          "delete_transcript_and_pii": {
            "type": "boolean",
            "default": false,
            "title": "Delete Transcript And Pii"
          },
          "delete_audio": {
            "type": "boolean",
            "default": false,
            "title": "Delete Audio"
          }
        },
        "title": "ConversationDeletionSettings"
      },
      "ConversationHistoryAnalysisCommonModel": {
        "type": "object",
        "properties": {
          "evaluation_criteria_results": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConversationHistoryEvaluationCriteriaResultCommonModel"
            },
            "title": "Evaluation Criteria Results"
          },
          "data_collection_results": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DataCollectionResultCommonModel"
            },
            "title": "Data Collection Results"
          },
          "call_successful": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "transcript_summary": {
            "type": "string",
            "title": "Transcript Summary"
          }
        },
        "required": [
          "call_successful",
          "transcript_summary"
        ],
        "title": "ConversationHistoryAnalysisCommonModel"
      },
      "ConversationHistoryErrorCommonModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "required": [
          "code"
        ],
        "title": "ConversationHistoryErrorCommonModel"
      },
      "ConversationHistoryEvaluationCriteriaResultCommonModel": {
        "type": "object",
        "properties": {
          "criteria_id": {
            "type": "string",
            "title": "Criteria Id"
          },
          "result": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "rationale": {
            "type": "string",
            "title": "Rationale"
          }
        },
        "required": [
          "criteria_id",
          "result",
          "rationale"
        ],
        "title": "ConversationHistoryEvaluationCriteriaResultCommonModel"
      },
      "ConversationHistoryFeedbackCommonModel": {
        "type": "object",
        "properties": {
          "overall_score": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserFeedbackScore"
              },
              {
                "type": "null"
              }
            ]
          },
          "likes": {
            "type": "integer",
            "default": 0,
            "title": "Likes"
          },
          "dislikes": {
            "type": "integer",
            "default": 0,
            "title": "Dislikes"
          }
        },
        "title": "ConversationHistoryFeedbackCommonModel"
      },
      "ConversationHistoryMetadataCommonModel": {
        "type": "object",
        "properties": {
          "start_time_unix_secs": {
            "type": "integer",
            "title": "Start Time Unix Secs"
          },
          "accepted_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Time Unix Secs"
          },
          "call_duration_secs": {
            "type": "integer",
            "title": "Call Duration Secs"
          },
          "cost": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "deletion_settings": {
            "$ref": "#/components/schemas/ConversationDeletionSettings"
          },
          "feedback": {
            "$ref": "#/components/schemas/ConversationHistoryFeedbackCommonModel"
          },
          "authorization_method": {
            "default": "public",
            "$ref": "#/components/schemas/AuthorizationMethod"
          },
          "charging": {
            "$ref": "#/components/schemas/ConversationChargingCommonModel"
          },
          "phone_call": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTwilioPhoneCallModel"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "twilio": "#/components/schemas/ConversationHistoryTwilioPhoneCallModel"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Call"
          },
          "termination_reason": {
            "type": "string",
            "default": "",
            "title": "Termination Reason"
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryErrorCommonModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "main_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Main Language"
          },
          "rag_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryRagUsageCommonModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "start_time_unix_secs",
          "call_duration_secs"
        ],
        "title": "ConversationHistoryMetadataCommonModel"
      },
      "ConversationHistoryRagUsageCommonModel": {
        "type": "object",
        "properties": {
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "embedding_model": {
            "type": "string",
            "title": "Embedding Model"
          }
        },
        "required": [
          "usage_count",
          "embedding_model"
        ],
        "title": "ConversationHistoryRagUsageCommonModel"
      },
      "ConversationHistoryTranscriptCommonModel": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "agent"
            ],
            "title": "Role"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "tool_calls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallCommonModel"
            },
            "title": "Tool Calls"
          },
          "tool_results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolResultCommonModel"
            },
            "title": "Tool Results"
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserFeedback"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Override"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          },
          "conversation_turn_metrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationTurnMetrics"
              },
              {
                "type": "null"
              }
            ]
          },
          "rag_retrieval_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RagRetrievalInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMUsage"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "role",
          "time_in_call_secs"
        ],
        "title": "ConversationHistoryTranscriptCommonModel"
      },
      "ConversationHistoryTranscriptToolCallClientDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "client",
            "const": "client",
            "title": "Type"
          },
          "parameters": {
            "title": "Parameters",
            "type": "string"
          }
        },
        "required": [
          "parameters"
        ],
        "title": "ConversationHistoryTranscriptToolCallClientDetails"
      },
      "ConversationHistoryTranscriptToolCallCommonModel": {
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "params_as_json": {
            "type": "string",
            "title": "Params As Json"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_details": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallWebhookDetails"
                  },
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallClientDetails"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "client": "#/components/schemas/ConversationHistoryTranscriptToolCallClientDetails",
                    "webhook": "#/components/schemas/ConversationHistoryTranscriptToolCallWebhookDetails"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Details"
          }
        },
        "required": [
          "request_id",
          "tool_name",
          "params_as_json",
          "tool_has_been_called"
        ],
        "title": "ConversationHistoryTranscriptToolCallCommonModel"
      },
      "ConversationHistoryTranscriptToolCallWebhookDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "webhook",
            "const": "webhook",
            "title": "Type"
          },
          "method": {
            "type": "string",
            "title": "Method"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Headers"
          },
          "path_params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Path Params"
          },
          "query_params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Query Params"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "required": [
          "method",
          "url"
        ],
        "title": "ConversationHistoryTranscriptToolCallWebhookDetails"
      },
      "ConversationHistoryTranscriptToolResultCommonModel": {
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "result_value": {
            "type": "string",
            "title": "Result Value"
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_latency_secs": {
            "type": "number",
            "default": 0,
            "title": "Tool Latency Secs"
          }
        },
        "required": [
          "request_id",
          "tool_name",
          "result_value",
          "is_error",
          "tool_has_been_called"
        ],
        "title": "ConversationHistoryTranscriptToolResultCommonModel"
      },
      "ConversationHistoryTwilioPhoneCallModel": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string",
            "enum": [
              "inbound",
              "outbound"
            ],
            "title": "Direction"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "agent_number": {
            "type": "string",
            "title": "Agent Number"
          },
          "external_number": {
            "type": "string",
            "title": "External Number"
          },
          "type": {
            "type": "string",
            "const": "twilio",
            "title": "Type"
          },
          "stream_sid": {
            "type": "string",
            "title": "Stream Sid"
          },
          "call_sid": {
            "type": "string",
            "title": "Call Sid"
          }
        },
        "required": [
          "direction",
          "phone_number_id",
          "agent_number",
          "external_number",
          "type",
          "stream_sid",
          "call_sid"
        ],
        "title": "ConversationHistoryTwilioPhoneCallModel"
      },
      "ConversationInitiationClientDataConfig-Input": {
        "type": "object",
        "properties": {
          "conversation_config_override": {
            "description": "Overrides for the conversation configuration",
            "$ref": "#/components/schemas/ConversationConfigClientOverrideConfig-Input"
          },
          "custom_llm_extra_body": {
            "description": "Whether to include custom LLM extra body",
            "type": "boolean",
            "default": false,
            "title": "Custom Llm Extra Body"
          },
          "enable_conversation_initiation_client_data_from_webhook": {
            "description": "Whether to enable conversation initiation client data from webhooks",
            "type": "boolean",
            "default": false,
            "title": "Enable Conversation Initiation Client Data From Webhook"
          }
        },
        "example": {
          "custom_llm_extra_body": true,
          "enable_conversation_initiation_client_data_from_webhook": true
        },
        "title": "ConversationInitiationClientDataConfig"
      },
      "ConversationInitiationClientDataConfig-Output": {
        "type": "object",
        "properties": {
          "conversation_config_override": {
            "description": "Overrides for the conversation configuration",
            "$ref": "#/components/schemas/ConversationConfigClientOverrideConfig-Output"
          },
          "custom_llm_extra_body": {
            "description": "Whether to include custom LLM extra body",
            "type": "boolean",
            "default": false,
            "title": "Custom Llm Extra Body"
          },
          "enable_conversation_initiation_client_data_from_webhook": {
            "description": "Whether to enable conversation initiation client data from webhooks",
            "type": "boolean",
            "default": false,
            "title": "Enable Conversation Initiation Client Data From Webhook"
          }
        },
        "example": {
          "custom_llm_extra_body": true,
          "enable_conversation_initiation_client_data_from_webhook": true
        },
        "title": "ConversationInitiationClientDataConfig"
      },
      "ConversationInitiationClientDataRequest-Input": {
        "type": "object",
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Input"
          },
          "custom_llm_extra_body": {
            "type": "object",
            "title": "Custom Llm Extra Body"
          },
          "dynamic_variables": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "title": "Dynamic Variables"
          }
        },
        "title": "ConversationInitiationClientDataRequest"
      },
      "ConversationInitiationClientDataRequest-Output": {
        "type": "object",
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Output"
          },
          "custom_llm_extra_body": {
            "type": "object",
            "title": "Custom Llm Extra Body"
          },
          "dynamic_variables": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "title": "Dynamic Variables"
          }
        },
        "title": "ConversationInitiationClientDataRequest"
      },
      "ConversationInitiationClientDataWebhook": {
        "type": "object",
        "properties": {
          "url": {
            "description": "The URL to send the webhook to",
            "type": "string",
            "title": "Url"
          },
          "request_headers": {
            "description": "The headers to send with the webhook request",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "title": "Request Headers"
          }
        },
        "example": {
          "request_headers": {
            "Content-Type": "application/json"
          },
          "url": "https://example.com/webhook"
        },
        "required": [
          "url",
          "request_headers"
        ],
        "title": "ConversationInitiationClientDataWebhook"
      },
      "ConversationSignedUrlResponseModel": {
        "type": "object",
        "properties": {
          "signed_url": {
            "type": "string",
            "title": "Signed Url"
          }
        },
        "required": [
          "signed_url"
        ],
        "title": "ConversationSignedUrlResponseModel"
      },
      "ConversationSummaryResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Name"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "start_time_unix_secs": {
            "type": "integer",
            "title": "Start Time Unix Secs"
          },
          "call_duration_secs": {
            "type": "integer",
            "title": "Call Duration Secs"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          },
          "status": {
            "type": "string",
            "enum": [
              "in-progress",
              "processing",
              "done",
              "failed"
            ],
            "title": "Status"
          },
          "call_successful": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          }
        },
        "required": [
          "agent_id",
          "conversation_id",
          "start_time_unix_secs",
          "call_duration_secs",
          "message_count",
          "status",
          "call_successful"
        ],
        "title": "ConversationSummaryResponseModel"
      },
      "ConversationTokenDBModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "description": "The ID of the agent",
            "type": "string",
            "title": "Agent Id"
          },
          "conversation_token": {
            "description": "The token for the agent",
            "type": "string",
            "title": "Conversation Token"
          },
          "expiration_time_unix_secs": {
            "description": "The expiration time of the token in unix seconds",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Time Unix Secs"
          },
          "purpose": {
            "description": "The purpose of the token",
            "default": "signed_url",
            "$ref": "#/components/schemas/ConversationTokenPurpose"
          }
        },
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB",
          "conversation_token": "1234567890",
          "expiration_time_unix_secs": 1716153600,
          "purpose": "signed_url"
        },
        "required": [
          "agent_id",
          "conversation_token"
        ],
        "title": "ConversationTokenDBModel"
      },
      "ConversationTokenPurpose": {
        "type": "string",
        "enum": [
          "signed_url",
          "shareable_link"
        ],
        "title": "ConversationTokenPurpose"
      },
      "ConversationTurnMetrics": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricRecord"
            },
            "title": "Metrics"
          }
        },
        "title": "ConversationTurnMetrics"
      },
      "ConversationalConfigAPIModel-Input": {
        "type": "object",
        "properties": {
          "asr": {
            "description": "Configuration for conversational transcription",
            "$ref": "#/components/schemas/ASRConversationalConfig"
          },
          "turn": {
            "description": "Configuration for turn detection",
            "$ref": "#/components/schemas/TurnConfig"
          },
          "tts": {
            "description": "Configuration for conversational text to speech",
            "$ref": "#/components/schemas/TTSConversationalConfig"
          },
          "conversation": {
            "description": "Configuration for conversational events",
            "$ref": "#/components/schemas/ConversationConfig"
          },
          "language_presets": {
            "description": "Language presets for conversations",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LanguagePreset-Input"
            },
            "title": "Language Presets"
          },
          "agent": {
            "description": "Agent specific configuration",
            "$ref": "#/components/schemas/AgentConfigAPIModel-Input"
          }
        },
        "title": "ConversationalConfigAPIModel"
      },
      "ConversationalConfigAPIModel-Output": {
        "type": "object",
        "properties": {
          "asr": {
            "description": "Configuration for conversational transcription",
            "$ref": "#/components/schemas/ASRConversationalConfig"
          },
          "turn": {
            "description": "Configuration for turn detection",
            "$ref": "#/components/schemas/TurnConfig"
          },
          "tts": {
            "description": "Configuration for conversational text to speech",
            "$ref": "#/components/schemas/TTSConversationalConfig"
          },
          "conversation": {
            "description": "Configuration for conversational events",
            "$ref": "#/components/schemas/ConversationConfig"
          },
          "language_presets": {
            "description": "Language presets for conversations",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LanguagePreset-Output"
            },
            "title": "Language Presets"
          },
          "agent": {
            "description": "Agent specific configuration",
            "$ref": "#/components/schemas/AgentConfigAPIModel-Output"
          }
        },
        "title": "ConversationalConfigAPIModel"
      },
      "ConvertChapterResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the studio chapter conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "ConvertChapterResponseModel"
      },
      "ConvertProjectResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the studio project conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "ConvertProjectResponseModel"
      },
      "CreateAgentResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "description": "ID of the created agent",
            "type": "string",
            "title": "Agent Id"
          }
        },
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB"
        },
        "required": [
          "agent_id"
        ],
        "title": "CreateAgentResponseModel"
      },
      "CreatePhoneNumberResponseModel": {
        "type": "object",
        "properties": {
          "phone_number_id": {
            "description": "Phone entity ID",
            "type": "string",
            "title": "Phone Number Id"
          }
        },
        "required": [
          "phone_number_id"
        ],
        "title": "CreatePhoneNumberResponseModel"
      },
      "CreateProjectRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "required": [
          "name"
        ],
        "title": "CreateProjectRequestBody"
      },
      "CreatePronunciationDictionaryResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the create pronunciation dictionary request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "CreatePronunciationDictionaryResponseModel"
      },
      "CreateSIPTrunkPhoneNumberRequest": {
        "description": "SIP trunk phone number request\n\nIncludes termination URI and optional digest authentication credentials.\nIf credentials are provided, both username and password must be included.\nIf credentials are not provided, ACL authentication is assumed. (user needs to add our ips in their settings)",
        "type": "object",
        "properties": {
          "phone_number": {
            "description": "Phone number",
            "type": "string",
            "title": "Phone Number"
          },
          "provider": {
            "default": "sip_trunk",
            "$ref": "#/components/schemas/TelephonyProvider"
          },
          "label": {
            "description": "Label for the phone number",
            "type": "string",
            "title": "Label"
          },
          "termination_uri": {
            "description": "SIP trunk termination URI",
            "type": "string",
            "title": "Termination Uri"
          },
          "credentials": {
            "description": "Optional digest authentication credentials (username/password). If not provided, ACL authentication is assumed.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/SIPTrunkCredentials"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "phone_number",
          "label",
          "termination_uri"
        ],
        "title": "CreateSIPTrunkPhoneNumberRequest"
      },
      "CreateTwilioPhoneNumberRequest": {
        "type": "object",
        "properties": {
          "phone_number": {
            "description": "Phone number",
            "type": "string",
            "title": "Phone Number"
          },
          "provider": {
            "default": "twilio",
            "$ref": "#/components/schemas/TelephonyProvider"
          },
          "label": {
            "description": "Label for the phone number",
            "type": "string",
            "title": "Label"
          },
          "sid": {
            "description": "Twilio Account SID",
            "type": "string",
            "title": "Sid"
          },
          "token": {
            "description": "Twilio Auth Token",
            "type": "string",
            "title": "Token"
          }
        },
        "required": [
          "phone_number",
          "label",
          "sid",
          "token"
        ],
        "title": "CreateTwilioPhoneNumberRequest"
      },
      "CustomLLM": {
        "type": "object",
        "properties": {
          "url": {
            "description": "The URL of the Chat Completions compatible endpoint",
            "type": "string",
            "title": "Url"
          },
          "model_id": {
            "description": "The model ID to be used if URL serves multiple models",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "api_key": {
            "description": "The API key for authentication",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "url"
        ],
        "title": "CustomLLM"
      },
      "DashboardCallSuccessChartModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "default": "call_success",
            "const": "call_success",
            "title": "Type"
          }
        },
        "required": [
          "name"
        ],
        "title": "DashboardCallSuccessChartModel"
      },
      "DashboardCriteriaChartModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "default": "criteria",
            "const": "criteria",
            "title": "Type"
          },
          "criteria_id": {
            "type": "string",
            "title": "Criteria Id"
          }
        },
        "required": [
          "name",
          "criteria_id"
        ],
        "title": "DashboardCriteriaChartModel"
      },
      "DataCollectionResultCommonModel": {
        "type": "object",
        "properties": {
          "data_collection_id": {
            "type": "string",
            "title": "Data Collection Id"
          },
          "value": {
            "title": "Value"
          },
          "json_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "type": "null"
              }
            ]
          },
          "rationale": {
            "type": "string",
            "title": "Rationale"
          }
        },
        "required": [
          "data_collection_id",
          "rationale"
        ],
        "title": "DataCollectionResultCommonModel"
      },
      "DeleteChapterResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the studio chapter deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteChapterResponseModel"
      },
      "DeleteDubbingResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the dubbing project. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteDubbingResponseModel"
      },
      "DeleteHistoryItemResponse": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with http code 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteHistoryItemResponse"
      },
      "DeleteProjectResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the studio project deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteProjectResponseModel"
      },
      "DeleteSampleResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the sample deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteSampleResponseModel"
      },
      "DeleteVoiceResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the voice deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteVoiceResponseModel"
      },
      "DeleteVoiceSampleResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the voice sample deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteVoiceSampleResponseModel"
      },
      "DeleteWorkspaceGroupMemberResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace group member deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceGroupMemberResponseModel"
      },
      "DeleteWorkspaceInviteResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace invite deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceInviteResponseModel"
      },
      "DeleteWorkspaceMemberResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace member deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceMemberResponseModel"
      },
      "DependentAvailableAgentIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "default": "available",
            "const": "available",
            "title": "Type"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "required": [
          "id",
          "name",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableAgentIdentifier"
      },
      "DependentAvailableAgentToolIdentifier": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          },
          "used_by": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Used By"
          },
          "type": {
            "type": "string",
            "default": "available",
            "const": "available",
            "title": "Type"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "required": [
          "agent_id",
          "agent_name",
          "used_by",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableAgentToolIdentifier"
      },
      "DependentAvailableToolIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "default": "available",
            "const": "available",
            "title": "Type"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "required": [
          "id",
          "name",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableToolIdentifier"
      },
      "DependentPhoneNumberIdentifier": {
        "type": "object",
        "properties": {
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "provider": {
            "$ref": "#/components/schemas/TelephonyProvider"
          }
        },
        "required": [
          "phone_number_id",
          "phone_number",
          "label",
          "provider"
        ],
        "title": "DependentPhoneNumberIdentifier"
      },
      "DependentUnknownAgentIdentifier": {
        "description": "A model that represents an agent dependent on a knowledge base/tools\nto which the user has no direct access.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "unknown",
            "const": "unknown",
            "title": "Type"
          }
        },
        "title": "DependentUnknownAgentIdentifier"
      },
      "DependentUnknownAgentToolIdentifier": {
        "description": "A model that represents an tool dependent on a knowledge base/tools\nto which the user has no direct access.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "unknown",
            "const": "unknown",
            "title": "Type"
          }
        },
        "title": "DependentUnknownAgentToolIdentifier"
      },
      "DependentUnknownToolIdentifier": {
        "description": "A model that represents an tool dependent on a knowledge base/tools\nto which the user has no direct access.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "unknown",
            "const": "unknown",
            "title": "Type"
          }
        },
        "title": "DependentUnknownToolIdentifier"
      },
      "DoDubbingResponseModel": {
        "type": "object",
        "properties": {
          "dubbing_id": {
            "description": "The ID of the dubbing project.",
            "type": "string",
            "title": "Dubbing Id"
          },
          "expected_duration_sec": {
            "description": "The expected duration of the dubbing project in seconds.",
            "type": "number",
            "title": "Expected Duration Sec"
          }
        },
        "example": {
          "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
          "expected_duration_sec": 127.5
        },
        "required": [
          "dubbing_id",
          "expected_duration_sec"
        ],
        "title": "DoDubbingResponseModel"
      },
      "DocumentUsageModeEnum": {
        "type": "string",
        "enum": [
          "prompt",
          "auto"
        ],
        "title": "DocumentUsageModeEnum"
      },
      "DocxExportOptions": {
        "type": "object",
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "default": true,
            "title": "Include Speakers"
          },
          "include_timestamps": {
            "type": "boolean",
            "default": true,
            "title": "Include Timestamps"
          },
          "format": {
            "type": "string",
            "const": "docx",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "required": [
          "format"
        ],
        "title": "DocxExportOptions"
      },
      "DubbedSegment": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "media_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "start_time",
          "end_time",
          "text",
          "media_ref"
        ],
        "title": "DubbedSegment"
      },
      "DubbingMediaMetadata": {
        "type": "object",
        "properties": {
          "content_type": {
            "description": "The content type of the media.",
            "type": "string",
            "title": "Content Type"
          },
          "duration": {
            "description": "The duration of the media in seconds.",
            "type": "number",
            "title": "Duration"
          }
        },
        "required": [
          "content_type",
          "duration"
        ],
        "title": "DubbingMediaMetadata"
      },
      "DubbingMediaReference": {
        "type": "object",
        "properties": {
          "src": {
            "type": "string",
            "title": "Src"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name"
          },
          "random_path_slug": {
            "type": "string",
            "title": "Random Path Slug"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          },
          "is_audio": {
            "type": "boolean",
            "title": "Is Audio"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "required": [
          "src",
          "content_type",
          "bucket_name",
          "random_path_slug",
          "duration_secs",
          "is_audio",
          "url"
        ],
        "title": "DubbingMediaReference"
      },
      "DubbingMetadataResponse": {
        "type": "object",
        "properties": {
          "dubbing_id": {
            "description": "The ID of the dubbing project.",
            "type": "string",
            "title": "Dubbing Id"
          },
          "name": {
            "description": "The name of the dubbing project.",
            "type": "string",
            "title": "Name"
          },
          "status": {
            "description": "The status of the dubbing project. Either 'dubbed', 'dubbing' or 'failed'.",
            "type": "string",
            "title": "Status"
          },
          "target_languages": {
            "description": "The target languages of the dubbing project.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Target Languages"
          },
          "media_metadata": {
            "description": "The media metadata of the dubbing project.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaMetadata"
              },
              {
                "type": "null"
              }
            ]
          },
          "error": {
            "description": "Optional error message if the dubbing project failed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "example": {
          "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
          "media_metadata": {
            "content_type": "video/mp4",
            "duration": 127.5
          },
          "name": "My Dubbing Project",
          "status": "dubbed",
          "target_languages": [
            "es",
            "fr",
            "de"
          ]
        },
        "required": [
          "dubbing_id",
          "name",
          "status",
          "target_languages"
        ],
        "title": "DubbingMetadataResponse"
      },
      "DubbingRenderResponseModel": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "render_id": {
            "type": "string",
            "title": "Render Id"
          }
        },
        "required": [
          "version",
          "render_id"
        ],
        "title": "DubbingRenderResponseModel"
      },
      "DubbingResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "source_language": {
            "type": "string",
            "title": "Source Language"
          },
          "target_languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Target Languages"
          },
          "input": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "background": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "foreground": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "speaker_tracks": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SpeakerTrack"
            },
            "title": "Speaker Tracks"
          },
          "speaker_segments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SpeakerSegment"
            },
            "title": "Speaker Segments"
          },
          "renders": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Render"
            },
            "title": "Renders"
          }
        },
        "required": [
          "id",
          "version",
          "source_language",
          "target_languages",
          "input",
          "background",
          "foreground",
          "speaker_tracks",
          "speaker_segments",
          "renders"
        ],
        "title": "DubbingResource"
      },
      "DynamicVariablesConfig": {
        "type": "object",
        "properties": {
          "dynamic_variable_placeholders": {
            "description": "A dictionary of dynamic variable placeholders and their values",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "title": "Dynamic Variable Placeholders"
          }
        },
        "example": {
          "dynamic_variable_placeholders": {
            "user_name": "John Doe"
          }
        },
        "title": "DynamicVariablesConfig"
      },
      "EditChapterResponseModel": {
        "type": "object",
        "properties": {
          "chapter": {
            "$ref": "#/components/schemas/ChapterWithContentResponseModel"
          }
        },
        "required": [
          "chapter"
        ],
        "title": "EditChapterResponseModel"
      },
      "EditProjectResponseModel": {
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "required": [
          "project"
        ],
        "title": "EditProjectResponseModel"
      },
      "EditVoiceResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the voice edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "EditVoiceResponseModel"
      },
      "EditVoiceSettingsResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the voice settings edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "EditVoiceSettingsResponseModel"
      },
      "EmbedVariant": {
        "type": "string",
        "enum": [
          "compact",
          "full",
          "expandable"
        ],
        "title": "EmbedVariant"
      },
      "EmbeddingModelEnum": {
        "type": "string",
        "enum": [
          "e5_mistral_7b_instruct",
          "multilingual_e5_large_instruct"
        ],
        "title": "EmbeddingModelEnum"
      },
      "EndCallToolConfig": {
        "type": "object",
        "properties": {
          "system_tool_type": {
            "type": "string",
            "default": "end_call",
            "const": "end_call",
            "title": "System Tool Type"
          }
        },
        "title": "EndCallToolConfig"
      },
      "EvaluationSettings": {
        "description": "Settings to evaluate an agent's performance.\nAgents are evaluated against a set of criteria, with success being defined as meeting some combination of those criteria.",
        "type": "object",
        "properties": {
          "criteria": {
            "description": "Individual criteria that the agent should be evaluated against",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromptEvaluationCriteria"
            },
            "title": "Criteria"
          }
        },
        "title": "EvaluationSettings"
      },
      "EvaluationSuccessResult": {
        "type": "string",
        "enum": [
          "success",
          "failure",
          "unknown"
        ],
        "title": "EvaluationSuccessResult"
      },
      "ExportOptions": {
        "discriminator": {
          "propertyName": "format",
          "mapping": {
            "docx": "#/components/schemas/DocxExportOptions",
            "html": "#/components/schemas/HtmlExportOptions",
            "pdf": "#/components/schemas/PdfExportOptions",
            "segmented_json": "#/components/schemas/SegmentedJsonExportOptions",
            "srt": "#/components/schemas/SrtExportOptions",
            "txt": "#/components/schemas/TxtExportOptions"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/SegmentedJsonExportOptions"
          },
          {
            "$ref": "#/components/schemas/DocxExportOptions"
          },
          {
            "$ref": "#/components/schemas/PdfExportOptions"
          },
          {
            "$ref": "#/components/schemas/TxtExportOptions"
          },
          {
            "$ref": "#/components/schemas/HtmlExportOptions"
          },
          {
            "$ref": "#/components/schemas/SrtExportOptions"
          }
        ],
        "title": "ExportOptions"
      },
      "ExtendedSubscriptionResponseModel": {
        "type": "object",
        "properties": {
          "tier": {
            "description": "The tier of the user's subscription.",
            "type": "string",
            "title": "Tier"
          },
          "character_count": {
            "description": "The number of characters used by the user.",
            "type": "integer",
            "title": "Character Count"
          },
          "character_limit": {
            "description": "The maximum number of characters allowed in the current billing period.",
            "type": "integer",
            "title": "Character Limit"
          },
          "max_character_limit_extension": {
            "description": "Maximum number of characters that the character limit can be exceeded by. Managed by the workspace admin.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Character Limit Extension"
          },
          "can_extend_character_limit": {
            "description": "Whether the user can extend their character limit.",
            "type": "boolean",
            "title": "Can Extend Character Limit"
          },
          "allowed_to_extend_character_limit": {
            "description": "Whether the user is allowed to extend their character limit.",
            "type": "boolean",
            "title": "Allowed To Extend Character Limit"
          },
          "next_character_count_reset_unix": {
            "description": "The Unix timestamp of the next character count reset.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Character Count Reset Unix"
          },
          "voice_slots_used": {
            "description": "The number of voice slots used by the user.",
            "type": "integer",
            "title": "Voice Slots Used"
          },
          "professional_voice_slots_used": {
            "description": "The number of professional voice slots used by the workspace/user if single seat.",
            "type": "integer",
            "title": "Professional Voice Slots Used"
          },
          "voice_limit": {
            "description": "The maximum number of voice slots allowed for the user.",
            "type": "integer",
            "title": "Voice Limit"
          },
          "max_voice_add_edits": {
            "description": "The maximum number of voice add/edits allowed for the user.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Voice Add Edits"
          },
          "voice_add_edit_counter": {
            "description": "The number of voice add/edits used by the user.",
            "type": "integer",
            "title": "Voice Add Edit Counter"
          },
          "professional_voice_limit": {
            "description": "The maximum number of professional voices allowed for the user.",
            "type": "integer",
            "title": "Professional Voice Limit"
          },
          "can_extend_voice_limit": {
            "description": "Whether the user can extend their voice limit.",
            "type": "boolean",
            "title": "Can Extend Voice Limit"
          },
          "can_use_instant_voice_cloning": {
            "description": "Whether the user can use instant voice cloning.",
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning"
          },
          "can_use_professional_voice_cloning": {
            "description": "Whether the user can use professional voice cloning.",
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning"
          },
          "currency": {
            "description": "The currency of the user's subscription.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "usd",
                  "eur"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "status": {
            "description": "The status of the user's subscription.",
            "type": "string",
            "enum": [
              "trialing",
              "active",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "canceled",
              "unpaid",
              "free"
            ],
            "title": "Status"
          },
          "billing_period": {
            "description": "The billing period of the user's subscription.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Period"
          },
          "character_refresh_period": {
            "description": "The character refresh period of the user's subscription.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Refresh Period"
          },
          "next_invoice": {
            "description": "The next invoice for the user.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_open_invoices": {
            "description": "Whether the user has open invoices.",
            "type": "boolean",
            "title": "Has Open Invoices"
          }
        },
        "example": {
          "has_open_invoices": false,
          "next_invoice": {
            "amount_due_cents": 1000,
            "next_payment_attempt_unix": 1738356858
          }
        },
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "max_character_limit_extension",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "voice_slots_used",
          "professional_voice_slots_used",
          "voice_limit",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "status",
          "has_open_invoices"
        ],
        "title": "ExtendedSubscriptionResponseModel"
      },
      "FeedbackResponseModel": {
        "type": "object",
        "properties": {
          "thumbs_up": {
            "description": "Whether the user liked the generated item.",
            "type": "boolean",
            "title": "Thumbs Up"
          },
          "feedback": {
            "description": "The feedback text provided by the user.",
            "type": "string",
            "title": "Feedback"
          },
          "emotions": {
            "description": "Whether the user provided emotions.",
            "type": "boolean",
            "title": "Emotions"
          },
          "inaccurate_clone": {
            "description": "Whether the user thinks the clone is inaccurate.",
            "type": "boolean",
            "title": "Inaccurate Clone"
          },
          "glitches": {
            "description": "Whether the user thinks there are glitches in the audio.",
            "type": "boolean",
            "title": "Glitches"
          },
          "audio_quality": {
            "description": "Whether the user thinks the audio quality is good.",
            "type": "boolean",
            "title": "Audio Quality"
          },
          "other": {
            "description": "Whether the user provided other feedback.",
            "type": "boolean",
            "title": "Other"
          },
          "review_status": {
            "description": "The review status of the item. Defaults to 'not_reviewed'.",
            "type": "string",
            "default": "not_reviewed",
            "title": "Review Status"
          }
        },
        "example": {
          "audio_quality": true,
          "emotions": true,
          "feedback": "This is an example of test feedback.",
          "glitches": true,
          "inaccurate_clone": false,
          "other": false,
          "review_status": "not_reviewed",
          "thumbs_up": true
        },
        "required": [
          "thumbs_up",
          "feedback",
          "emotions",
          "inaccurate_clone",
          "glitches",
          "audio_quality",
          "other"
        ],
        "title": "FeedbackResponseModel"
      },
      "FineTuningResponseModel": {
        "type": "object",
        "properties": {
          "is_allowed_to_fine_tune": {
            "description": "Whether the user is allowed to fine-tune the voice.",
            "type": "boolean",
            "title": "Is Allowed To Fine Tune"
          },
          "state": {
            "description": "The state of the fine-tuning process for each model.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "not_started",
                "queued",
                "fine_tuning",
                "fine_tuned",
                "failed",
                "delayed"
              ]
            },
            "title": "State"
          },
          "verification_failures": {
            "description": "List of verification failures in the fine-tuning process.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Verification Failures"
          },
          "verification_attempts_count": {
            "description": "The number of verification attempts in the fine-tuning process.",
            "type": "integer",
            "title": "Verification Attempts Count"
          },
          "manual_verification_requested": {
            "description": "Whether a manual verification was requested for the fine-tuning process.",
            "type": "boolean",
            "title": "Manual Verification Requested"
          },
          "language": {
            "description": "The language of the fine-tuning process.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "progress": {
            "description": "The progress of the fine-tuning process.",
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          },
          "message": {
            "description": "The message of the fine-tuning process.",
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "dataset_duration_seconds": {
            "description": "The duration of the dataset in seconds.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Duration Seconds"
          },
          "verification_attempts": {
            "description": "The number of verification attempts.",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerificationAttemptResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Attempts"
          },
          "slice_ids": {
            "description": "List of slice IDs.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slice Ids"
          },
          "manual_verification": {
            "description": "The manual verification of the fine-tuning process.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ManualVerificationResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "max_verification_attempts": {
            "description": "The maximum number of verification attempts.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Verification Attempts"
          },
          "next_max_verification_attempts_reset_unix_ms": {
            "description": "The next maximum verification attempts reset time in Unix milliseconds.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Max Verification Attempts Reset Unix Ms"
          }
        },
        "example": {
          "is_allowed_to_fine_tune": true,
          "manual_verification_requested": false,
          "state": {
            "eleven_multilingual_v2": "fine_tuned"
          },
          "verification_attempts_count": 2,
          "verification_failures": []
        },
        "required": [
          "is_allowed_to_fine_tune",
          "state",
          "verification_failures",
          "verification_attempts_count",
          "manual_verification_requested"
        ],
        "title": "FineTuningResponseModel"
      },
      "ForcedAlignmentCharacterResponseModel": {
        "description": "Model representing a single character with its timing information from the aligner.",
        "type": "object",
        "properties": {
          "text": {
            "description": "The character that was transcribed.",
            "type": "string",
            "title": "Text"
          },
          "start": {
            "description": "The start time of the character in seconds.",
            "type": "number",
            "title": "Start"
          },
          "end": {
            "description": "The end time of the character in seconds.",
            "type": "number",
            "title": "End"
          }
        },
        "example": {
          "end": 0.02,
          "start": 0,
          "text": "H"
        },
        "required": [
          "text",
          "start",
          "end"
        ],
        "title": "ForcedAlignmentCharacterResponseModel"
      },
      "ForcedAlignmentResponseModel": {
        "description": "Model representing the response from the aligner service.",
        "type": "object",
        "properties": {
          "characters": {
            "description": "List of characters with their timing information.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForcedAlignmentCharacterResponseModel"
            },
            "title": "Characters"
          },
          "words": {
            "description": "List of words with their timing information.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForcedAlignmentWordResponseModel"
            },
            "title": "Words"
          }
        },
        "required": [
          "characters",
          "words"
        ],
        "title": "ForcedAlignmentResponseModel"
      },
      "ForcedAlignmentWordResponseModel": {
        "description": "Model representing a single word with its timing information from the aligner.",
        "type": "object",
        "properties": {
          "text": {
            "description": "The word that was transcribed.",
            "type": "string",
            "title": "Text"
          },
          "start": {
            "description": "The start time of the word in seconds.",
            "type": "number",
            "title": "Start"
          },
          "end": {
            "description": "The end time of the word in seconds.",
            "type": "number",
            "title": "End"
          }
        },
        "example": {
          "end": 1.02,
          "start": 0,
          "text": "Hello"
        },
        "required": [
          "text",
          "start",
          "end"
        ],
        "title": "ForcedAlignmentWordResponseModel"
      },
      "GetAgentEmbedResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "widget_config": {
            "$ref": "#/components/schemas/WidgetConfigResponseModel"
          }
        },
        "required": [
          "agent_id",
          "widget_config"
        ],
        "title": "GetAgentEmbedResponseModel"
      },
      "GetAgentLinkResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "description": "The ID of the agent",
            "type": "string",
            "title": "Agent Id"
          },
          "token": {
            "description": "The token data for the agent",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationTokenDBModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB"
        },
        "required": [
          "agent_id"
        ],
        "title": "GetAgentLinkResponseModel"
      },
      "GetAgentResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "description": "The ID of the agent",
            "type": "string",
            "title": "Agent Id"
          },
          "name": {
            "description": "The name of the agent",
            "type": "string",
            "title": "Name"
          },
          "conversation_config": {
            "description": "The conversation configuration of the agent",
            "$ref": "#/components/schemas/ConversationalConfigAPIModel-Output"
          },
          "metadata": {
            "description": "The metadata of the agent",
            "$ref": "#/components/schemas/AgentMetadataResponseModel"
          },
          "platform_settings": {
            "description": "The platform settings of the agent",
            "$ref": "#/components/schemas/AgentPlatformSettingsResponseModel"
          },
          "phone_numbers": {
            "description": "The phone numbers of the agent",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPhoneNumberResponseModel"
            },
            "title": "Phone Numbers"
          },
          "access_info": {
            "description": "The access information of the agent for the user",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceAccessInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB",
          "name": "My Agent"
        },
        "required": [
          "agent_id",
          "name",
          "conversation_config",
          "metadata"
        ],
        "title": "GetAgentResponseModel"
      },
      "GetAgentsPageResponseModel": {
        "type": "object",
        "properties": {
          "agents": {
            "description": "A list of agents and their metadata",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentSummaryResponseModel"
            },
            "title": "Agents"
          },
          "next_cursor": {
            "description": "The next cursor to paginate through the agents",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "description": "Whether there are more agents to paginate through",
            "type": "boolean",
            "title": "Has More"
          }
        },
        "example": {
          "has_more": false,
          "next_cursor": "123"
        },
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetAgentsPageResponseModel"
      },
      "GetAudioNativeProjectSettingsResponseModel": {
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Whether the project is enabled.",
            "type": "boolean",
            "title": "Enabled"
          },
          "snapshot_id": {
            "description": "The ID of the latest snapshot of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Snapshot Id"
          },
          "settings": {
            "description": "The settings of the project.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioNativeProjectSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "example": {
          "enabled": true,
          "settings": {
            "audio_path": "audio/my_project.mp3",
            "audio_url": "https://example.com/audio/my_project.mp3",
            "author": "John Doe",
            "background_color": "#FFFFFF",
            "image": "https://example.com/image.jpg",
            "sessionization": 1,
            "small": false,
            "status": "ready",
            "text_color": "#000000",
            "title": "My Project"
          },
          "snapshot_id": "JBFqnCBsd6RMkjVDRZzb"
        },
        "required": [
          "enabled"
        ],
        "title": "GetAudioNativeProjectSettingsResponseModel"
      },
      "GetChaptersResponseModel": {
        "type": "object",
        "properties": {
          "chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterResponseModel"
            },
            "title": "Chapters"
          }
        },
        "required": [
          "chapters"
        ],
        "title": "GetChaptersResponseModel"
      },
      "GetConvAIDashboardSettingsResponseModel": {
        "type": "object",
        "properties": {
          "charts": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCallSuccessChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardCriteriaChartModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "call_success": "#/components/schemas/DashboardCallSuccessChartModel",
                  "criteria": "#/components/schemas/DashboardCriteriaChartModel"
                }
              }
            },
            "maxItems": 4,
            "title": "Charts"
          }
        },
        "title": "GetConvAIDashboardSettingsResponseModel"
      },
      "GetConvAISettingsResponseModel": {
        "type": "object",
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "title": "GetConvAISettingsResponseModel"
      },
      "GetConversationResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "status": {
            "type": "string",
            "enum": [
              "in-progress",
              "processing",
              "done",
              "failed"
            ],
            "title": "Status"
          },
          "transcript": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel"
            },
            "title": "Transcript"
          },
          "metadata": {
            "$ref": "#/components/schemas/ConversationHistoryMetadataCommonModel"
          },
          "analysis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryAnalysisCommonModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "conversation_initiation_client_data": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Output"
          },
          "has_audio": {
            "type": "boolean",
            "title": "Has Audio"
          },
          "has_user_audio": {
            "type": "boolean",
            "title": "Has User Audio"
          },
          "has_response_audio": {
            "type": "boolean",
            "title": "Has Response Audio"
          }
        },
        "required": [
          "agent_id",
          "conversation_id",
          "status",
          "transcript",
          "metadata",
          "has_audio",
          "has_user_audio",
          "has_response_audio"
        ],
        "title": "GetConversationResponseModel"
      },
      "GetConversationsPageResponseModel": {
        "type": "object",
        "properties": {
          "conversations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationSummaryResponseModel"
            },
            "title": "Conversations"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "required": [
          "conversations",
          "has_more"
        ],
        "title": "GetConversationsPageResponseModel"
      },
      "GetKnowledgeBaseDependentAgentsResponseModel": {
        "type": "object",
        "properties": {
          "agents": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "title": "Agents"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetKnowledgeBaseDependentAgentsResponseModel"
      },
      "GetKnowledgeBaseFileResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "type": {
            "type": "string",
            "const": "file",
            "title": "Type"
          }
        },
        "required": [
          "id",
          "name",
          "metadata",
          "prompt_injectable",
          "access_info",
          "extracted_inner_html",
          "type"
        ],
        "title": "GetKnowledgeBaseFileResponseModel"
      },
      "GetKnowledgeBaseListResponseModel": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GetKnowledgeBaseSummaryURLResponseModel"
                },
                {
                  "$ref": "#/components/schemas/GetKnowledgeBaseSummaryFileResponseModel"
                },
                {
                  "$ref": "#/components/schemas/GetKnowledgeBaseSummaryTextResponseModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "file": "#/components/schemas/GetKnowledgeBaseSummaryFileResponseModel",
                  "text": "#/components/schemas/GetKnowledgeBaseSummaryTextResponseModel",
                  "url": "#/components/schemas/GetKnowledgeBaseSummaryURLResponseModel"
                }
              }
            },
            "title": "Documents"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "required": [
          "documents",
          "has_more"
        ],
        "title": "GetKnowledgeBaseListResponseModel"
      },
      "GetKnowledgeBaseSummaryFileResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "dependent_agents": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "title": "Dependent Agents"
          },
          "type": {
            "type": "string",
            "const": "file",
            "title": "Type"
          }
        },
        "required": [
          "id",
          "name",
          "metadata",
          "prompt_injectable",
          "access_info",
          "dependent_agents",
          "type"
        ],
        "title": "GetKnowledgeBaseSummaryFileResponseModel"
      },
      "GetKnowledgeBaseSummaryTextResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "dependent_agents": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "title": "Dependent Agents"
          },
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          }
        },
        "required": [
          "id",
          "name",
          "metadata",
          "prompt_injectable",
          "access_info",
          "dependent_agents",
          "type"
        ],
        "title": "GetKnowledgeBaseSummaryTextResponseModel"
      },
      "GetKnowledgeBaseSummaryURLResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "dependent_agents": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "title": "Dependent Agents"
          },
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "required": [
          "id",
          "name",
          "metadata",
          "prompt_injectable",
          "access_info",
          "dependent_agents",
          "type",
          "url"
        ],
        "title": "GetKnowledgeBaseSummaryURLResponseModel"
      },
      "GetKnowledgeBaseTextResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          }
        },
        "required": [
          "id",
          "name",
          "metadata",
          "prompt_injectable",
          "access_info",
          "extracted_inner_html",
          "type"
        ],
        "title": "GetKnowledgeBaseTextResponseModel"
      },
      "GetKnowledgeBaseURLResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "required": [
          "id",
          "name",
          "metadata",
          "prompt_injectable",
          "access_info",
          "extracted_inner_html",
          "type",
          "url"
        ],
        "title": "GetKnowledgeBaseURLResponseModel"
      },
      "GetLibraryVoicesResponseModel": {
        "type": "object",
        "properties": {
          "voices": {
            "description": "The list of shared voices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryVoiceResponseModel"
            },
            "title": "Voices"
          },
          "has_more": {
            "description": "Whether there are more shared voices in subsequent pages.",
            "type": "boolean",
            "title": "Has More"
          },
          "last_sort_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sort Id"
          }
        },
        "example": {
          "has_more": false,
          "voices": {
            "accent": "american",
            "age": "young",
            "category": "professional",
            "cloned_by_count": 11,
            "date_unix": 1714423232,
            "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
            "descriptive": "calm",
            "featured": false,
            "free_users_allowed": true,
            "gender": "Female",
            "language": "en",
            "live_moderation_enabled": false,
            "name": "Alita",
            "play_api_usage_character_count_1y": 12852,
            "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
            "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
            "rate": 1,
            "usage_character_count_1y": 12852,
            "usage_character_count_7d": 12852,
            "use_case": "characters_animation",
            "voice_id": "sB1b5zUrxQVAFl2PhZFp"
          }
        },
        "required": [
          "voices",
          "has_more"
        ],
        "title": "GetLibraryVoicesResponseModel"
      },
      "GetPhoneNumberResponseModel": {
        "type": "object",
        "properties": {
          "phone_number": {
            "description": "Phone number",
            "type": "string",
            "title": "Phone Number"
          },
          "provider": {
            "description": "Phone provider",
            "$ref": "#/components/schemas/TelephonyProvider"
          },
          "label": {
            "description": "Label for the phone number",
            "type": "string",
            "title": "Label"
          },
          "phone_number_id": {
            "description": "The ID of the phone number",
            "type": "string",
            "title": "Phone Number Id"
          },
          "assigned_agent": {
            "description": "The agent that is assigned to the phone number",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberAgentInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "example": {
          "phone_number_id": "X3Pbu5gP6NNKBscdCdwB"
        },
        "required": [
          "phone_number",
          "provider",
          "label",
          "phone_number_id"
        ],
        "title": "GetPhoneNumberResponseModel"
      },
      "GetProjectsResponseModel": {
        "type": "object",
        "properties": {
          "projects": {
            "description": "A list of projects with their metadata.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResponseModel"
            },
            "title": "Projects"
          }
        },
        "example": {
          "projects": [
            {
              "access_level": "viewer",
              "author": "John Doe",
              "can_be_downloaded": true,
              "content_type": "Novel",
              "cover_image_url": "https://example.com/cover.jpg",
              "create_date_unix": 1714204800,
              "creation_meta": {
                "creation_progress": 0.5,
                "status": "pending",
                "type": "blank"
              },
              "default_model_id": "eleven_multilingual_v2",
              "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
              "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
              "description": "This is a description of my project.",
              "fiction": "fiction",
              "genres": [
                "Novel",
                "Short Story"
              ],
              "isbn_number": "978-90-274-3964-2",
              "language": "en",
              "last_conversion_date_unix": 1714204800,
              "mature_content": false,
              "name": "My Project",
              "original_publication_date": "2025-01-01",
              "project_id": "aw1NgEzBg83R7vgmiJt6",
              "quality_check_on": false,
              "quality_check_on_when_bulk_convert": false,
              "state": "default",
              "target_audience": "Young Adults",
              "title": "My Project",
              "volume_normalization": true
            }
          ]
        },
        "required": [
          "projects"
        ],
        "title": "GetProjectsResponseModel"
      },
      "GetPronunciationDictionariesMetadataResponseModel": {
        "type": "object",
        "properties": {
          "pronunciation_dictionaries": {
            "description": "A list of pronunciation dictionaries and their metadata.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
            },
            "title": "Pronunciation Dictionaries"
          },
          "next_cursor": {
            "description": "The next cursor to use for pagination.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "description": "Whether there are more pronunciation dictionaries to fetch.",
            "type": "boolean",
            "title": "Has More"
          }
        },
        "example": {
          "has_more": false,
          "next_cursor": "5xM3yVvZQKV0EfqQpLr2"
        },
        "required": [
          "pronunciation_dictionaries",
          "has_more"
        ],
        "title": "GetPronunciationDictionariesMetadataResponseModel"
      },
      "GetPronunciationDictionaryMetadataResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the pronunciation dictionary.",
            "type": "string",
            "title": "Id"
          },
          "latest_version_id": {
            "description": "The ID of the latest version of the pronunciation dictionary.",
            "type": "string",
            "title": "Latest Version Id"
          },
          "latest_version_rules_num": {
            "description": "The number of rules in the latest version of the pronunciation dictionary.",
            "type": "integer",
            "title": "Latest Version Rules Num"
          },
          "name": {
            "description": "The name of the pronunciation dictionary.",
            "type": "string",
            "title": "Name"
          },
          "permission_on_resource": {
            "description": "The permission on the resource of the pronunciation dictionary.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource"
          },
          "created_by": {
            "description": "The user ID of the creator of the pronunciation dictionary.",
            "type": "string",
            "title": "Created By"
          },
          "creation_time_unix": {
            "description": "The creation time of the pronunciation dictionary in Unix timestamp.",
            "type": "integer",
            "title": "Creation Time Unix"
          },
          "archived_time_unix": {
            "description": "The archive time of the pronunciation dictionary in Unix timestamp.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived Time Unix"
          },
          "description": {
            "description": "The description of the pronunciation dictionary.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "example": {
          "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
          "creation_time_unix": 1714156800,
          "description": "This is a test dictionary",
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "latest_version_id": "5xM3yVvZQKV0EfqQpLr2",
          "latest_version_rules_num": 2,
          "name": "My Dictionary"
        },
        "required": [
          "id",
          "latest_version_id",
          "latest_version_rules_num",
          "name",
          "permission_on_resource",
          "created_by",
          "creation_time_unix",
          "archived_time_unix"
        ],
        "title": "GetPronunciationDictionaryMetadataResponseModel"
      },
      "GetSpeechHistoryResponseModel": {
        "type": "object",
        "properties": {
          "history": {
            "description": "A list of speech history items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
            },
            "title": "History"
          },
          "last_history_item_id": {
            "description": "The ID of the last history item.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last History Item Id"
          },
          "has_more": {
            "description": "Whether there are more history items to fetch.",
            "type": "boolean",
            "title": "Has More"
          }
        },
        "example": {
          "has_more": true,
          "history": [
            {
              "character_count_change_from": 17189,
              "character_count_change_to": 17231,
              "content_type": "audio/mpeg",
              "date_unix": 1714650306,
              "history_item_id": "ja9xsmfGhxYcymxGcOGB",
              "model_id": "eleven_multilingual_v2",
              "request_id": "BF0BZg4IwLGBlaVjv9Im",
              "settings": {
                "similarity_boost": 0.5,
                "stability": 0.71,
                "style": 0,
                "use_speaker_boost": true
              },
              "source": "TTS",
              "state": "created",
              "text": "Hello, world!",
              "voice_category": "premade",
              "voice_id": "21m00Tcm4TlvDq8ikWAM",
              "voice_name": "Rachel"
            }
          ],
          "last_history_item_id": "ja9xsmfGhxYcymxGcOGB"
        },
        "required": [
          "history",
          "has_more"
        ],
        "title": "GetSpeechHistoryResponseModel"
      },
      "GetVoicesResponseModel": {
        "type": "object",
        "properties": {
          "voices": {
            "description": "A list of available voices.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceResponseModel"
            },
            "title": "Voices"
          }
        },
        "example": {
          "voices": {
            "available_for_tiers": [
              "creator",
              "enterprise"
            ],
            "category": "professional",
            "description": "A warm, expressive voice with a touch of humor.",
            "fine_tuning": {
              "is_allowed_to_fine_tune": true,
              "manual_verification_requested": false,
              "state": {
                "eleven_multilingual_v2": "fine_tuned"
              },
              "verification_attempts_count": 2,
              "verification_failures": []
            },
            "high_quality_base_model_ids": [
              "eleven_v2_flash",
              "eleven_flash_v2",
              "eleven_turbo_v2_5",
              "eleven_multilingual_v2",
              "eleven_v2_5_flash",
              "eleven_flash_v2_5",
              "eleven_turbo_v2"
            ],
            "is_legacy": false,
            "is_mixed": false,
            "is_owner": false,
            "labels": {
              "accent": "American",
              "age": "middle-aged",
              "description": "expressive",
              "gender": "female",
              "use_case": "social media"
            },
            "name": "Rachel",
            "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
            "settings": {
              "similarity_boost": 1,
              "speed": 1,
              "stability": 1,
              "style": 0,
              "use_speaker_boost": true
            },
            "sharing": {
              "category": "professional",
              "cloned_by_count": 50,
              "date_unix": 1714204800,
              "description": "A female voice with a soft and friendly tone.",
              "disable_at_unix": 1714204800,
              "enabled_in_library": true,
              "featured": true,
              "financial_rewards_enabled": true,
              "free_users_allowed": true,
              "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
              "labels": {
                "accent": "American",
                "gender": "female"
              },
              "liked_by_count": 100,
              "live_moderation_enabled": true,
              "moderation_check": {
                "captcha_checks": [
                  0.95,
                  0.98
                ],
                "captcha_ids": [
                  "captcha1",
                  "captcha2"
                ],
                "date_checked_unix": 1714204800,
                "description_check": true,
                "description_value": "A female voice with a soft and friendly tone.",
                "name_check": true,
                "name_value": "Rachel",
                "sample_checks": [
                  0.95,
                  0.98
                ],
                "sample_ids": [
                  "sample1",
                  "sample2"
                ]
              },
              "name": "Rachel",
              "notice_period": 30,
              "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
              "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
              "rate": 0.05,
              "reader_app_enabled": true,
              "reader_restricted_on": [
                {
                  "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
                  "resource_type": "read"
                }
              ],
              "review_status": "allowed",
              "status": "enabled",
              "voice_mixing_allowed": false,
              "whitelisted_emails": [
                "example@example.com"
              ]
            },
            "verified_languages": {
              "accent": "American",
              "language": "en",
              "model_id": "eleven_turbo_v2_5"
            },
            "voice_id": "21m00Tcm4TlvDq8ikWAM",
            "voice_verification": {
              "is_verified": true,
              "language": "en",
              "requires_verification": false,
              "verification_attempts": [
                {
                  "accepted": true,
                  "date_unix": 1714204800,
                  "levenshtein_distance": 2,
                  "recording": {
                    "mime_type": "audio/mpeg",
                    "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                    "size_bytes": 1000000,
                    "transcription": "Hello, how are you?",
                    "upload_date_unix": 1714204800
                  },
                  "similarity": 0.95,
                  "text": "Hello, how are you?"
                }
              ],
              "verification_attempts_count": 0,
              "verification_failures": []
            }
          }
        },
        "required": [
          "voices"
        ],
        "title": "GetVoicesResponseModel"
      },
      "GetVoicesV2ResponseModel": {
        "type": "object",
        "properties": {
          "voices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceResponseModel"
            },
            "title": "Voices"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "next_page_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page Token"
          }
        },
        "required": [
          "voices",
          "has_more",
          "total_count"
        ],
        "title": "GetVoicesV2ResponseModel"
      },
      "GetWorkspaceSecretsResponseModel": {
        "type": "object",
        "properties": {
          "secrets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConvAIWorkspaceStoredSecretConfig"
            },
            "title": "Secrets"
          }
        },
        "required": [
          "secrets"
        ],
        "title": "GetWorkspaceSecretsResponseModel"
      },
      "HTTPValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail"
          }
        },
        "title": "HTTPValidationError"
      },
      "HistoryAlignmentResponseModel": {
        "type": "object",
        "properties": {
          "characters": {
            "description": "The characters in the alignment.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "description": "The start times of the characters in seconds.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "description": "The end times of the characters in seconds.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character End Times Seconds"
          }
        },
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "HistoryAlignmentResponseModel"
      },
      "HistoryAlignmentsResponseModel": {
        "type": "object",
        "properties": {
          "alignment": {
            "description": "The alignment of the text.",
            "$ref": "#/components/schemas/HistoryAlignmentResponseModel"
          },
          "normalized_alignment": {
            "description": "The normalized alignment of the text.",
            "$ref": "#/components/schemas/HistoryAlignmentResponseModel"
          }
        },
        "required": [
          "alignment",
          "normalized_alignment"
        ],
        "title": "HistoryAlignmentsResponseModel"
      },
      "HtmlExportOptions": {
        "type": "object",
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "default": true,
            "title": "Include Speakers"
          },
          "include_timestamps": {
            "type": "boolean",
            "default": true,
            "title": "Include Timestamps"
          },
          "format": {
            "type": "string",
            "const": "html",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "required": [
          "format"
        ],
        "title": "HtmlExportOptions"
      },
      "ImageAvatar": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the avatar",
            "type": "string",
            "default": "image",
            "const": "image",
            "title": "Type"
          },
          "url": {
            "description": "The URL of the avatar",
            "type": "string",
            "default": "",
            "title": "Url"
          }
        },
        "title": "ImageAvatar"
      },
      "InvoiceResponseModel": {
        "type": "object",
        "properties": {
          "amount_due_cents": {
            "description": "The amount due in cents.",
            "type": "integer",
            "title": "Amount Due Cents"
          },
          "next_payment_attempt_unix": {
            "description": "The Unix timestamp of the next payment attempt.",
            "type": "integer",
            "title": "Next Payment Attempt Unix"
          }
        },
        "example": {
          "amount_due_cents": 1000,
          "next_payment_attempt_unix": 1738356858
        },
        "required": [
          "amount_due_cents",
          "next_payment_attempt_unix"
        ],
        "title": "InvoiceResponseModel"
      },
      "KnowledgeBaseDocumentChunkResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "content"
        ],
        "title": "KnowledgeBaseDocumentChunkResponseModel"
      },
      "KnowledgeBaseDocumentMetadataResponseModel": {
        "type": "object",
        "properties": {
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "last_updated_at_unix_secs": {
            "type": "integer",
            "title": "Last Updated At Unix Secs"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          }
        },
        "required": [
          "created_at_unix_secs",
          "last_updated_at_unix_secs",
          "size_bytes"
        ],
        "title": "KnowledgeBaseDocumentMetadataResponseModel"
      },
      "KnowledgeBaseDocumentType": {
        "type": "string",
        "enum": [
          "file",
          "url",
          "text"
        ],
        "title": "KnowledgeBaseDocumentType"
      },
      "KnowledgeBaseLocator": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the knowledge base",
            "$ref": "#/components/schemas/KnowledgeBaseDocumentType"
          },
          "name": {
            "description": "The name of the knowledge base",
            "type": "string",
            "title": "Name"
          },
          "id": {
            "description": "The ID of the knowledge base",
            "type": "string",
            "title": "Id"
          },
          "usage_mode": {
            "description": "The usage mode of the knowledge base",
            "default": "auto",
            "$ref": "#/components/schemas/DocumentUsageModeEnum"
          }
        },
        "example": {
          "id": "123",
          "name": "My Knowledge Base",
          "type": "file",
          "usage_mode": "auto"
        },
        "required": [
          "type",
          "name",
          "id"
        ],
        "title": "KnowledgeBaseLocator"
      },
      "LLM": {
        "type": "string",
        "enum": [
          "gpt-4o-mini",
          "gpt-4o",
          "gpt-4",
          "gpt-4-turbo",
          "gpt-4.1",
          "gpt-4.1-mini",
          "gpt-4.1-nano",
          "gpt-3.5-turbo",
          "gemini-1.5-pro",
          "gemini-1.5-flash",
          "gemini-2.0-flash-001",
          "gemini-2.0-flash-lite",
          "gemini-2.5-flash",
          "gemini-1.0-pro",
          "claude-3-7-sonnet",
          "claude-3-5-sonnet",
          "claude-3-5-sonnet-v1",
          "claude-3-haiku",
          "grok-beta",
          "custom-llm"
        ],
        "title": "LLM"
      },
      "LLMCategoryUsage": {
        "type": "object",
        "properties": {
          "irreversible_generation": {
            "$ref": "#/components/schemas/LLMUsage"
          },
          "initiated_generation": {
            "$ref": "#/components/schemas/LLMUsage"
          }
        },
        "title": "LLMCategoryUsage"
      },
      "LLMInputOutputTokensUsage": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          },
          "input_cache_read": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          },
          "input_cache_write": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          },
          "output_total": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          }
        },
        "title": "LLMInputOutputTokensUsage"
      },
      "LLMTokensCategoryUsage": {
        "type": "object",
        "properties": {
          "tokens": {
            "type": "integer",
            "default": 0,
            "title": "Tokens"
          },
          "price": {
            "type": "number",
            "default": 0,
            "title": "Price"
          }
        },
        "title": "LLMTokensCategoryUsage"
      },
      "LLMUsage": {
        "type": "object",
        "properties": {
          "model_usage": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LLMInputOutputTokensUsage"
            },
            "propertyNames": {
              "$ref": "#/components/schemas/LLM"
            },
            "title": "Model Usage"
          }
        },
        "title": "LLMUsage"
      },
      "LanguageAddedResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "LanguageAddedResponse"
      },
      "LanguageDetectionToolConfig": {
        "type": "object",
        "properties": {
          "system_tool_type": {
            "type": "string",
            "default": "language_detection",
            "const": "language_detection",
            "title": "System Tool Type"
          }
        },
        "title": "LanguageDetectionToolConfig"
      },
      "LanguagePreset-Input": {
        "type": "object",
        "properties": {
          "overrides": {
            "description": "The overrides for the language preset",
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Input"
          },
          "first_message_translation": {
            "description": "The translation of the first message",
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguagePresetTranslation"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "overrides"
        ],
        "title": "LanguagePreset"
      },
      "LanguagePreset-Output": {
        "type": "object",
        "properties": {
          "overrides": {
            "description": "The overrides for the language preset",
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Output"
          },
          "first_message_translation": {
            "description": "The translation of the first message",
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguagePresetTranslation"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "overrides"
        ],
        "title": "LanguagePreset"
      },
      "LanguagePresetTranslation": {
        "type": "object",
        "properties": {
          "source_hash": {
            "type": "string",
            "title": "Source Hash"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "required": [
          "source_hash",
          "text"
        ],
        "title": "LanguagePresetTranslation"
      },
      "LanguageResponseModel": {
        "type": "object",
        "properties": {
          "language_id": {
            "description": "The unique identifier of the language.",
            "type": "string",
            "title": "Language Id"
          },
          "name": {
            "description": "The name of the language.",
            "type": "string",
            "title": "Name"
          }
        },
        "example": {
          "language_id": "en",
          "name": "English"
        },
        "required": [
          "language_id",
          "name"
        ],
        "title": "LanguageResponseModel"
      },
      "LibraryVoiceResponseModel": {
        "type": "object",
        "properties": {
          "public_owner_id": {
            "description": "The public owner id of the voice.",
            "type": "string",
            "title": "Public Owner Id"
          },
          "voice_id": {
            "description": "The id of the voice.",
            "type": "string",
            "title": "Voice Id"
          },
          "date_unix": {
            "description": "The date the voice was added to the library in Unix time.",
            "type": "integer",
            "title": "Date Unix"
          },
          "name": {
            "description": "The name of the voice.",
            "type": "string",
            "title": "Name"
          },
          "accent": {
            "description": "The accent of the voice.",
            "type": "string",
            "title": "Accent"
          },
          "gender": {
            "description": "The gender of the voice.",
            "type": "string",
            "title": "Gender"
          },
          "age": {
            "description": "The age of the voice.",
            "type": "string",
            "title": "Age"
          },
          "descriptive": {
            "description": "The descriptive of the voice.",
            "type": "string",
            "title": "Descriptive"
          },
          "use_case": {
            "description": "The use case of the voice.",
            "type": "string",
            "title": "Use Case"
          },
          "category": {
            "description": "The category of the voice.",
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category"
          },
          "language": {
            "description": "The language of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "locale": {
            "description": "The locale of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale"
          },
          "description": {
            "description": "The description of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "preview_url": {
            "description": "The preview URL of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          },
          "usage_character_count_1y": {
            "description": "The usage character count of the voice in the last year.",
            "type": "integer",
            "title": "Usage Character Count 1Y"
          },
          "usage_character_count_7d": {
            "description": "The usage character count of the voice in the last 7 days.",
            "type": "integer",
            "title": "Usage Character Count 7D"
          },
          "play_api_usage_character_count_1y": {
            "description": "The play API usage character count of the voice in the last year.",
            "type": "integer",
            "title": "Play Api Usage Character Count 1Y"
          },
          "cloned_by_count": {
            "description": "The number of times the voice has been cloned.",
            "type": "integer",
            "title": "Cloned By Count"
          },
          "rate": {
            "description": "The rate of the voice.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate"
          },
          "free_users_allowed": {
            "description": "Whether free users are allowed to use the voice.",
            "type": "boolean",
            "title": "Free Users Allowed"
          },
          "live_moderation_enabled": {
            "description": "Whether live moderation is enabled for the voice.",
            "type": "boolean",
            "title": "Live Moderation Enabled"
          },
          "featured": {
            "description": "Whether the voice is featured.",
            "type": "boolean",
            "title": "Featured"
          },
          "verified_languages": {
            "description": "The verified languages of the voice.",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerifiedVoiceLanguageResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified Languages"
          },
          "notice_period": {
            "description": "The notice period of the voice.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notice Period"
          },
          "instagram_username": {
            "description": "The Instagram username of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Username"
          },
          "twitter_username": {
            "description": "The Twitter username of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Username"
          },
          "youtube_username": {
            "description": "The YouTube username of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Username"
          },
          "tiktok_username": {
            "description": "The TikTok username of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tiktok Username"
          },
          "image_url": {
            "description": "The image URL of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "is_added_by_user": {
            "description": "Whether the voice was added by the user.",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Added By User"
          }
        },
        "example": {
          "accent": "american",
          "age": "young",
          "category": "professional",
          "cloned_by_count": 11,
          "date_unix": 1714423232,
          "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
          "descriptive": "calm",
          "featured": false,
          "free_users_allowed": true,
          "gender": "Female",
          "language": "en",
          "live_moderation_enabled": false,
          "name": "Alita",
          "play_api_usage_character_count_1y": 12852,
          "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
          "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
          "rate": 1,
          "usage_character_count_1y": 12852,
          "usage_character_count_7d": 12852,
          "use_case": "characters_animation",
          "voice_id": "sB1b5zUrxQVAFl2PhZFp"
        },
        "required": [
          "public_owner_id",
          "voice_id",
          "date_unix",
          "name",
          "accent",
          "gender",
          "age",
          "descriptive",
          "use_case",
          "category",
          "usage_character_count_1y",
          "usage_character_count_7d",
          "play_api_usage_character_count_1y",
          "cloned_by_count",
          "free_users_allowed",
          "live_moderation_enabled",
          "featured"
        ],
        "title": "LibraryVoiceResponseModel"
      },
      "LiteralJsonSchemaProperty": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "boolean",
              "string",
              "integer",
              "number"
            ],
            "title": "Type"
          },
          "description": {
            "description": "The description of the property",
            "type": "string",
            "default": "",
            "title": "Description"
          },
          "dynamic_variable": {
            "description": "The dynamic variable of the property",
            "type": "string",
            "default": "",
            "title": "Dynamic Variable"
          },
          "constant_value": {
            "description": "The constant value of the property",
            "default": "",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "Constant Value"
          }
        },
        "example": {
          "constant_value": "Constant value",
          "description": "My property",
          "dynamic_variable": "Dynamic variable"
        },
        "required": [
          "type"
        ],
        "title": "LiteralJsonSchemaProperty"
      },
      "ManualVerificationFileResponseModel": {
        "type": "object",
        "properties": {
          "file_id": {
            "description": "The ID of the file.",
            "type": "string",
            "title": "File Id"
          },
          "file_name": {
            "description": "The name of the file.",
            "type": "string",
            "title": "File Name"
          },
          "mime_type": {
            "description": "The MIME type of the file.",
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "description": "The size of the file in bytes.",
            "type": "integer",
            "title": "Size Bytes"
          },
          "upload_date_unix": {
            "description": "The date of the file in Unix time.",
            "type": "integer",
            "title": "Upload Date Unix"
          }
        },
        "example": {
          "file_id": "CwhRBWXzGAHq8TQ4Fs18",
          "file_name": "file.mp3",
          "mime_type": "audio/mpeg",
          "size_bytes": 1000000,
          "upload_date_unix": 1714204800
        },
        "required": [
          "file_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "upload_date_unix"
        ],
        "title": "ManualVerificationFileResponseModel"
      },
      "ManualVerificationResponseModel": {
        "type": "object",
        "properties": {
          "extra_text": {
            "description": "The extra text of the manual verification.",
            "type": "string",
            "title": "Extra Text"
          },
          "request_time_unix": {
            "description": "The date of the manual verification in Unix time.",
            "type": "integer",
            "title": "Request Time Unix"
          },
          "files": {
            "description": "The files of the manual verification.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManualVerificationFileResponseModel"
            },
            "title": "Files"
          }
        },
        "example": {
          "extra_text": "Please verify the voice is that of a female.",
          "files": [
            {
              "file_id": "CwhRBWXzGAHq8TQ4Fs18",
              "file_name": "file.mp3",
              "mime_type": "audio/mpeg",
              "size_bytes": 1000000,
              "upload_date_unix": 1714204800
            }
          ],
          "request_time_unix": 1714204800
        },
        "required": [
          "extra_text",
          "request_time_unix",
          "files"
        ],
        "title": "ManualVerificationResponseModel"
      },
      "MetricRecord": {
        "type": "object",
        "properties": {
          "elapsed_time": {
            "type": "number",
            "title": "Elapsed Time"
          }
        },
        "required": [
          "elapsed_time"
        ],
        "title": "MetricRecord"
      },
      "MetricType": {
        "type": "string",
        "enum": [
          "credits",
          "minutes_used",
          "request_count",
          "ttfb_avg",
          "ttfb_p95",
          "fiat_units_spent"
        ],
        "title": "MetricType"
      },
      "ModelRatesResponseModel": {
        "type": "object",
        "properties": {
          "character_cost_multiplier": {
            "description": "The cost multiplier for characters.",
            "type": "number",
            "title": "Character Cost Multiplier"
          }
        },
        "example": {
          "character_cost_multiplier": 1
        },
        "required": [
          "character_cost_multiplier"
        ],
        "title": "ModelRatesResponseModel"
      },
      "ModelResponseModel": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The unique identifier of the model.",
            "type": "string",
            "title": "Model Id"
          },
          "name": {
            "description": "The name of the model.",
            "type": "string",
            "title": "Name"
          },
          "can_be_finetuned": {
            "description": "Whether the model can be finetuned.",
            "type": "boolean",
            "title": "Can Be Finetuned"
          },
          "can_do_text_to_speech": {
            "description": "Whether the model can do text-to-speech.",
            "type": "boolean",
            "title": "Can Do Text To Speech"
          },
          "can_do_voice_conversion": {
            "description": "Whether the model can do voice conversion.",
            "type": "boolean",
            "title": "Can Do Voice Conversion"
          },
          "can_use_style": {
            "description": "Whether the model can use style.",
            "type": "boolean",
            "title": "Can Use Style"
          },
          "can_use_speaker_boost": {
            "description": "Whether the model can use speaker boost.",
            "type": "boolean",
            "title": "Can Use Speaker Boost"
          },
          "serves_pro_voices": {
            "description": "Whether the model serves pro voices.",
            "type": "boolean",
            "title": "Serves Pro Voices"
          },
          "token_cost_factor": {
            "description": "The cost factor for the model.",
            "type": "number",
            "title": "Token Cost Factor"
          },
          "description": {
            "description": "The description of the model.",
            "type": "string",
            "title": "Description"
          },
          "requires_alpha_access": {
            "description": "Whether the model requires alpha access.",
            "type": "boolean",
            "title": "Requires Alpha Access"
          },
          "max_characters_request_free_user": {
            "description": "The maximum number of characters that can be requested by a free user.",
            "type": "integer",
            "title": "Max Characters Request Free User"
          },
          "max_characters_request_subscribed_user": {
            "description": "The maximum number of characters that can be requested by a subscribed user.",
            "type": "integer",
            "title": "Max Characters Request Subscribed User"
          },
          "maximum_text_length_per_request": {
            "description": "The maximum length of text that can be requested for this model.",
            "type": "integer",
            "title": "Maximum Text Length Per Request"
          },
          "languages": {
            "description": "The languages supported by the model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageResponseModel"
            },
            "title": "Languages"
          },
          "model_rates": {
            "description": "The rates for the model.",
            "$ref": "#/components/schemas/ModelRatesResponseModel"
          },
          "concurrency_group": {
            "description": "The concurrency group for the model.",
            "type": "string",
            "enum": [
              "standard",
              "turbo"
            ],
            "title": "Concurrency Group"
          }
        },
        "example": {
          "can_be_finetuned": true,
          "can_do_text_to_speech": true,
          "can_do_voice_conversion": true,
          "can_use_speaker_boost": true,
          "can_use_style": true,
          "concurrency_group": "standard",
          "description": "Our state of the art multilingual speech synthesis model, able to generate life-like speech in 29 languages.",
          "languages": [
            {
              "language_id": "en",
              "name": "English"
            }
          ],
          "max_characters_request_free_user": 2500,
          "max_characters_request_subscribed_user": 5000,
          "maximum_text_length_per_request": 1000000,
          "model_id": "eleven_multilingual_v2",
          "model_rates": {
            "character_cost_multiplier": 1
          },
          "name": "Eleven Multilingual v2",
          "requires_alpha_access": false,
          "serves_pro_voices": false,
          "token_cost_factor": 1
        },
        "required": [
          "model_id",
          "name",
          "can_be_finetuned",
          "can_do_text_to_speech",
          "can_do_voice_conversion",
          "can_use_style",
          "can_use_speaker_boost",
          "serves_pro_voices",
          "token_cost_factor",
          "description",
          "requires_alpha_access",
          "max_characters_request_free_user",
          "max_characters_request_subscribed_user",
          "maximum_text_length_per_request",
          "languages",
          "model_rates",
          "concurrency_group"
        ],
        "title": "ModelResponseModel"
      },
      "ModerationStatusResponseModel": {
        "type": "object",
        "properties": {
          "is_in_probation": {
            "description": "Whether the user is in probation.",
            "type": "boolean",
            "title": "Is In Probation"
          },
          "enterprise_check_nogo_voice": {
            "description": "Whether the user's enterprise check nogo voice is enabled.",
            "type": "boolean",
            "title": "Enterprise Check Nogo Voice"
          },
          "enterprise_check_block_nogo_voice": {
            "description": "Whether the user's enterprise check block nogo voice is enabled.",
            "type": "boolean",
            "title": "Enterprise Check Block Nogo Voice"
          },
          "never_live_moderate": {
            "description": "Whether the user's never live moderate is enabled.",
            "type": "boolean",
            "title": "Never Live Moderate"
          },
          "nogo_voice_similar_voice_upload_count": {
            "description": "The number of similar voice uploads that have been blocked.",
            "type": "integer",
            "title": "Nogo Voice Similar Voice Upload Count"
          },
          "enterprise_background_moderation_enabled": {
            "description": "Whether the user's enterprise background moderation is enabled.",
            "type": "boolean",
            "title": "Enterprise Background Moderation Enabled"
          },
          "safety_status": {
            "description": "The safety status of the user.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "appeal_approved",
                  "appeal_denied",
                  "false_positive"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Status"
          },
          "warning_status": {
            "description": "The warning status of the user.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "warning",
                  "warning_cleared"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Warning Status"
          },
          "on_watchlist": {
            "description": "Whether the user is on the watchlist.",
            "type": "boolean",
            "title": "On Watchlist"
          }
        },
        "example": {
          "enterprise_background_moderation_enabled": false,
          "enterprise_check_block_nogo_voice": false,
          "enterprise_check_nogo_voice": false,
          "is_in_probation": false,
          "never_live_moderate": false,
          "nogo_voice_similar_voice_upload_count": 0,
          "on_watchlist": false
        },
        "required": [
          "is_in_probation",
          "enterprise_check_nogo_voice",
          "enterprise_check_block_nogo_voice",
          "never_live_moderate",
          "nogo_voice_similar_voice_upload_count",
          "enterprise_background_moderation_enabled",
          "on_watchlist"
        ],
        "title": "ModerationStatusResponseModel"
      },
      "NestedCollectionContentItem": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "const": "subproject",
            "title": "Kind"
          },
          "ref_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ref Id"
          }
        },
        "required": [
          "kind",
          "ref_id"
        ],
        "title": "NestedCollectionContentItem"
      },
      "ObjectJsonSchemaProperty-Input": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "object",
            "const": "object",
            "title": "Type"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
                },
                {
                  "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
                },
                {
                  "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Input"
                }
              ]
            },
            "title": "Properties"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required"
          },
          "description": {
            "type": "string",
            "default": "",
            "title": "Description"
          }
        },
        "additionalProperties": false,
        "title": "ObjectJsonSchemaProperty"
      },
      "ObjectJsonSchemaProperty-Output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "object",
            "const": "object",
            "title": "Type"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
                },
                {
                  "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
                },
                {
                  "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Output"
                }
              ]
            },
            "title": "Properties"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required"
          },
          "description": {
            "type": "string",
            "default": "",
            "title": "Description"
          }
        },
        "additionalProperties": false,
        "title": "ObjectJsonSchemaProperty"
      },
      "OrbAvatar": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the avatar",
            "type": "string",
            "default": "orb",
            "const": "orb",
            "title": "Type"
          },
          "color_1": {
            "description": "The first color of the avatar",
            "type": "string",
            "default": "#2792dc",
            "title": "Color 1"
          },
          "color_2": {
            "description": "The second color of the avatar",
            "type": "string",
            "default": "#9ce6e6",
            "title": "Color 2"
          }
        },
        "example": {
          "color_1": "#2792dc",
          "color_2": "#9ce6e6",
          "type": "orb"
        },
        "title": "OrbAvatar"
      },
      "PatchConvAIDashboardSettingsRequest": {
        "type": "object",
        "properties": {
          "charts": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCallSuccessChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardCriteriaChartModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "call_success": "#/components/schemas/DashboardCallSuccessChartModel",
                  "criteria": "#/components/schemas/DashboardCriteriaChartModel"
                }
              }
            },
            "maxItems": 4,
            "title": "Charts"
          }
        },
        "title": "PatchConvAIDashboardSettingsRequest"
      },
      "PatchConvAISettingsRequest": {
        "type": "object",
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "title": "PatchConvAISettingsRequest"
      },
      "PdfExportOptions": {
        "type": "object",
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "default": true,
            "title": "Include Speakers"
          },
          "include_timestamps": {
            "type": "boolean",
            "default": true,
            "title": "Include Timestamps"
          },
          "format": {
            "type": "string",
            "const": "pdf",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "required": [
          "format"
        ],
        "title": "PdfExportOptions"
      },
      "PhoneNumberAgentInfo": {
        "type": "object",
        "properties": {
          "agent_id": {
            "description": "The ID of the agent",
            "type": "string",
            "title": "Agent Id"
          },
          "agent_name": {
            "description": "The name of the agent",
            "type": "string",
            "title": "Agent Name"
          }
        },
        "example": {
          "agent_id": "F3Pbu5gP6NNKBscdCdwB",
          "agent_name": "My Agent"
        },
        "required": [
          "agent_id",
          "agent_name"
        ],
        "title": "PhoneNumberAgentInfo"
      },
      "PhoneNumberTransfer": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          }
        },
        "required": [
          "phone_number",
          "condition"
        ],
        "title": "PhoneNumberTransfer"
      },
      "PodcastBulletinMode": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of podcast to create.",
            "type": "string",
            "const": "bulletin",
            "title": "Type"
          },
          "bulletin": {
            "description": "The voice settings for the bulletin.",
            "$ref": "#/components/schemas/PodcastBulletinModeData"
          }
        },
        "example": {
          "bulletin": {
            "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
          },
          "type": "bulletin"
        },
        "required": [
          "type",
          "bulletin"
        ],
        "title": "PodcastBulletinMode"
      },
      "PodcastBulletinModeData": {
        "type": "object",
        "properties": {
          "host_voice_id": {
            "description": "The ID of the host voice.",
            "type": "string",
            "title": "Host Voice Id"
          }
        },
        "example": {
          "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
        },
        "required": [
          "host_voice_id"
        ],
        "title": "PodcastBulletinModeData"
      },
      "PodcastConversationMode": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of podcast to create.",
            "type": "string",
            "const": "conversation",
            "title": "Type"
          },
          "conversation": {
            "description": "The voice settings for the conversation.",
            "$ref": "#/components/schemas/PodcastConversationModeData"
          }
        },
        "example": {
          "conversation": {
            "guest_voice_id": "aw1NgEzBg83R7vgmiJt7",
            "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
          },
          "type": "conversation"
        },
        "required": [
          "type",
          "conversation"
        ],
        "title": "PodcastConversationMode"
      },
      "PodcastConversationModeData": {
        "type": "object",
        "properties": {
          "host_voice_id": {
            "description": "The ID of the host voice.",
            "type": "string",
            "title": "Host Voice Id"
          },
          "guest_voice_id": {
            "description": "The ID of the guest voice.",
            "type": "string",
            "title": "Guest Voice Id"
          }
        },
        "example": {
          "guest_voice_id": "aw1NgEzBg83R7vgmiJt7",
          "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
        },
        "required": [
          "host_voice_id",
          "guest_voice_id"
        ],
        "title": "PodcastConversationModeData"
      },
      "PodcastProjectResponseModel": {
        "type": "object",
        "properties": {
          "project": {
            "description": "The project associated with the created podcast.",
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "required": [
          "project"
        ],
        "title": "PodcastProjectResponseModel"
      },
      "PodcastTextSource": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of source to create.",
            "type": "string",
            "const": "text",
            "title": "Type"
          },
          "text": {
            "description": "The text to create the podcast from.",
            "type": "string",
            "title": "Text"
          }
        },
        "example": {
          "text": "This is a test podcast.",
          "type": "text"
        },
        "required": [
          "type",
          "text"
        ],
        "title": "PodcastTextSource"
      },
      "PodcastURLSource": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of source to create.",
            "type": "string",
            "const": "url",
            "title": "Type"
          },
          "url": {
            "description": "The URL to create the podcast from.",
            "type": "string",
            "title": "Url"
          }
        },
        "example": {
          "type": "url",
          "url": "https://www.example.com"
        },
        "required": [
          "type",
          "url"
        ],
        "title": "PodcastURLSource"
      },
      "PostAgentAvatarResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "required": [
          "agent_id"
        ],
        "title": "PostAgentAvatarResponseModel"
      },
      "PostWorkspaceSecretRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "new",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "required": [
          "type",
          "name",
          "value"
        ],
        "title": "PostWorkspaceSecretRequest"
      },
      "PostWorkspaceSecretResponseModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "stored",
            "title": "Type"
          },
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "required": [
          "type",
          "secret_id",
          "name"
        ],
        "title": "PostWorkspaceSecretResponseModel"
      },
      "PrivacyConfig": {
        "type": "object",
        "properties": {
          "record_voice": {
            "description": "Whether to record the conversation",
            "type": "boolean",
            "default": true,
            "title": "Record Voice"
          },
          "retention_days": {
            "description": "The number of days to retain the conversation. -1 indicates there is no retention limit",
            "type": "integer",
            "default": -1,
            "title": "Retention Days"
          },
          "delete_transcript_and_pii": {
            "description": "Whether to delete the transcript and PII",
            "type": "boolean",
            "default": false,
            "title": "Delete Transcript And Pii"
          },
          "delete_audio": {
            "description": "Whether to delete the audio",
            "type": "boolean",
            "default": false,
            "title": "Delete Audio"
          },
          "apply_to_existing_conversations": {
            "description": "Whether to apply the privacy settings to existing conversations",
            "type": "boolean",
            "default": false,
            "title": "Apply To Existing Conversations"
          }
        },
        "example": {
          "apply_to_existing_conversations": false,
          "delete_audio": false,
          "delete_transcript_and_pii": false,
          "record_voice": true,
          "retention_days": -1
        },
        "title": "PrivacyConfig"
      },
      "ProfilePageResponseModel": {
        "type": "object",
        "properties": {
          "handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Handle"
          },
          "public_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public User Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "profile_picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture"
          }
        },
        "required": [
          "handle",
          "public_user_id",
          "name",
          "bio",
          "profile_picture"
        ],
        "title": "ProfilePageResponseModel"
      },
      "ProjectCreationMetaResponseModel": {
        "type": "object",
        "properties": {
          "creation_progress": {
            "description": "The progress of the project creation.",
            "type": "number",
            "title": "Creation Progress"
          },
          "status": {
            "description": "The status of the project creation action.",
            "type": "string",
            "enum": [
              "pending",
              "creating",
              "finished",
              "failed"
            ],
            "title": "Status"
          },
          "type": {
            "description": "The type of the project creation action.",
            "type": "string",
            "enum": [
              "blank",
              "generate_podcast",
              "auto_assign_voices"
            ],
            "title": "Type"
          }
        },
        "example": {
          "creation_progress": 0.5,
          "status": "pending",
          "type": "blank"
        },
        "required": [
          "creation_progress",
          "status",
          "type"
        ],
        "title": "ProjectCreationMetaResponseModel"
      },
      "ProjectExtendedResponseModel": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "name": {
            "description": "The name of the project.",
            "type": "string",
            "title": "Name"
          },
          "create_date_unix": {
            "description": "The creation date of the project.",
            "type": "integer",
            "title": "Create Date Unix"
          },
          "default_title_voice_id": {
            "description": "The default title voice ID.",
            "type": "string",
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The default paragraph voice ID.",
            "type": "string",
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": {
            "description": "The default model ID.",
            "type": "string",
            "title": "Default Model Id"
          },
          "last_conversion_date_unix": {
            "description": "The last conversion date of the project.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix"
          },
          "can_be_downloaded": {
            "description": "Whether the project can be downloaded.",
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "title": {
            "description": "The title of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "author": {
            "description": "The author of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "description": {
            "description": "The description of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "genres": {
            "description": "List of genres of the project.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genres"
          },
          "cover_image_url": {
            "description": "The cover image URL of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "target_audience": {
            "description": "The target audience of the project.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience"
          },
          "language": {
            "description": "Two-letter language code (ISO 639-1) of the language of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "content_type": {
            "description": "The content type of the project, e.g. 'Novel' or 'Short Story'",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "original_publication_date": {
            "description": "The original publication date of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date"
          },
          "mature_content": {
            "description": "Whether the project contains mature content.",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content"
          },
          "isbn_number": {
            "description": "The ISBN number of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number"
          },
          "volume_normalization": {
            "description": "Whether the project uses volume normalization.",
            "type": "boolean",
            "title": "Volume Normalization"
          },
          "state": {
            "description": "The state of the project.",
            "type": "string",
            "enum": [
              "creating",
              "default",
              "converting",
              "in_queue"
            ],
            "title": "State"
          },
          "access_level": {
            "description": "The access level of the project.",
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          },
          "fiction": {
            "description": "Whether the project is fiction.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction"
          },
          "quality_check_on": {
            "description": "Whether quality check is enabled for this project.",
            "type": "boolean",
            "deprecated": true,
            "title": "Quality Check On"
          },
          "quality_check_on_when_bulk_convert": {
            "description": "Whether quality check is enabled on the project when bulk converting.",
            "type": "boolean",
            "deprecated": true,
            "title": "Quality Check On When Bulk Convert"
          },
          "creation_meta": {
            "description": "The creation meta of the project.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "source_type": {
            "description": "The source type of the project.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type"
          },
          "chapters_enabled": {
            "description": "Whether chapters are enabled for the project.",
            "default": true,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapters Enabled"
          },
          "quality_preset": {
            "description": "The quality preset level of the project.",
            "type": "string",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "title": "Quality Preset"
          },
          "chapters": {
            "description": "List of chapters of the project and their metadata.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterResponseModel"
            },
            "title": "Chapters"
          },
          "pronunciation_dictionary_versions": {
            "description": "List of pronunciation dictionary versions of the project and their metadata.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionResponseModel"
            },
            "title": "Pronunciation Dictionary Versions"
          },
          "pronunciation_dictionary_locators": {
            "description": "List of pronunciation dictionary locators.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryLocatorResponseModel"
            },
            "title": "Pronunciation Dictionary Locators"
          },
          "apply_text_normalization": {
            "description": "Whether text normalization is applied to the project.",
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off",
              "apply_english"
            ],
            "title": "Apply Text Normalization"
          },
          "experimental": {
            "description": "Experimental features of the project.",
            "type": "object",
            "title": "Experimental"
          }
        },
        "example": {
          "access_level": "viewer",
          "author": "John Doe",
          "can_be_downloaded": true,
          "content_type": "Novel",
          "cover_image_url": "https://example.com/cover.jpg",
          "create_date_unix": 1714204800,
          "creation_meta": {
            "creation_progress": 0.5,
            "status": "pending",
            "type": "blank"
          },
          "default_model_id": "eleven_multilingual_v2",
          "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "description": "This is a description of my project.",
          "fiction": "fiction",
          "genres": [
            "Novel",
            "Short Story"
          ],
          "isbn_number": "978-90-274-3964-2",
          "language": "en",
          "last_conversion_date_unix": 1714204800,
          "mature_content": false,
          "name": "My Project",
          "original_publication_date": "2025-01-01",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "quality_check_on": false,
          "quality_check_on_when_bulk_convert": false,
          "state": "default",
          "target_audience": "Young Adults",
          "title": "My Project",
          "volume_normalization": true
        },
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "can_be_downloaded",
          "volume_normalization",
          "state",
          "access_level",
          "quality_check_on",
          "quality_check_on_when_bulk_convert",
          "quality_preset",
          "chapters",
          "pronunciation_dictionary_versions",
          "pronunciation_dictionary_locators",
          "apply_text_normalization",
          "experimental"
        ],
        "title": "ProjectExtendedResponseModel"
      },
      "ProjectResponseModel": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "name": {
            "description": "The name of the project.",
            "type": "string",
            "title": "Name"
          },
          "create_date_unix": {
            "description": "The creation date of the project.",
            "type": "integer",
            "title": "Create Date Unix"
          },
          "default_title_voice_id": {
            "description": "The default title voice ID.",
            "type": "string",
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The default paragraph voice ID.",
            "type": "string",
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": {
            "description": "The default model ID.",
            "type": "string",
            "title": "Default Model Id"
          },
          "last_conversion_date_unix": {
            "description": "The last conversion date of the project.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix"
          },
          "can_be_downloaded": {
            "description": "Whether the project can be downloaded.",
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "title": {
            "description": "The title of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "author": {
            "description": "The author of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "description": {
            "description": "The description of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "genres": {
            "description": "List of genres of the project.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genres"
          },
          "cover_image_url": {
            "description": "The cover image URL of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "target_audience": {
            "description": "The target audience of the project.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience"
          },
          "language": {
            "description": "Two-letter language code (ISO 639-1) of the language of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "content_type": {
            "description": "The content type of the project, e.g. 'Novel' or 'Short Story'",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "original_publication_date": {
            "description": "The original publication date of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date"
          },
          "mature_content": {
            "description": "Whether the project contains mature content.",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content"
          },
          "isbn_number": {
            "description": "The ISBN number of the project.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number"
          },
          "volume_normalization": {
            "description": "Whether the project uses volume normalization.",
            "type": "boolean",
            "title": "Volume Normalization"
          },
          "state": {
            "description": "The state of the project.",
            "type": "string",
            "enum": [
              "creating",
              "default",
              "converting",
              "in_queue"
            ],
            "title": "State"
          },
          "access_level": {
            "description": "The access level of the project.",
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          },
          "fiction": {
            "description": "Whether the project is fiction.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction"
          },
          "quality_check_on": {
            "description": "Whether quality check is enabled for this project.",
            "type": "boolean",
            "deprecated": true,
            "title": "Quality Check On"
          },
          "quality_check_on_when_bulk_convert": {
            "description": "Whether quality check is enabled on the project when bulk converting.",
            "type": "boolean",
            "deprecated": true,
            "title": "Quality Check On When Bulk Convert"
          },
          "creation_meta": {
            "description": "The creation meta of the project.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "source_type": {
            "description": "The source type of the project.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type"
          },
          "chapters_enabled": {
            "description": "Whether chapters are enabled for the project.",
            "default": true,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapters Enabled"
          }
        },
        "example": {
          "access_level": "viewer",
          "author": "John Doe",
          "can_be_downloaded": true,
          "content_type": "Novel",
          "cover_image_url": "https://example.com/cover.jpg",
          "create_date_unix": 1714204800,
          "creation_meta": {
            "creation_progress": 0.5,
            "status": "pending",
            "type": "blank"
          },
          "default_model_id": "eleven_multilingual_v2",
          "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "description": "This is a description of my project.",
          "fiction": "fiction",
          "genres": [
            "Novel",
            "Short Story"
          ],
          "isbn_number": "978-90-274-3964-2",
          "language": "en",
          "last_conversion_date_unix": 1714204800,
          "mature_content": false,
          "name": "My Project",
          "original_publication_date": "2025-01-01",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "quality_check_on": false,
          "quality_check_on_when_bulk_convert": false,
          "state": "default",
          "target_audience": "Young Adults",
          "title": "My Project",
          "volume_normalization": true
        },
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "can_be_downloaded",
          "volume_normalization",
          "state",
          "access_level",
          "quality_check_on",
          "quality_check_on_when_bulk_convert"
        ],
        "title": "ProjectResponseModel"
      },
      "ProjectSnapshotExtendedResponseModel": {
        "type": "object",
        "properties": {
          "project_snapshot_id": {
            "description": "The ID of the project snapshot.",
            "type": "string",
            "title": "Project Snapshot Id"
          },
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "created_at_unix": {
            "description": "The creation date of the project snapshot.",
            "type": "integer",
            "title": "Created At Unix"
          },
          "name": {
            "description": "The name of the project snapshot.",
            "type": "string",
            "title": "Name"
          },
          "audio_upload": {
            "description": "(Deprecated)",
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Upload"
          },
          "zip_upload": {
            "description": "(Deprecated)",
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Upload"
          },
          "character_alignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CharacterAlignmentModel"
            },
            "title": "Character Alignments"
          }
        },
        "example": {
          "created_at_unix": 1714204800,
          "name": "My Project Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6"
        },
        "required": [
          "project_snapshot_id",
          "project_id",
          "created_at_unix",
          "name",
          "character_alignments"
        ],
        "title": "ProjectSnapshotExtendedResponseModel"
      },
      "ProjectSnapshotResponseModel": {
        "type": "object",
        "properties": {
          "project_snapshot_id": {
            "description": "The ID of the project snapshot.",
            "type": "string",
            "title": "Project Snapshot Id"
          },
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "created_at_unix": {
            "description": "The creation date of the project snapshot.",
            "type": "integer",
            "title": "Created At Unix"
          },
          "name": {
            "description": "The name of the project snapshot.",
            "type": "string",
            "title": "Name"
          },
          "audio_upload": {
            "description": "(Deprecated)",
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Upload"
          },
          "zip_upload": {
            "description": "(Deprecated)",
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Upload"
          }
        },
        "example": {
          "created_at_unix": 1714204800,
          "name": "My Project Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6"
        },
        "required": [
          "project_snapshot_id",
          "project_id",
          "created_at_unix",
          "name"
        ],
        "title": "ProjectSnapshotResponseModel"
      },
      "ProjectSnapshotsResponseModel": {
        "type": "object",
        "properties": {
          "snapshots": {
            "description": "List of project snapshots.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectSnapshotResponseModel"
            },
            "title": "Snapshots"
          }
        },
        "example": {
          "snapshots": [
            {
              "created_at_unix": 1714204800,
              "name": "My Project Snapshot",
              "project_id": "aw1NgEzBg83R7vgmiJt6",
              "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6"
            }
          ]
        },
        "required": [
          "snapshots"
        ],
        "title": "ProjectSnapshotsResponseModel"
      },
      "PromptAgent-Input": {
        "type": "object",
        "properties": {
          "prompt": {
            "description": "The prompt for the agent",
            "type": "string",
            "default": "",
            "title": "Prompt"
          },
          "llm": {
            "description": "The LLM to query with the prompt and the chat history",
            "default": "gemini-2.0-flash-001",
            "$ref": "#/components/schemas/LLM"
          },
          "temperature": {
            "description": "The temperature for the LLM",
            "type": "number",
            "default": 0,
            "title": "Temperature"
          },
          "max_tokens": {
            "description": "If greater than 0, maximum number of tokens the LLM can predict",
            "type": "integer",
            "default": -1,
            "title": "Max Tokens"
          },
          "tools": {
            "description": "A list of tools that the agent can use over the course of the conversation",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WebhookToolConfig-Input"
                },
                {
                  "$ref": "#/components/schemas/ClientToolConfig-Input"
                },
                {
                  "$ref": "#/components/schemas/SystemToolConfig-Input"
                }
              ],
              "description": "The type of tool",
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "client": "#/components/schemas/ClientToolConfig-Input",
                  "system": "#/components/schemas/SystemToolConfig-Input",
                  "webhook": "#/components/schemas/WebhookToolConfig-Input"
                }
              }
            },
            "title": "Tools"
          },
          "tool_ids": {
            "description": "A list of IDs of tools used by the agent",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tool Ids"
          },
          "knowledge_base": {
            "description": "A list of knowledge bases to be used by the agent",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseLocator"
            },
            "title": "Knowledge Base"
          },
          "custom_llm": {
            "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'",
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomLLM"
              },
              {
                "type": "null"
              }
            ]
          },
          "ignore_default_personality": {
            "description": "Whether to ignore the default personality",
            "default": false,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Default Personality"
          },
          "rag": {
            "description": "Configuration for RAG",
            "$ref": "#/components/schemas/RagConfig"
          }
        },
        "example": {
          "knowledge_base": [],
          "llm": "gemini-2.0-flash-001",
          "max_tokens": -1,
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "temperature": 0,
          "tool_ids": [],
          "tools": []
        },
        "title": "PromptAgent"
      },
      "PromptAgent-Output": {
        "type": "object",
        "properties": {
          "prompt": {
            "description": "The prompt for the agent",
            "type": "string",
            "default": "",
            "title": "Prompt"
          },
          "llm": {
            "description": "The LLM to query with the prompt and the chat history",
            "default": "gemini-2.0-flash-001",
            "$ref": "#/components/schemas/LLM"
          },
          "temperature": {
            "description": "The temperature for the LLM",
            "type": "number",
            "default": 0,
            "title": "Temperature"
          },
          "max_tokens": {
            "description": "If greater than 0, maximum number of tokens the LLM can predict",
            "type": "integer",
            "default": -1,
            "title": "Max Tokens"
          },
          "tools": {
            "description": "A list of tools that the agent can use over the course of the conversation",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WebhookToolConfig-Output"
                },
                {
                  "$ref": "#/components/schemas/ClientToolConfig-Output"
                },
                {
                  "$ref": "#/components/schemas/SystemToolConfig-Output"
                }
              ],
              "description": "The type of tool",
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "client": "#/components/schemas/ClientToolConfig-Output",
                  "system": "#/components/schemas/SystemToolConfig-Output",
                  "webhook": "#/components/schemas/WebhookToolConfig-Output"
                }
              }
            },
            "title": "Tools"
          },
          "tool_ids": {
            "description": "A list of IDs of tools used by the agent",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tool Ids"
          },
          "knowledge_base": {
            "description": "A list of knowledge bases to be used by the agent",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseLocator"
            },
            "title": "Knowledge Base"
          },
          "custom_llm": {
            "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'",
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomLLM"
              },
              {
                "type": "null"
              }
            ]
          },
          "ignore_default_personality": {
            "description": "Whether to ignore the default personality",
            "default": false,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Default Personality"
          },
          "rag": {
            "description": "Configuration for RAG",
            "$ref": "#/components/schemas/RagConfig"
          }
        },
        "example": {
          "knowledge_base": [],
          "llm": "gemini-2.0-flash-001",
          "max_tokens": -1,
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "temperature": 0,
          "tool_ids": [],
          "tools": []
        },
        "title": "PromptAgent"
      },
      "PromptAgentOverride": {
        "type": "object",
        "properties": {
          "prompt": {
            "description": "The initial system message that defines the agent, e.g. “You are a German language teacher named Laura.”",
            "type": "string",
            "default": "",
            "title": "Prompt"
          }
        },
        "example": {
          "prompt": "You are a German language teacher named Laura."
        },
        "title": "PromptAgentOverride"
      },
      "PromptAgentOverrideConfig": {
        "type": "object",
        "properties": {
          "prompt": {
            "description": "Whether to allow prompt overriding",
            "type": "boolean",
            "default": false,
            "title": "Prompt"
          }
        },
        "title": "PromptAgentOverrideConfig"
      },
      "PromptEvaluationCriteria": {
        "description": "An evaluation using the transcript and a prompt for a yes/no achieved answer",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the evaluation criteria",
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "description": "The type of evaluation criteria",
            "type": "string",
            "default": "prompt",
            "const": "prompt",
            "title": "Type"
          },
          "conversation_goal_prompt": {
            "description": "The prompt that the agent should use to evaluate the conversation",
            "type": "string",
            "maxLength": 2000,
            "title": "Conversation Goal Prompt"
          },
          "use_knowledge_base": {
            "description": "When evaluating the prompt, should the agent's knowledge base be used.",
            "type": "boolean",
            "default": false,
            "title": "Use Knowledge Base"
          }
        },
        "example": {
          "conversation_goal_prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "id": "1234567890",
          "use_knowledge_base": false
        },
        "required": [
          "id",
          "conversation_goal_prompt"
        ],
        "title": "PromptEvaluationCriteria"
      },
      "PronunciationDictionaryAliasRuleRequestModel": {
        "type": "object",
        "properties": {
          "string_to_replace": {
            "description": "The string to replace. Must be a non-empty string.",
            "type": "string",
            "title": "String To Replace"
          },
          "type": {
            "description": "The type of the rule.",
            "type": "string",
            "const": "alias",
            "title": "Type"
          },
          "alias": {
            "description": "The alias for the string to be replaced.",
            "type": "string",
            "title": "Alias"
          }
        },
        "example": {
          "alias": "tie-land",
          "string_to_replace": "Thailand",
          "type": "alias"
        },
        "required": [
          "string_to_replace",
          "type",
          "alias"
        ],
        "title": "PronunciationDictionaryAliasRuleRequestModel"
      },
      "PronunciationDictionaryLocatorResponseModel": {
        "type": "object",
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          }
        },
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PronunciationDictionaryLocatorResponseModel"
      },
      "PronunciationDictionaryPhonemeRuleRequestModel": {
        "type": "object",
        "properties": {
          "string_to_replace": {
            "description": "The string to replace. Must be a non-empty string.",
            "type": "string",
            "title": "String To Replace"
          },
          "type": {
            "description": "The type of the rule.",
            "type": "string",
            "const": "phoneme",
            "title": "Type"
          },
          "phoneme": {
            "description": "The phoneme rule.",
            "type": "string",
            "title": "Phoneme"
          },
          "alphabet": {
            "description": "The alphabet to use with the phoneme rule.",
            "type": "string",
            "title": "Alphabet"
          }
        },
        "example": {
          "alphabet": "ipa",
          "phoneme": "/ˈtaɪ.lænd/",
          "string_to_replace": "Thailand",
          "type": "phoneme"
        },
        "required": [
          "string_to_replace",
          "type",
          "phoneme",
          "alphabet"
        ],
        "title": "PronunciationDictionaryPhonemeRuleRequestModel"
      },
      "PronunciationDictionaryRulesResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the pronunciation dictionary.",
            "type": "string",
            "title": "Id"
          },
          "version_id": {
            "description": "The version ID of the pronunciation dictionary.",
            "type": "string",
            "title": "Version Id"
          },
          "version_rules_num": {
            "description": "The number of rules in the version of the pronunciation dictionary.",
            "type": "integer",
            "title": "Version Rules Num"
          }
        },
        "example": {
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "version_id": "5xM3yVvZQKV0EfqQpLr2"
        },
        "required": [
          "id",
          "version_id",
          "version_rules_num"
        ],
        "title": "PronunciationDictionaryRulesResponseModel"
      },
      "PronunciationDictionaryVersionLocatorDBModel": {
        "type": "object",
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          }
        },
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PronunciationDictionaryVersionLocatorDBModel"
      },
      "PronunciationDictionaryVersionResponseModel": {
        "type": "object",
        "properties": {
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "version_rules_num": {
            "type": "integer",
            "title": "Version Rules Num"
          },
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "dictionary_name": {
            "type": "string",
            "title": "Dictionary Name"
          },
          "version_name": {
            "type": "string",
            "title": "Version Name"
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "creation_time_unix": {
            "type": "integer",
            "title": "Creation Time Unix"
          },
          "archived_time_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived Time Unix"
          }
        },
        "required": [
          "version_id",
          "version_rules_num",
          "pronunciation_dictionary_id",
          "dictionary_name",
          "version_name",
          "permission_on_resource",
          "created_by",
          "creation_time_unix"
        ],
        "title": "PronunciationDictionaryVersionResponseModel"
      },
      "PydanticPronunciationDictionaryVersionLocator": {
        "description": "A locator for other documents to be able to reference a specific dictionary and it's version.\nThis is a pydantic version of PronunciationDictionaryVersionLocatorDBModel.\nRequired to ensure compat with the rest of the agent data models.",
        "type": "object",
        "properties": {
          "pronunciation_dictionary_id": {
            "description": "The ID of the pronunciation dictionary",
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "version_id": {
            "description": "The ID of the version of the pronunciation dictionary",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          }
        },
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PydanticPronunciationDictionaryVersionLocator"
      },
      "QueryParamsJsonSchema": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "title": "Properties"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required"
          }
        },
        "additionalProperties": false,
        "required": [
          "properties"
        ],
        "title": "QueryParamsJsonSchema"
      },
      "RAGIndexRequestModel": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          }
        },
        "required": [
          "model"
        ],
        "title": "RAGIndexRequestModel"
      },
      "RAGIndexResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/RAGIndexStatus"
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage"
          }
        },
        "required": [
          "status",
          "progress_percentage"
        ],
        "title": "RAGIndexResponseModel"
      },
      "RAGIndexStatus": {
        "type": "string",
        "enum": [
          "created",
          "processing",
          "failed",
          "succeeded"
        ],
        "title": "RAGIndexStatus"
      },
      "RagChunkMetadata": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "chunk_id": {
            "type": "string",
            "title": "Chunk Id"
          },
          "vector_distance": {
            "type": "number",
            "title": "Vector Distance"
          }
        },
        "required": [
          "document_id",
          "chunk_id",
          "vector_distance"
        ],
        "title": "RagChunkMetadata"
      },
      "RagConfig": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": false,
            "title": "Enabled"
          },
          "embedding_model": {
            "default": "e5_mistral_7b_instruct",
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          },
          "max_vector_distance": {
            "description": "Maximum vector distance of retrieved chunks.",
            "type": "number",
            "default": 0.6,
            "examples": [
              0.5
            ],
            "exclusiveMaximum": 1,
            "exclusiveMinimum": 0,
            "title": "Max Vector Distance"
          },
          "max_documents_length": {
            "description": "Maximum total length of document chunks retrieved from RAG.",
            "type": "integer",
            "default": 50000,
            "examples": [
              "50000"
            ],
            "exclusiveMaximum": 10000000,
            "exclusiveMinimum": 0,
            "title": "Max Documents Length"
          }
        },
        "title": "RagConfig"
      },
      "RagRetrievalInfo": {
        "type": "object",
        "properties": {
          "chunks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RagChunkMetadata"
            },
            "title": "Chunks"
          },
          "embedding_model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          },
          "retrieval_query": {
            "type": "string",
            "title": "Retrieval Query"
          },
          "rag_latency_secs": {
            "type": "number",
            "title": "Rag Latency Secs"
          }
        },
        "required": [
          "chunks",
          "embedding_model",
          "retrieval_query",
          "rag_latency_secs"
        ],
        "title": "RagRetrievalInfo"
      },
      "ReaderResourceResponseModel": {
        "type": "object",
        "properties": {
          "resource_type": {
            "description": "The type of resource.",
            "type": "string",
            "enum": [
              "read",
              "collection"
            ],
            "title": "Resource Type"
          },
          "resource_id": {
            "description": "The ID of the resource.",
            "type": "string",
            "title": "Resource Id"
          }
        },
        "example": {
          "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
          "resource_type": "read"
        },
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "ReaderResourceResponseModel"
      },
      "RecordingResponseModel": {
        "type": "object",
        "properties": {
          "recording_id": {
            "description": "The ID of the recording.",
            "type": "string",
            "title": "Recording Id"
          },
          "mime_type": {
            "description": "The MIME type of the recording.",
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "description": "The size of the recording in bytes.",
            "type": "integer",
            "title": "Size Bytes"
          },
          "upload_date_unix": {
            "description": "The date of the recording in Unix time.",
            "type": "integer",
            "title": "Upload Date Unix"
          },
          "transcription": {
            "description": "The transcription of the recording.",
            "type": "string",
            "title": "Transcription"
          }
        },
        "example": {
          "mime_type": "audio/mpeg",
          "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
          "size_bytes": 1000000,
          "transcription": "Hello, how are you?",
          "upload_date_unix": 1714204800
        },
        "required": [
          "recording_id",
          "mime_type",
          "size_bytes",
          "upload_date_unix",
          "transcription"
        ],
        "title": "RecordingResponseModel"
      },
      "RenameProjectRequestBody": {
        "type": "object",
        "properties": {
          "new_name": {
            "type": "string",
            "title": "New Name"
          }
        },
        "required": [
          "new_name"
        ],
        "title": "RenameProjectRequestBody"
      },
      "Render": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RenderType"
              },
              {
                "type": "null"
              }
            ]
          },
          "media_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "complete",
              "processing",
              "failed"
            ],
            "title": "Status"
          }
        },
        "required": [
          "id",
          "version",
          "language",
          "type",
          "media_ref",
          "status"
        ],
        "title": "Render"
      },
      "RenderType": {
        "type": "string",
        "enum": [
          "mp4",
          "aac",
          "mp3",
          "wav",
          "aaf",
          "tracks_zip",
          "clips_zip"
        ],
        "title": "RenderType"
      },
      "RequestPVCManualVerificationResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the request PVC manual verification request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "RequestPVCManualVerificationResponseModel"
      },
      "ResourceAccessInfo": {
        "type": "object",
        "properties": {
          "is_creator": {
            "description": "Whether the user making the request is the creator of the agent",
            "type": "boolean",
            "title": "Is Creator"
          },
          "creator_name": {
            "description": "Name of the agent's creator",
            "type": "string",
            "title": "Creator Name"
          },
          "creator_email": {
            "description": "Email of the agent's creator",
            "type": "string",
            "title": "Creator Email"
          },
          "role": {
            "description": "The role of the user making the request",
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Role"
          }
        },
        "example": {
          "creator_email": "john.doe@example.com",
          "creator_name": "John Doe",
          "is_creator": true,
          "role": "admin"
        },
        "required": [
          "is_creator",
          "creator_name",
          "creator_email",
          "role"
        ],
        "title": "ResourceAccessInfo"
      },
      "ResourceMetadataResponseModel": {
        "type": "object",
        "properties": {
          "resource_id": {
            "description": "The ID of the resource.",
            "type": "string",
            "title": "Resource Id"
          },
          "resource_type": {
            "description": "The type of the resource.",
            "$ref": "#/components/schemas/WorkspaceResourceType"
          },
          "creator_user_id": {
            "description": "The ID of the user who created the resource.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator User Id"
          },
          "role_to_group_ids": {
            "description": "A mapping of roles to group IDs. When the resource is shared with a user, the group id is the user's id.",
            "type": "object",
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "propertyNames": {
              "enum": [
                "admin",
                "editor",
                "viewer"
              ]
            },
            "title": "Role To Group Ids"
          },
          "share_options": {
            "description": "List of options for sharing the resource further in the workspace. These are users who don't have access to the resource yet.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShareOptionResponseModel"
            },
            "title": "Share Options"
          }
        },
        "example": {
          "creator_user_id": "5zavrE1kZXv2lFw9BKgEkf0B5Wqo",
          "resource_id": "4ZUqyldxf71HqUbcP2Lc",
          "resource_type": "voice",
          "role_to_group_ids": {
            "admin": [
              "5zavrE1kZXv2lFw9BKgEkf0B5Wqo"
            ],
            "editor": [
              "8ruQDGM2R4w1mFbHI5aROCUjIpJZ"
            ],
            "viewer": []
          },
          "share_options": [
            {
              "id": "i2YYI6huwBmcgYydAXARmQJc3pmX",
              "name": "user@example.com",
              "type": "user"
            },
            {
              "id": "x1AfvYKAmiqxCnbvZeNXHqqthJaC",
              "name": "mygroup",
              "type": "group"
            }
          ]
        },
        "required": [
          "resource_id",
          "resource_type",
          "creator_user_id",
          "role_to_group_ids",
          "share_options"
        ],
        "title": "ResourceMetadataResponseModel"
      },
      "SIPTrunkCredentials": {
        "type": "object",
        "properties": {
          "username": {
            "description": "SIP trunk username",
            "type": "string",
            "title": "Username"
          },
          "password": {
            "description": "SIP trunk password",
            "type": "string",
            "title": "Password"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "title": "SIPTrunkCredentials"
      },
      "SafetyCommonModel": {
        "description": "Safety object that has the information of safety evaluations based on used voice.",
        "type": "object",
        "properties": {
          "ivc": {
            "$ref": "#/components/schemas/SafetyEvaluation"
          },
          "non_ivc": {
            "$ref": "#/components/schemas/SafetyEvaluation"
          }
        },
        "title": "SafetyCommonModel"
      },
      "SafetyEvaluation": {
        "description": "Safety evaluation of the agent. Prompt and first message is taken into account.\nThe unsafe reason is provided from the evaluation",
        "type": "object",
        "properties": {
          "is_unsafe": {
            "type": "boolean",
            "default": false,
            "title": "Is Unsafe"
          },
          "llm_reason": {
            "type": "string",
            "default": "",
            "title": "Llm Reason"
          },
          "safety_prompt_version": {
            "type": "integer",
            "default": 0,
            "title": "Safety Prompt Version"
          },
          "matched_rule_id": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SafetyRule"
            },
            "title": "Matched Rule Id"
          }
        },
        "title": "SafetyEvaluation"
      },
      "SafetyResponseModel": {
        "type": "object",
        "properties": {
          "is_blocked_ivc": {
            "type": "boolean",
            "default": false,
            "title": "Is Blocked Ivc"
          },
          "is_blocked_non_ivc": {
            "type": "boolean",
            "default": false,
            "title": "Is Blocked Non Ivc"
          },
          "ignore_safety_evaluation": {
            "type": "boolean",
            "default": false,
            "title": "Ignore Safety Evaluation"
          }
        },
        "title": "SafetyResponseModel"
      },
      "SafetyRule": {
        "type": "string",
        "enum": [
          "sexual_minors",
          "forget_moderation",
          "extremism",
          "scam_fraud",
          "political",
          "self_harm",
          "illegal_distribution_medical",
          "sexual_adults",
          "unknown"
        ],
        "title": "SafetyRule"
      },
      "SampleResponseModel": {
        "type": "object",
        "properties": {
          "sample_id": {
            "description": "The ID of the sample.",
            "type": "string",
            "title": "Sample Id"
          },
          "file_name": {
            "description": "The name of the sample file.",
            "type": "string",
            "title": "File Name"
          },
          "mime_type": {
            "description": "The MIME type of the sample file.",
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "description": "The size of the sample file in bytes.",
            "type": "integer",
            "title": "Size Bytes"
          },
          "hash": {
            "description": "The hash of the sample file.",
            "type": "string",
            "title": "Hash"
          },
          "duration_secs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Secs"
          },
          "remove_background_noise": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Background Noise"
          },
          "has_isolated_audio": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio"
          },
          "has_isolated_audio_preview": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio Preview"
          },
          "speaker_separation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpeakerSeparationResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "trim_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim Start"
          },
          "trim_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim End"
          }
        },
        "example": {
          "file_name": "sample.mp3",
          "hash": "1234567890",
          "mime_type": "audio/mpeg",
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "size_bytes": 1000000
        },
        "required": [
          "sample_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "hash"
        ],
        "title": "SampleResponseModel"
      },
      "SecretDependencyType": {
        "type": "string",
        "enum": [
          "conversation_initiation_webhook"
        ],
        "title": "SecretDependencyType"
      },
      "SegmentCreatePayload": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          }
        },
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "SegmentCreatePayload"
      },
      "SegmentCreateResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "new_segment": {
            "type": "string",
            "title": "New Segment"
          }
        },
        "required": [
          "version",
          "new_segment"
        ],
        "title": "SegmentCreateResponse"
      },
      "SegmentDeleteResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentDeleteResponse"
      },
      "SegmentDubResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentDubResponse"
      },
      "SegmentTranscriptionResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentTranscriptionResponse"
      },
      "SegmentTranslationResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentTranslationResponse"
      },
      "SegmentUpdatePayload": {
        "type": "object",
        "properties": {
          "start_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          }
        },
        "title": "SegmentUpdatePayload"
      },
      "SegmentUpdateResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentUpdateResponse"
      },
      "SegmentedJsonExportOptions": {
        "type": "object",
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "default": true,
            "title": "Include Speakers"
          },
          "include_timestamps": {
            "type": "boolean",
            "default": true,
            "title": "Include Timestamps"
          },
          "format": {
            "type": "string",
            "const": "segmented_json",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "required": [
          "format"
        ],
        "title": "SegmentedJsonExportOptions"
      },
      "ShareOptionResponseModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the principal.",
            "type": "string",
            "title": "Name"
          },
          "id": {
            "description": "The ID of the principal.",
            "type": "string",
            "title": "Id"
          },
          "type": {
            "description": "The type of the principal: user, group, or workspace api key.",
            "type": "string",
            "enum": [
              "user",
              "group",
              "key"
            ],
            "title": "Type"
          }
        },
        "required": [
          "name",
          "id",
          "type"
        ],
        "title": "ShareOptionResponseModel"
      },
      "SpeakerAudioResponseModel": {
        "type": "object",
        "properties": {
          "audio_base_64": {
            "description": "The base64 encoded audio.",
            "type": "string",
            "title": "Audio Base 64"
          },
          "media_type": {
            "description": "The media type of the audio.",
            "type": "string",
            "title": "Media Type"
          },
          "duration_secs": {
            "description": "The duration of the audio in seconds.",
            "type": "number",
            "title": "Duration Secs"
          }
        },
        "example": {
          "audio_base_64": "audio_base_64",
          "duration_secs": 5,
          "media_type": "audio/mpeg"
        },
        "required": [
          "audio_base_64",
          "media_type",
          "duration_secs"
        ],
        "title": "SpeakerAudioResponseModel"
      },
      "SpeakerResponseModel": {
        "type": "object",
        "properties": {
          "speaker_id": {
            "description": "The ID of the speaker.",
            "type": "string",
            "title": "Speaker Id"
          },
          "duration_secs": {
            "description": "The duration of the speaker segment in seconds.",
            "type": "number",
            "title": "Duration Secs"
          },
          "utterances": {
            "description": "The utterances of the speaker.",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UtteranceResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utterances"
          }
        },
        "example": {
          "duration_secs": 5,
          "speaker_id": "DCwhRBWXzGAHq8TQ4Fs18"
        },
        "required": [
          "speaker_id",
          "duration_secs"
        ],
        "title": "SpeakerResponseModel"
      },
      "SpeakerSegment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "dubs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DubbedSegment"
            },
            "title": "Dubs"
          }
        },
        "required": [
          "id",
          "start_time",
          "end_time",
          "text",
          "dubs"
        ],
        "title": "SpeakerSegment"
      },
      "SpeakerSeparationResponseModel": {
        "type": "object",
        "properties": {
          "voice_id": {
            "description": "The ID of the voice.",
            "type": "string",
            "title": "Voice Id"
          },
          "sample_id": {
            "description": "The ID of the sample.",
            "type": "string",
            "title": "Sample Id"
          },
          "status": {
            "description": "The status of the speaker separation.",
            "type": "string",
            "enum": [
              "not_started",
              "pending",
              "completed",
              "failed"
            ],
            "title": "Status"
          },
          "speakers": {
            "description": "The speakers of the sample.",
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/SpeakerResponseModel"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speakers"
          },
          "selected_speaker_ids": {
            "description": "The IDs of the selected speakers.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Speaker Ids"
          }
        },
        "example": {
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "status": "not_started",
          "voice_id": "DCwhRBWXzGAHq8TQ4Fs18"
        },
        "required": [
          "voice_id",
          "sample_id",
          "status"
        ],
        "title": "SpeakerSeparationResponseModel"
      },
      "SpeakerTrack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "media_ref": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "speaker_name": {
            "type": "string",
            "title": "Speaker Name"
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Segments"
          }
        },
        "required": [
          "id",
          "media_ref",
          "speaker_name",
          "segments"
        ],
        "title": "SpeakerTrack"
      },
      "SpeechHistoryItemResponseModel": {
        "type": "object",
        "properties": {
          "history_item_id": {
            "description": "The ID of the history item.",
            "type": "string",
            "title": "History Item Id"
          },
          "request_id": {
            "description": "The ID of the request.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id"
          },
          "voice_id": {
            "description": "The ID of the voice used.",
            "type": "string",
            "title": "Voice Id"
          },
          "model_id": {
            "description": "The ID of the model.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "voice_name": {
            "description": "The name of the voice.",
            "type": "string",
            "title": "Voice Name"
          },
          "voice_category": {
            "description": "The category of the voice. Either 'premade', 'cloned', 'generated' or 'professional'.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "premade",
                  "cloned",
                  "generated",
                  "professional"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Category"
          },
          "text": {
            "description": "The text used to generate the audio item.",
            "type": "string",
            "title": "Text"
          },
          "date_unix": {
            "description": "Unix timestamp of when the item was created.",
            "type": "integer",
            "title": "Date Unix"
          },
          "character_count_change_from": {
            "description": "The character count change from.",
            "type": "integer",
            "title": "Character Count Change From"
          },
          "character_count_change_to": {
            "description": "The character count change to.",
            "type": "integer",
            "title": "Character Count Change To"
          },
          "content_type": {
            "description": "The content type of the generated item.",
            "type": "string",
            "title": "Content Type"
          },
          "state": {
            "description": "The state of the history item.",
            "type": "string",
            "enum": [
              "created",
              "deleted",
              "processing"
            ],
            "title": "State"
          },
          "settings": {
            "description": "The settings of the history item.",
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          },
          "feedback": {
            "description": "Feedback associated with the generated item. Returns null if no feedback has been provided.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "share_link_id": {
            "description": "The ID of the share link.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Link Id"
          },
          "source": {
            "description": "The source of the history item. Either TTS (text to speech), STS (speech to text), AN (audio native), Projects, Dubbing or PlayAPI.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "TTS",
                  "STS",
                  "Projects",
                  "AN",
                  "Dubbing",
                  "PlayAPI"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "alignments": {
            "description": "The alignments of the history item.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/HistoryAlignmentsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "example": {
          "character_count_change_from": 17189,
          "character_count_change_to": 17231,
          "content_type": "audio/mpeg",
          "date_unix": 1714650306,
          "history_item_id": "ja9xsmfGhxYcymxGcOGB",
          "model_id": "eleven_multilingual_v2",
          "request_id": "BF0BZg4IwLGBlaVjv9Im",
          "settings": {
            "similarity_boost": 0.5,
            "stability": 0.71,
            "style": 0,
            "use_speaker_boost": true
          },
          "source": "TTS",
          "state": "created",
          "text": "Hello, world!",
          "voice_category": "premade",
          "voice_id": "21m00Tcm4TlvDq8ikWAM",
          "voice_name": "Rachel"
        },
        "required": [
          "history_item_id",
          "voice_id",
          "voice_name",
          "text",
          "date_unix",
          "character_count_change_from",
          "character_count_change_to",
          "content_type",
          "state"
        ],
        "title": "SpeechHistoryItemResponseModel"
      },
      "SpeechToTextCharacterResponseModel": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The character that was transcribed.",
            "type": "string",
            "title": "Text"
          },
          "start": {
            "description": "The start time of the character in seconds.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start"
          },
          "end": {
            "description": "The end time of the character in seconds.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End"
          }
        },
        "example": {
          "char": "H",
          "end": 0.1,
          "start": 0
        },
        "required": [
          "text"
        ],
        "title": "SpeechToTextCharacterResponseModel"
      },
      "SpeechToTextChunkResponseModel": {
        "description": "Chunk-level detail of the transcription with timing information.",
        "type": "object",
        "properties": {
          "language_code": {
            "description": "The detected language code (e.g. 'eng' for English).",
            "type": "string",
            "title": "Language Code"
          },
          "language_probability": {
            "description": "The confidence score of the language detection (0 to 1).",
            "type": "number",
            "title": "Language Probability"
          },
          "text": {
            "description": "The raw text of the transcription.",
            "type": "string",
            "title": "Text"
          },
          "words": {
            "description": "List of words with their timing information.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpeechToTextWordResponseModel"
            },
            "title": "Words"
          },
          "additional_formats": {
            "description": "Requested additional formats of the transcript.",
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AdditionalFormatResponseModel"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Formats"
          }
        },
        "example": {
          "language_code": "en",
          "language_probability": 0.98,
          "text": "Hello world!",
          "words": [
            {
              "end": 0.5,
              "speaker_id": "speaker_1",
              "start": 0,
              "text": "Hello",
              "type": "word"
            },
            {
              "end": 0.5,
              "speaker_id": "speaker_1",
              "start": 0.5,
              "text": " ",
              "type": "spacing"
            },
            {
              "end": 1.2,
              "speaker_id": "speaker_1",
              "start": 0.5,
              "text": "world!",
              "type": "word"
            }
          ]
        },
        "required": [
          "language_code",
          "language_probability",
          "text",
          "words"
        ],
        "title": "SpeechToTextChunkResponseModel"
      },
      "SpeechToTextWordResponseModel": {
        "description": "Word-level detail of the transcription with timing information.",
        "type": "object",
        "properties": {
          "text": {
            "description": "The word or sound that was transcribed.",
            "type": "string",
            "title": "Text"
          },
          "start": {
            "description": "The start time of the word or sound in seconds.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start"
          },
          "end": {
            "description": "The end time of the word or sound in seconds.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End"
          },
          "type": {
            "description": "The type of the word or sound. 'audio_event' is used for non-word sounds like laughter or footsteps.",
            "type": "string",
            "enum": [
              "word",
              "spacing",
              "audio_event"
            ],
            "title": "Type"
          },
          "speaker_id": {
            "description": "Unique identifier for the speaker of this word.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaker Id"
          },
          "characters": {
            "description": "The characters that make up the word and their timing information.",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SpeechToTextCharacterResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Characters"
          }
        },
        "example": {
          "characters": [
            {
              "char": "H",
              "end": 0.1,
              "start": 0
            },
            {
              "char": "e",
              "end": 0.2,
              "start": 0.1
            },
            {
              "char": "l",
              "end": 0.3,
              "start": 0.2
            },
            {
              "char": "l",
              "end": 0.4,
              "start": 0.3
            },
            {
              "char": "o",
              "end": 0.5,
              "start": 0.4
            }
          ],
          "end": 0.5,
          "speaker_id": "speaker_1",
          "start": 0,
          "text": "Hello",
          "type": "word"
        },
        "required": [
          "text",
          "type"
        ],
        "title": "SpeechToTextWordResponseModel"
      },
      "SrtExportOptions": {
        "type": "object",
        "properties": {
          "max_characters_per_line": {
            "default": 50,
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Characters Per Line"
          },
          "include_speakers": {
            "type": "boolean",
            "default": false,
            "title": "Include Speakers"
          },
          "include_timestamps": {
            "type": "boolean",
            "default": true,
            "title": "Include Timestamps"
          },
          "format": {
            "type": "string",
            "const": "srt",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "default": 0.6,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "default": 5,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "default": 90,
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "required": [
          "format"
        ],
        "title": "SrtExportOptions"
      },
      "StartPVCVoiceTrainingResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the start PVC voice training request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "StartPVCVoiceTrainingResponseModel"
      },
      "StartSpeakerSeparationResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the start speaker seperation request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "StartSpeakerSeparationResponseModel"
      },
      "StreamingAudioChunkWithTimestampsResponseModel": {
        "type": "object",
        "properties": {
          "audio_base64": {
            "description": "Base64 encoded audio data",
            "type": "string",
            "title": "Audio Base64"
          },
          "alignment": {
            "description": "Timestamp information for each character in the original text",
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "normalized_alignment": {
            "description": "Timestamp information for each character in the normalized text",
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "example": {
          "alignment": {
            "character_end_times_seconds": [
              0.1,
              0.2
            ],
            "character_start_times_seconds": [
              0,
              0.1
            ],
            "characters": [
              "H",
              "e"
            ]
          },
          "audio_base64": "base64_encoded_audio_chunk",
          "normalized_alignment": {
            "character_end_times_seconds": [
              0.1,
              0.2
            ],
            "character_start_times_seconds": [
              0,
              0.1
            ],
            "characters": [
              "H",
              "e"
            ]
          }
        },
        "required": [
          "audio_base64"
        ],
        "title": "StreamingAudioChunkWithTimestampsResponseModel"
      },
      "SubscriptionExtrasResponseModel": {
        "type": "object",
        "properties": {
          "concurrency": {
            "description": "The concurrency of the user.",
            "type": "integer",
            "title": "Concurrency"
          },
          "convai_concurrency": {
            "description": "The Convai concurrency of the user.",
            "type": "integer",
            "title": "Convai Concurrency"
          },
          "convai_chars_per_minute": {
            "description": "The Convai characters per minute of the user.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Convai Chars Per Minute"
          },
          "convai_asr_chars_per_minute": {
            "description": "The Convai ASR characters per minute of the user.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Convai Asr Chars Per Minute"
          },
          "force_logging_disabled": {
            "description": "Whether the user's logging is disabled.",
            "type": "boolean",
            "title": "Force Logging Disabled"
          },
          "can_request_manual_pro_voice_verification": {
            "description": "Whether the user can request manual pro voice verification.",
            "type": "boolean",
            "title": "Can Request Manual Pro Voice Verification"
          },
          "can_bypass_voice_captcha": {
            "description": "Whether the user can bypass the voice captcha.",
            "type": "boolean",
            "title": "Can Bypass Voice Captcha"
          },
          "moderation": {
            "description": "The moderation status of the user.",
            "$ref": "#/components/schemas/ModerationStatusResponseModel"
          },
          "unused_characters_rolled_over_from_previous_period": {
            "description": "The unused characters rolled over from the previous period.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unused Characters Rolled Over From Previous Period"
          },
          "overused_characters_rolled_over_from_previous_period": {
            "description": "The overused characters rolled over from the previous period.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overused Characters Rolled Over From Previous Period"
          },
          "usage": {
            "description": "Data on how the subscription is being used.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubscriptionUsageResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "example": {
          "can_bypass_voice_captcha": true,
          "can_request_manual_pro_voice_verification": true,
          "concurrency": 10,
          "convai_asr_chars_per_minute": 1000,
          "convai_chars_per_minute": 1000,
          "convai_concurrency": 10,
          "force_logging_disabled": false,
          "moderation": {
            "enterprise_background_moderation_enabled": false,
            "enterprise_check_block_nogo_voice": false,
            "enterprise_check_nogo_voice": false,
            "is_in_probation": false,
            "never_live_moderate": false,
            "nogo_voice_similar_voice_upload_count": 0,
            "on_watchlist": false
          },
          "overused_characters_rolled_over_from_previous_period": 1000,
          "unused_characters_rolled_over_from_previous_period": 1000,
          "usage": {
            "actual_reported_credits": 1000,
            "manually_gifted_credits_quota": 1000,
            "manually_gifted_credits_used": 1000,
            "paid_usage_based_credits_used": 1000,
            "rollover_credits_quota": 1000,
            "rollover_credits_used": 1000,
            "subscription_cycle_credits_quota": 1000,
            "subscription_cycle_credits_used": 1000
          }
        },
        "required": [
          "concurrency",
          "convai_concurrency",
          "force_logging_disabled",
          "can_request_manual_pro_voice_verification",
          "can_bypass_voice_captcha",
          "moderation"
        ],
        "title": "SubscriptionExtrasResponseModel"
      },
      "SubscriptionResponseModel": {
        "type": "object",
        "properties": {
          "tier": {
            "description": "The tier of the user's subscription.",
            "type": "string",
            "title": "Tier"
          },
          "character_count": {
            "description": "The number of characters used by the user.",
            "type": "integer",
            "title": "Character Count"
          },
          "character_limit": {
            "description": "The maximum number of characters allowed in the current billing period.",
            "type": "integer",
            "title": "Character Limit"
          },
          "max_character_limit_extension": {
            "description": "Maximum number of characters that the character limit can be exceeded by. Managed by the workspace admin.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Character Limit Extension"
          },
          "can_extend_character_limit": {
            "description": "Whether the user can extend their character limit.",
            "type": "boolean",
            "title": "Can Extend Character Limit"
          },
          "allowed_to_extend_character_limit": {
            "description": "Whether the user is allowed to extend their character limit.",
            "type": "boolean",
            "title": "Allowed To Extend Character Limit"
          },
          "next_character_count_reset_unix": {
            "description": "The Unix timestamp of the next character count reset.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Character Count Reset Unix"
          },
          "voice_slots_used": {
            "description": "The number of voice slots used by the user.",
            "type": "integer",
            "title": "Voice Slots Used"
          },
          "professional_voice_slots_used": {
            "description": "The number of professional voice slots used by the workspace/user if single seat.",
            "type": "integer",
            "title": "Professional Voice Slots Used"
          },
          "voice_limit": {
            "description": "The maximum number of voice slots allowed for the user.",
            "type": "integer",
            "title": "Voice Limit"
          },
          "max_voice_add_edits": {
            "description": "The maximum number of voice add/edits allowed for the user.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Voice Add Edits"
          },
          "voice_add_edit_counter": {
            "description": "The number of voice add/edits used by the user.",
            "type": "integer",
            "title": "Voice Add Edit Counter"
          },
          "professional_voice_limit": {
            "description": "The maximum number of professional voices allowed for the user.",
            "type": "integer",
            "title": "Professional Voice Limit"
          },
          "can_extend_voice_limit": {
            "description": "Whether the user can extend their voice limit.",
            "type": "boolean",
            "title": "Can Extend Voice Limit"
          },
          "can_use_instant_voice_cloning": {
            "description": "Whether the user can use instant voice cloning.",
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning"
          },
          "can_use_professional_voice_cloning": {
            "description": "Whether the user can use professional voice cloning.",
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning"
          },
          "currency": {
            "description": "The currency of the user's subscription.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "usd",
                  "eur"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "status": {
            "description": "The status of the user's subscription.",
            "type": "string",
            "enum": [
              "trialing",
              "active",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "canceled",
              "unpaid",
              "free"
            ],
            "title": "Status"
          },
          "billing_period": {
            "description": "The billing period of the user's subscription.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Period"
          },
          "character_refresh_period": {
            "description": "The character refresh period of the user's subscription.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Refresh Period"
          }
        },
        "example": {
          "allowed_to_extend_character_limit": false,
          "billing_period": "monthly_period",
          "can_extend_character_limit": false,
          "can_extend_voice_limit": false,
          "can_use_instant_voice_cloning": true,
          "can_use_professional_voice_cloning": true,
          "character_count": 17231,
          "character_limit": 100000,
          "character_refresh_period": "monthly_period",
          "currency": "usd",
          "max_voice_add_edits": 230,
          "next_character_count_reset_unix": 1738356858,
          "professional_voice_limit": 1,
          "professional_voice_slots_used": 0,
          "status": "free",
          "tier": "trial",
          "voice_add_edit_counter": 212,
          "voice_limit": 120,
          "voice_slots_used": 1
        },
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "max_character_limit_extension",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "voice_slots_used",
          "professional_voice_slots_used",
          "voice_limit",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "status"
        ],
        "title": "SubscriptionResponseModel"
      },
      "SubscriptionUsageResponseModel": {
        "type": "object",
        "properties": {
          "rollover_credits_quota": {
            "description": "The rollover credits quota.",
            "type": "integer",
            "title": "Rollover Credits Quota"
          },
          "subscription_cycle_credits_quota": {
            "description": "The subscription cycle credits quota.",
            "type": "integer",
            "title": "Subscription Cycle Credits Quota"
          },
          "manually_gifted_credits_quota": {
            "description": "The manually gifted credits quota.",
            "type": "integer",
            "title": "Manually Gifted Credits Quota"
          },
          "rollover_credits_used": {
            "description": "The rollover credits used.",
            "type": "integer",
            "title": "Rollover Credits Used"
          },
          "subscription_cycle_credits_used": {
            "description": "The subscription cycle credits used.",
            "type": "integer",
            "title": "Subscription Cycle Credits Used"
          },
          "manually_gifted_credits_used": {
            "description": "The manually gifted credits used.",
            "type": "integer",
            "title": "Manually Gifted Credits Used"
          },
          "paid_usage_based_credits_used": {
            "description": "The paid usage based credits used.",
            "type": "integer",
            "title": "Paid Usage Based Credits Used"
          },
          "actual_reported_credits": {
            "description": "The actual reported credits.",
            "type": "integer",
            "title": "Actual Reported Credits"
          }
        },
        "example": {
          "actual_reported_credits": 1000,
          "manually_gifted_credits_quota": 1000,
          "manually_gifted_credits_used": 1000,
          "paid_usage_based_credits_used": 1000,
          "rollover_credits_quota": 1000,
          "rollover_credits_used": 1000,
          "subscription_cycle_credits_quota": 1000,
          "subscription_cycle_credits_used": 1000
        },
        "required": [
          "rollover_credits_quota",
          "subscription_cycle_credits_quota",
          "manually_gifted_credits_quota",
          "rollover_credits_used",
          "subscription_cycle_credits_used",
          "manually_gifted_credits_used",
          "paid_usage_based_credits_used",
          "actual_reported_credits"
        ],
        "title": "SubscriptionUsageResponseModel"
      },
      "SystemToolConfig-Input": {
        "description": "A system tool is a tool that is used to call a system method in the server",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "default": "",
            "title": "Id"
          },
          "type": {
            "description": "The type of tool",
            "type": "string",
            "default": "system",
            "const": "system",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "params": {
            "discriminator": {
              "propertyName": "system_tool_type",
              "mapping": {
                "end_call": "#/components/schemas/EndCallToolConfig",
                "language_detection": "#/components/schemas/LanguageDetectionToolConfig",
                "transfer_to_agent": "#/components/schemas/TransferToAgentToolConfig",
                "transfer_to_number": "#/components/schemas/TransferToNumberToolConfig"
              }
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/EndCallToolConfig"
              },
              {
                "$ref": "#/components/schemas/LanguageDetectionToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToAgentToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToNumberToolConfig"
              }
            ],
            "title": "Params"
          }
        },
        "example": {
          "type": "system"
        },
        "required": [
          "name",
          "description",
          "params"
        ],
        "title": "SystemToolConfig"
      },
      "SystemToolConfig-Output": {
        "description": "A system tool is a tool that is used to call a system method in the server",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "default": "",
            "title": "Id"
          },
          "type": {
            "description": "The type of tool",
            "type": "string",
            "default": "system",
            "const": "system",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "params": {
            "discriminator": {
              "propertyName": "system_tool_type",
              "mapping": {
                "end_call": "#/components/schemas/EndCallToolConfig",
                "language_detection": "#/components/schemas/LanguageDetectionToolConfig",
                "transfer_to_agent": "#/components/schemas/TransferToAgentToolConfig",
                "transfer_to_number": "#/components/schemas/TransferToNumberToolConfig"
              }
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/EndCallToolConfig"
              },
              {
                "$ref": "#/components/schemas/LanguageDetectionToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToAgentToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToNumberToolConfig"
              }
            ],
            "title": "Params"
          }
        },
        "example": {
          "type": "system"
        },
        "required": [
          "name",
          "description",
          "params"
        ],
        "title": "SystemToolConfig"
      },
      "TTSConversationalConfig": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The model to use for TTS",
            "default": "eleven_turbo_v2",
            "$ref": "#/components/schemas/TTSConversationalModel"
          },
          "voice_id": {
            "description": "The voice ID to use for TTS",
            "type": "string",
            "default": "cjVigY5qzO86Huf0OWal",
            "minLength": 0,
            "title": "Voice Id"
          },
          "agent_output_audio_format": {
            "description": "The audio format to use for TTS",
            "default": "pcm_16000",
            "$ref": "#/components/schemas/TTSOutputFormat"
          },
          "optimize_streaming_latency": {
            "description": "The optimization for streaming latency",
            "default": 3,
            "$ref": "#/components/schemas/TTSOptimizeStreamingLatency"
          },
          "stability": {
            "description": "The stability of generated speech",
            "type": "number",
            "default": 0.5,
            "maximum": 1,
            "minimum": 0,
            "title": "Stability"
          },
          "speed": {
            "description": "The speed of generated speech",
            "type": "number",
            "default": 1,
            "maximum": 1.2,
            "minimum": 0.7,
            "title": "Speed"
          },
          "similarity_boost": {
            "description": "The similarity boost for generated speech",
            "type": "number",
            "default": 0.8,
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Boost"
          },
          "pronunciation_dictionary_locators": {
            "description": "The pronunciation dictionary locators",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PydanticPronunciationDictionaryVersionLocator"
            },
            "title": "Pronunciation Dictionary Locators"
          }
        },
        "example": {
          "agent_output_audio_format": "pcm_16000",
          "model_id": "eleven_turbo_v2",
          "optimize_streaming_latency": 3,
          "pronunciation_dictionary_locators": [],
          "similarity_boost": 0.8,
          "speed": 1,
          "stability": 0.5,
          "voice_id": "cjVigY5qzO86Huf0OWal"
        },
        "title": "TTSConversationalConfig"
      },
      "TTSConversationalConfigOverride": {
        "type": "object",
        "properties": {
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id"
          }
        },
        "title": "TTSConversationalConfigOverride"
      },
      "TTSConversationalConfigOverrideConfig": {
        "type": "object",
        "properties": {
          "voice_id": {
            "description": "Whether to allow overriding the voice ID",
            "type": "boolean",
            "default": false,
            "title": "Voice Id"
          }
        },
        "example": {
          "voice_id": false
        },
        "title": "TTSConversationalConfigOverrideConfig"
      },
      "TTSConversationalModel": {
        "type": "string",
        "enum": [
          "eleven_turbo_v2",
          "eleven_turbo_v2_5",
          "eleven_flash_v2",
          "eleven_flash_v2_5"
        ],
        "title": "TTSConversationalModel"
      },
      "TTSOptimizeStreamingLatency": {
        "type": "integer",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "title": "TTSOptimizeStreamingLatency"
      },
      "TTSOutputFormat": {
        "type": "string",
        "enum": [
          "pcm_8000",
          "pcm_16000",
          "pcm_22050",
          "pcm_24000",
          "pcm_44100",
          "pcm_48000",
          "ulaw_8000"
        ],
        "title": "TTSOutputFormat"
      },
      "TaskDescriptionContentItem": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "const": "task_description",
            "title": "Kind"
          },
          "ref_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ref Id"
          }
        },
        "required": [
          "kind",
          "ref_id"
        ],
        "title": "TaskDescriptionContentItem"
      },
      "TelephonyProvider": {
        "type": "string",
        "enum": [
          "twilio",
          "sip_trunk"
        ],
        "title": "TelephonyProvider"
      },
      "TransferToAgentToolConfig": {
        "type": "object",
        "properties": {
          "system_tool_type": {
            "type": "string",
            "default": "transfer_to_agent",
            "const": "transfer_to_agent",
            "title": "System Tool Type"
          },
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentTransfer"
            },
            "title": "Transfers"
          }
        },
        "required": [
          "transfers"
        ],
        "title": "TransferToAgentToolConfig"
      },
      "TransferToNumberToolConfig": {
        "type": "object",
        "properties": {
          "system_tool_type": {
            "type": "string",
            "default": "transfer_to_number",
            "const": "transfer_to_number",
            "title": "System Tool Type"
          },
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumberTransfer"
            },
            "title": "Transfers"
          }
        },
        "required": [
          "transfers"
        ],
        "title": "TransferToNumberToolConfig"
      },
      "TurnConfig": {
        "type": "object",
        "properties": {
          "turn_timeout": {
            "description": "Maximum wait time for the user's reply before re-engaging the user",
            "type": "number",
            "default": 7,
            "title": "Turn Timeout"
          },
          "silence_end_call_timeout": {
            "description": "Maximum wait time since the user last spoke before terminating the call",
            "type": "number",
            "default": -1,
            "title": "Silence End Call Timeout"
          },
          "mode": {
            "description": "The mode of turn detection",
            "default": "turn",
            "$ref": "#/components/schemas/TurnMode"
          }
        },
        "example": {
          "mode": "turn",
          "silence_end_call_timeout": -1,
          "turn_timeout": 7
        },
        "title": "TurnConfig"
      },
      "TurnMode": {
        "type": "string",
        "enum": [
          "silence",
          "turn"
        ],
        "title": "TurnMode"
      },
      "TwilioOutboundCallResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "callSid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callsid"
          }
        },
        "required": [
          "success",
          "message",
          "callSid"
        ],
        "title": "TwilioOutboundCallResponse"
      },
      "TxtExportOptions": {
        "type": "object",
        "properties": {
          "max_characters_per_line": {
            "default": 100,
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Characters Per Line"
          },
          "include_speakers": {
            "type": "boolean",
            "default": true,
            "title": "Include Speakers"
          },
          "include_timestamps": {
            "type": "boolean",
            "default": true,
            "title": "Include Timestamps"
          },
          "format": {
            "type": "string",
            "const": "txt",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "required": [
          "format"
        ],
        "title": "TxtExportOptions"
      },
      "URLAvatar": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the avatar",
            "type": "string",
            "default": "url",
            "const": "url",
            "title": "Type"
          },
          "custom_url": {
            "description": "The custom URL of the avatar",
            "type": "string",
            "default": "",
            "title": "Custom Url"
          }
        },
        "title": "URLAvatar"
      },
      "UpdatePhoneNumberRequest": {
        "type": "object",
        "properties": {
          "agent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id"
          }
        },
        "title": "UpdatePhoneNumberRequest"
      },
      "UpdateWorkspaceMemberResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace member update request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "UpdateWorkspaceMemberResponseModel"
      },
      "UsageAggregationInterval": {
        "description": "The time interval over which to aggregate the usage data.",
        "type": "string",
        "enum": [
          "hour",
          "day",
          "week",
          "month",
          "cumulative"
        ],
        "title": "UsageAggregationInterval"
      },
      "UsageCharactersResponseModel": {
        "type": "object",
        "properties": {
          "time": {
            "description": "The time axis with unix timestamps for each day.",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Time"
          },
          "usage": {
            "description": "The usage of each breakdown type along the time axis.",
            "type": "object",
            "additionalProperties": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "title": "Usage"
          }
        },
        "example": {
          "time": [
            1738252091000,
            1739404800000
          ],
          "usage": {
            "All": [
              49,
              1053
            ]
          }
        },
        "required": [
          "time",
          "usage"
        ],
        "title": "UsageCharactersResponseModel"
      },
      "UserFeedback": {
        "type": "object",
        "properties": {
          "score": {
            "$ref": "#/components/schemas/UserFeedbackScore"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          }
        },
        "required": [
          "score",
          "time_in_call_secs"
        ],
        "title": "UserFeedback"
      },
      "UserFeedbackScore": {
        "type": "string",
        "enum": [
          "like",
          "dislike"
        ],
        "title": "UserFeedbackScore"
      },
      "UserResponseModel": {
        "type": "object",
        "properties": {
          "user_id": {
            "description": "The unique identifier of the user.",
            "type": "string",
            "title": "User Id"
          },
          "subscription": {
            "description": "Details of the user's subscription.",
            "$ref": "#/components/schemas/SubscriptionResponseModel"
          },
          "subscription_extras": {
            "description": "Optional additional details about the user's subscription.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubscriptionExtrasResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_new_user": {
            "description": "Whether the user is new.",
            "type": "boolean",
            "title": "Is New User"
          },
          "xi_api_key": {
            "description": "The API key of the user.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xi Api Key"
          },
          "can_use_delayed_payment_methods": {
            "description": "Whether the user can use delayed payment methods.",
            "type": "boolean",
            "title": "Can Use Delayed Payment Methods"
          },
          "is_onboarding_completed": {
            "description": "Whether the user's onboarding is completed.",
            "type": "boolean",
            "title": "Is Onboarding Completed"
          },
          "is_onboarding_checklist_completed": {
            "description": "Whether the user's onboarding checklist is completed.",
            "type": "boolean",
            "title": "Is Onboarding Checklist Completed"
          },
          "first_name": {
            "description": "First name of the user.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "is_api_key_hashed": {
            "description": "Whether the user's API key is hashed.",
            "type": "boolean",
            "default": false,
            "title": "Is Api Key Hashed"
          },
          "xi_api_key_preview": {
            "description": "The preview of the user's API key.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xi Api Key Preview"
          },
          "referral_link_code": {
            "description": "The referral link code of the user.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Referral Link Code"
          },
          "partnerstack_partner_default_link": {
            "description": "The Partnerstack partner default link of the user.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partnerstack Partner Default Link"
          }
        },
        "example": {
          "can_use_delayed_payment_methods": true,
          "first_name": "John",
          "is_api_key_hashed": false,
          "is_new_user": false,
          "is_onboarding_checklist_completed": true,
          "is_onboarding_completed": true,
          "subscription": {
            "allowed_to_extend_character_limit": false,
            "billing_period": "monthly_period",
            "can_extend_character_limit": false,
            "can_extend_voice_limit": false,
            "can_use_instant_voice_cloning": true,
            "can_use_professional_voice_cloning": true,
            "character_count": 17231,
            "character_limit": 100000,
            "character_refresh_period": "monthly_period",
            "currency": "usd",
            "max_voice_add_edits": 230,
            "next_character_count_reset_unix": 1738356858,
            "professional_voice_limit": 1,
            "professional_voice_slots_used": 0,
            "status": "free",
            "tier": "trial",
            "voice_add_edit_counter": 212,
            "voice_limit": 120,
            "voice_slots_used": 1
          },
          "subscription_extras": {
            "can_bypass_voice_captcha": true,
            "can_request_manual_pro_voice_verification": true,
            "concurrency": 10,
            "convai_asr_chars_per_minute": 1000,
            "convai_chars_per_minute": 1000,
            "convai_concurrency": 10,
            "force_logging_disabled": false,
            "moderation": {
              "enterprise_background_moderation_enabled": false,
              "enterprise_check_block_nogo_voice": false,
              "enterprise_check_nogo_voice": false,
              "is_in_probation": false,
              "never_live_moderate": false,
              "nogo_voice_similar_voice_upload_count": 0,
              "on_watchlist": false
            },
            "overused_characters_rolled_over_from_previous_period": 1000,
            "unused_characters_rolled_over_from_previous_period": 1000,
            "usage": {
              "actual_reported_credits": 1000,
              "manually_gifted_credits_quota": 1000,
              "manually_gifted_credits_used": 1000,
              "paid_usage_based_credits_used": 1000,
              "rollover_credits_quota": 1000,
              "rollover_credits_used": 1000,
              "subscription_cycle_credits_quota": 1000,
              "subscription_cycle_credits_used": 1000
            }
          },
          "user_id": "1234567890",
          "xi_api_key": "8so27l7327189x0h939ekx293380l920"
        },
        "required": [
          "user_id",
          "subscription",
          "is_new_user",
          "can_use_delayed_payment_methods",
          "is_onboarding_completed",
          "is_onboarding_checklist_completed"
        ],
        "title": "UserResponseModel"
      },
      "UtteranceResponseModel": {
        "type": "object",
        "properties": {
          "start": {
            "description": "The start time of the utterance in seconds.",
            "type": "number",
            "title": "Start"
          },
          "end": {
            "description": "The end time of the utterance in seconds.",
            "type": "number",
            "title": "End"
          }
        },
        "example": {
          "end": 1,
          "start": 0
        },
        "required": [
          "start",
          "end"
        ],
        "title": "UtteranceResponseModel"
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerificationAttemptResponseModel": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text of the verification attempt.",
            "type": "string",
            "title": "Text"
          },
          "date_unix": {
            "description": "The date of the verification attempt in Unix time.",
            "type": "integer",
            "title": "Date Unix"
          },
          "accepted": {
            "description": "Whether the verification attempt was accepted.",
            "type": "boolean",
            "title": "Accepted"
          },
          "similarity": {
            "description": "The similarity of the verification attempt.",
            "type": "number",
            "title": "Similarity"
          },
          "levenshtein_distance": {
            "description": "The Levenshtein distance of the verification attempt.",
            "type": "number",
            "title": "Levenshtein Distance"
          },
          "recording": {
            "description": "The recording of the verification attempt.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/RecordingResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "example": {
          "accepted": true,
          "date_unix": 1714204800,
          "levenshtein_distance": 2,
          "recording": {
            "mime_type": "audio/mpeg",
            "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
            "size_bytes": 1000000,
            "transcription": "Hello, how are you?",
            "upload_date_unix": 1714204800
          },
          "similarity": 0.95,
          "text": "Hello, how are you?"
        },
        "required": [
          "text",
          "date_unix",
          "accepted",
          "similarity",
          "levenshtein_distance"
        ],
        "title": "VerificationAttemptResponseModel"
      },
      "VerifiedVoiceLanguageResponseModel": {
        "type": "object",
        "properties": {
          "language": {
            "description": "The language of the voice.",
            "type": "string",
            "title": "Language"
          },
          "model_id": {
            "description": "The voice's model ID.",
            "type": "string",
            "title": "Model Id"
          },
          "accent": {
            "description": "The voice's accent, if applicable.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent"
          },
          "locale": {
            "description": "The voice's locale, if applicable.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale"
          },
          "preview_url": {
            "description": "The voice's preview URL, if applicable.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          }
        },
        "example": {
          "accent": "American",
          "language": "en",
          "model_id": "eleven_turbo_v2_5"
        },
        "required": [
          "language",
          "model_id"
        ],
        "title": "VerifiedVoiceLanguageResponseModel"
      },
      "VerifyPVCVoiceCaptchaResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the verify PVC captcha request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "VerifyPVCVoiceCaptchaResponseModel"
      },
      "VoiceGenerationParameterOptionResponseModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "required": [
          "name",
          "code"
        ],
        "title": "VoiceGenerationParameterOptionResponseModel"
      },
      "VoiceGenerationParameterResponseModel": {
        "type": "object",
        "properties": {
          "genders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "title": "Genders"
          },
          "accents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "title": "Accents"
          },
          "ages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "title": "Ages"
          },
          "minimum_characters": {
            "type": "integer",
            "title": "Minimum Characters"
          },
          "maximum_characters": {
            "type": "integer",
            "title": "Maximum Characters"
          },
          "minimum_accent_strength": {
            "type": "number",
            "title": "Minimum Accent Strength"
          },
          "maximum_accent_strength": {
            "type": "number",
            "title": "Maximum Accent Strength"
          }
        },
        "required": [
          "genders",
          "accents",
          "ages",
          "minimum_characters",
          "maximum_characters",
          "minimum_accent_strength",
          "maximum_accent_strength"
        ],
        "title": "VoiceGenerationParameterResponseModel"
      },
      "VoicePreviewResponseModel": {
        "type": "object",
        "properties": {
          "audio_base_64": {
            "type": "string",
            "title": "Audio Base 64"
          },
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id"
          },
          "media_type": {
            "type": "string",
            "title": "Media Type"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          }
        },
        "required": [
          "audio_base_64",
          "generated_voice_id",
          "media_type",
          "duration_secs"
        ],
        "title": "VoicePreviewResponseModel"
      },
      "VoicePreviewsRequestModel": {
        "type": "object",
        "properties": {
          "voice_description": {
            "description": "Description to use for the created voice.",
            "type": "string",
            "examples": [
              "A sassy squeaky mouse"
            ],
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description"
          },
          "text": {
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 100
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ],
            "title": "Text"
          },
          "auto_generate_text": {
            "description": "Whether to automatically generate a text suitable for the voice description.",
            "type": "boolean",
            "default": false,
            "title": "Auto Generate Text"
          },
          "loudness": {
            "description": "Controls the volume level of the generated voice. -1 is quietest, 1 is loudest, 0 corresponds to roughly -24 LUFS.",
            "type": "number",
            "default": 0.5,
            "examples": [
              0.5
            ],
            "maximum": 1,
            "minimum": -1,
            "title": "Loudness"
          },
          "quality": {
            "description": "Higher quality results in better voice output but less variety.",
            "type": "number",
            "default": 0.9,
            "examples": [
              0.9
            ],
            "maximum": 1,
            "minimum": -1,
            "title": "Quality"
          },
          "seed": {
            "description": "Random number that controls the voice generation. Same seed with same inputs produces same voice.",
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "examples": [
              11
            ],
            "title": "Seed"
          },
          "guidance_scale": {
            "description": "Controls how closely the AI follows the prompt. Lower numbers give the AI more freedom to be creative, while higher numbers force it to stick more to the prompt. High numbers can cause voice to sound artificial or robotic. We recommend to use longer, more detailed prompts at lower Guidance Scale.",
            "type": "number",
            "default": 5,
            "examples": [
              5
            ],
            "maximum": 100,
            "minimum": 0,
            "title": "Guidance Scale"
          }
        },
        "required": [
          "voice_description",
          "text"
        ],
        "title": "VoicePreviewsRequestModel"
      },
      "VoicePreviewsResponseModel": {
        "type": "object",
        "properties": {
          "previews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoicePreviewResponseModel"
            },
            "title": "Previews"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "required": [
          "previews",
          "text"
        ],
        "title": "VoicePreviewsResponseModel"
      },
      "VoiceResponseModel": {
        "type": "object",
        "properties": {
          "voice_id": {
            "description": "The ID of the voice.",
            "type": "string",
            "title": "Voice Id"
          },
          "name": {
            "description": "The name of the voice.",
            "type": "string",
            "title": "Name"
          },
          "samples": {
            "description": "List of samples associated with the voice.",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SampleResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Samples"
          },
          "category": {
            "description": "The category of the voice.",
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category"
          },
          "fine_tuning": {
            "description": "Fine-tuning information for the voice.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/FineTuningResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "labels": {
            "description": "Labels associated with the voice.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Labels"
          },
          "description": {
            "description": "The description of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "preview_url": {
            "description": "The preview URL of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          },
          "available_for_tiers": {
            "description": "The tiers the voice is available for.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Available For Tiers"
          },
          "settings": {
            "description": "The settings of the voice.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "sharing": {
            "description": "The sharing information of the voice.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "high_quality_base_model_ids": {
            "description": "The base model IDs for high-quality voices.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "High Quality Base Model Ids"
          },
          "verified_languages": {
            "description": "The verified languages of the voice.",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerifiedVoiceLanguageResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified Languages"
          },
          "safety_control": {
            "description": "The safety controls of the voice.",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "NONE",
                  "BAN",
                  "CAPTCHA",
                  "CAPTCHA_AND_MODERATION",
                  "ENTERPRISE_BAN",
                  "ENTERPRISE_CAPTCHA"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Control"
          },
          "voice_verification": {
            "description": "The voice verification of the voice.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceVerificationResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "permission_on_resource": {
            "description": "The permission on the resource of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource"
          },
          "is_owner": {
            "description": "Whether the voice is owned by the user.",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Owner"
          },
          "is_legacy": {
            "description": "Whether the voice is legacy.",
            "type": "boolean",
            "default": false,
            "title": "Is Legacy"
          },
          "is_mixed": {
            "description": "Whether the voice is mixed.",
            "type": "boolean",
            "default": false,
            "title": "Is Mixed"
          },
          "created_at_unix": {
            "description": "The creation time of the voice in Unix time.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          }
        },
        "example": {
          "available_for_tiers": [
            "creator",
            "enterprise"
          ],
          "category": "professional",
          "description": "A warm, expressive voice with a touch of humor.",
          "fine_tuning": {
            "is_allowed_to_fine_tune": true,
            "manual_verification_requested": false,
            "state": {
              "eleven_multilingual_v2": "fine_tuned"
            },
            "verification_attempts_count": 2,
            "verification_failures": []
          },
          "high_quality_base_model_ids": [
            "eleven_v2_flash",
            "eleven_flash_v2",
            "eleven_turbo_v2_5",
            "eleven_multilingual_v2",
            "eleven_v2_5_flash",
            "eleven_flash_v2_5",
            "eleven_turbo_v2"
          ],
          "is_legacy": false,
          "is_mixed": false,
          "is_owner": false,
          "labels": {
            "accent": "American",
            "age": "middle-aged",
            "description": "expressive",
            "gender": "female",
            "use_case": "social media"
          },
          "name": "Rachel",
          "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
          "settings": {
            "similarity_boost": 1,
            "speed": 1,
            "stability": 1,
            "style": 0,
            "use_speaker_boost": true
          },
          "sharing": {
            "category": "professional",
            "cloned_by_count": 50,
            "date_unix": 1714204800,
            "description": "A female voice with a soft and friendly tone.",
            "disable_at_unix": 1714204800,
            "enabled_in_library": true,
            "featured": true,
            "financial_rewards_enabled": true,
            "free_users_allowed": true,
            "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "labels": {
              "accent": "American",
              "gender": "female"
            },
            "liked_by_count": 100,
            "live_moderation_enabled": true,
            "moderation_check": {
              "captcha_checks": [
                0.95,
                0.98
              ],
              "captcha_ids": [
                "captcha1",
                "captcha2"
              ],
              "date_checked_unix": 1714204800,
              "description_check": true,
              "description_value": "A female voice with a soft and friendly tone.",
              "name_check": true,
              "name_value": "Rachel",
              "sample_checks": [
                0.95,
                0.98
              ],
              "sample_ids": [
                "sample1",
                "sample2"
              ]
            },
            "name": "Rachel",
            "notice_period": 30,
            "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "rate": 0.05,
            "reader_app_enabled": true,
            "reader_restricted_on": [
              {
                "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
                "resource_type": "read"
              }
            ],
            "review_status": "allowed",
            "status": "enabled",
            "voice_mixing_allowed": false,
            "whitelisted_emails": [
              "example@example.com"
            ]
          },
          "verified_languages": {
            "accent": "American",
            "language": "en",
            "model_id": "eleven_turbo_v2_5"
          },
          "voice_id": "21m00Tcm4TlvDq8ikWAM",
          "voice_verification": {
            "is_verified": true,
            "language": "en",
            "requires_verification": false,
            "verification_attempts": [
              {
                "accepted": true,
                "date_unix": 1714204800,
                "levenshtein_distance": 2,
                "recording": {
                  "mime_type": "audio/mpeg",
                  "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                  "size_bytes": 1000000,
                  "transcription": "Hello, how are you?",
                  "upload_date_unix": 1714204800
                },
                "similarity": 0.95,
                "text": "Hello, how are you?"
              }
            ],
            "verification_attempts_count": 0,
            "verification_failures": []
          }
        },
        "required": [
          "voice_id",
          "name",
          "category",
          "labels",
          "available_for_tiers",
          "high_quality_base_model_ids"
        ],
        "title": "VoiceResponseModel"
      },
      "VoiceSamplePreviewResponseModel": {
        "type": "object",
        "properties": {
          "audio_base_64": {
            "description": "The base64 encoded audio.",
            "type": "string",
            "title": "Audio Base 64"
          },
          "voice_id": {
            "description": "The ID of the voice.",
            "type": "string",
            "title": "Voice Id"
          },
          "sample_id": {
            "description": "The ID of the sample.",
            "type": "string",
            "title": "Sample Id"
          },
          "media_type": {
            "description": "The media type of the audio.",
            "type": "string",
            "title": "Media Type"
          },
          "duration_secs": {
            "description": "The duration of the audio in seconds.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Secs"
          }
        },
        "example": {
          "audio_base_64": "audio_base_64",
          "duration_secs": 5,
          "media_type": "audio/mpeg",
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "voice_id": "DCwhRBWXzGAHq8TQ4Fs18"
        },
        "required": [
          "audio_base_64",
          "voice_id",
          "sample_id",
          "media_type"
        ],
        "title": "VoiceSamplePreviewResponseModel"
      },
      "VoiceSampleVisualWaveformResponseModel": {
        "type": "object",
        "properties": {
          "sample_id": {
            "description": "The ID of the sample.",
            "type": "string",
            "title": "Sample Id"
          },
          "visual_waveform": {
            "description": "The visual waveform of the sample, represented as a list of floats.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Visual Waveform"
          }
        },
        "example": {
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "visual_waveform": [
            0.1,
            0.2,
            0.3,
            0.4,
            0.5
          ]
        },
        "required": [
          "sample_id",
          "visual_waveform"
        ],
        "title": "VoiceSampleVisualWaveformResponseModel"
      },
      "VoiceSettingsResponseModel": {
        "type": "object",
        "properties": {
          "stability": {
            "description": "Determines how stable the voice is and the randomness between each generation. Lower values introduce broader emotional range for the voice. Higher values can result in a monotonous voice with limited emotion.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability"
          },
          "similarity_boost": {
            "description": "Determines how closely the AI should adhere to the original voice when attempting to replicate it.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Boost"
          },
          "style": {
            "description": "Determines the style exaggeration of the voice. This setting attempts to amplify the style of the original speaker. It does consume additional computational resources and might increase latency if set to anything other than 0.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style"
          },
          "use_speaker_boost": {
            "description": "This setting boosts the similarity to the original speaker. Using this setting requires a slightly higher computational load, which in turn increases latency.",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Speaker Boost"
          },
          "speed": {
            "description": "Controls the speed of the generated speech. Values range from 0.7 to 1.2, with 1.0 being the default speed. Lower values create slower, more deliberate speech while higher values produce faster-paced speech. Extreme values can impact the quality of the generated speech.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed"
          }
        },
        "example": {
          "similarity_boost": 1,
          "speed": 1,
          "stability": 1,
          "style": 0,
          "use_speaker_boost": true
        },
        "title": "VoiceSettingsResponseModel"
      },
      "VoiceSharingModerationCheckResponseModel": {
        "type": "object",
        "properties": {
          "date_checked_unix": {
            "description": "The date the moderation check was made in Unix time.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Checked Unix"
          },
          "name_value": {
            "description": "The name value of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Value"
          },
          "name_check": {
            "description": "Whether the name check was successful.",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Check"
          },
          "description_value": {
            "description": "The description value of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Value"
          },
          "description_check": {
            "description": "Whether the description check was successful.",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Check"
          },
          "sample_ids": {
            "description": "A list of sample IDs.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Ids"
          },
          "sample_checks": {
            "description": "A list of sample checks.",
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Checks"
          },
          "captcha_ids": {
            "description": "A list of captcha IDs.",
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Ids"
          },
          "captcha_checks": {
            "description": "A list of CAPTCHA check values.",
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Checks"
          }
        },
        "example": {
          "captcha_checks": [
            0.95,
            0.98
          ],
          "captcha_ids": [
            "captcha1",
            "captcha2"
          ],
          "date_checked_unix": 1714204800,
          "description_check": true,
          "description_value": "A female voice with a soft and friendly tone.",
          "name_check": true,
          "name_value": "Rachel",
          "sample_checks": [
            0.95,
            0.98
          ],
          "sample_ids": [
            "sample1",
            "sample2"
          ]
        },
        "title": "VoiceSharingModerationCheckResponseModel"
      },
      "VoiceSharingResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the voice sharing.",
            "type": "string",
            "enum": [
              "enabled",
              "disabled",
              "copied",
              "copied_disabled"
            ],
            "title": "Status"
          },
          "history_item_sample_id": {
            "description": "The sample ID of the history item.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "History Item Sample Id"
          },
          "date_unix": {
            "description": "The date of the voice sharing in Unix time.",
            "type": "integer",
            "title": "Date Unix"
          },
          "whitelisted_emails": {
            "description": "A list of whitelisted emails.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Whitelisted Emails"
          },
          "public_owner_id": {
            "description": "The ID of the public owner.",
            "type": "string",
            "title": "Public Owner Id"
          },
          "original_voice_id": {
            "description": "The ID of the original voice.",
            "type": "string",
            "title": "Original Voice Id"
          },
          "financial_rewards_enabled": {
            "description": "Whether financial rewards are enabled.",
            "type": "boolean",
            "title": "Financial Rewards Enabled"
          },
          "free_users_allowed": {
            "description": "Whether free users are allowed.",
            "type": "boolean",
            "title": "Free Users Allowed"
          },
          "live_moderation_enabled": {
            "description": "Whether live moderation is enabled.",
            "type": "boolean",
            "title": "Live Moderation Enabled"
          },
          "rate": {
            "description": "The rate of the voice sharing.",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate"
          },
          "notice_period": {
            "description": "The notice period of the voice sharing.",
            "type": "integer",
            "title": "Notice Period"
          },
          "disable_at_unix": {
            "description": "The date of the voice sharing in Unix time.",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable At Unix"
          },
          "voice_mixing_allowed": {
            "description": "Whether voice mixing is allowed.",
            "type": "boolean",
            "title": "Voice Mixing Allowed"
          },
          "featured": {
            "description": "Whether the voice is featured.",
            "type": "boolean",
            "title": "Featured"
          },
          "category": {
            "description": "The category of the voice.",
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category"
          },
          "reader_app_enabled": {
            "description": "Whether the reader app is enabled.",
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader App Enabled"
          },
          "image_url": {
            "description": "The image URL of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "ban_reason": {
            "description": "The ban reason of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ban Reason"
          },
          "liked_by_count": {
            "description": "The number of likes on the voice.",
            "type": "integer",
            "title": "Liked By Count"
          },
          "cloned_by_count": {
            "description": "The number of clones on the voice.",
            "type": "integer",
            "title": "Cloned By Count"
          },
          "name": {
            "description": "The name of the voice.",
            "type": "string",
            "title": "Name"
          },
          "description": {
            "description": "The description of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "labels": {
            "description": "The labels of the voice.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Labels"
          },
          "review_status": {
            "description": "The review status of the voice.",
            "type": "string",
            "enum": [
              "not_requested",
              "pending",
              "declined",
              "allowed",
              "allowed_with_changes"
            ],
            "title": "Review Status"
          },
          "review_message": {
            "description": "The review message of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Message"
          },
          "enabled_in_library": {
            "description": "Whether the voice is enabled in the library.",
            "type": "boolean",
            "title": "Enabled In Library"
          },
          "instagram_username": {
            "description": "The Instagram username of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Username"
          },
          "twitter_username": {
            "description": "The Twitter/X username of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Username"
          },
          "youtube_username": {
            "description": "The YouTube username of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Username"
          },
          "tiktok_username": {
            "description": "The TikTok username of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tiktok Username"
          },
          "moderation_check": {
            "description": "The moderation check of the voice.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingModerationCheckResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "reader_restricted_on": {
            "description": "The reader restricted on of the voice.",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReaderResourceResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader Restricted On"
          }
        },
        "example": {
          "category": "professional",
          "cloned_by_count": 50,
          "date_unix": 1714204800,
          "description": "A female voice with a soft and friendly tone.",
          "disable_at_unix": 1714204800,
          "enabled_in_library": true,
          "featured": true,
          "financial_rewards_enabled": true,
          "free_users_allowed": true,
          "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "labels": {
            "accent": "American",
            "gender": "female"
          },
          "liked_by_count": 100,
          "live_moderation_enabled": true,
          "moderation_check": {
            "captcha_checks": [
              0.95,
              0.98
            ],
            "captcha_ids": [
              "captcha1",
              "captcha2"
            ],
            "date_checked_unix": 1714204800,
            "description_check": true,
            "description_value": "A female voice with a soft and friendly tone.",
            "name_check": true,
            "name_value": "Rachel",
            "sample_checks": [
              0.95,
              0.98
            ],
            "sample_ids": [
              "sample1",
              "sample2"
            ]
          },
          "name": "Rachel",
          "notice_period": 30,
          "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "rate": 0.05,
          "reader_app_enabled": true,
          "reader_restricted_on": [
            {
              "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
              "resource_type": "read"
            }
          ],
          "review_status": "allowed",
          "status": "enabled",
          "voice_mixing_allowed": false,
          "whitelisted_emails": [
            "example@example.com"
          ]
        },
        "required": [
          "status",
          "date_unix",
          "whitelisted_emails",
          "public_owner_id",
          "original_voice_id",
          "financial_rewards_enabled",
          "free_users_allowed",
          "live_moderation_enabled",
          "notice_period",
          "voice_mixing_allowed",
          "featured",
          "category",
          "liked_by_count",
          "cloned_by_count",
          "name",
          "labels",
          "review_status",
          "enabled_in_library"
        ],
        "title": "VoiceSharingResponseModel"
      },
      "VoiceVerificationResponseModel": {
        "type": "object",
        "properties": {
          "requires_verification": {
            "description": "Whether the voice requires verification.",
            "type": "boolean",
            "title": "Requires Verification"
          },
          "is_verified": {
            "description": "Whether the voice has been verified.",
            "type": "boolean",
            "title": "Is Verified"
          },
          "verification_failures": {
            "description": "List of verification failures.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Verification Failures"
          },
          "verification_attempts_count": {
            "description": "The number of verification attempts.",
            "type": "integer",
            "title": "Verification Attempts Count"
          },
          "language": {
            "description": "The language of the voice.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "verification_attempts": {
            "description": "Number of times a verification was attempted.",
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerificationAttemptResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Attempts"
          }
        },
        "example": {
          "is_verified": true,
          "language": "en",
          "requires_verification": false,
          "verification_attempts": [
            {
              "accepted": true,
              "date_unix": 1714204800,
              "levenshtein_distance": 2,
              "recording": {
                "mime_type": "audio/mpeg",
                "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                "size_bytes": 1000000,
                "transcription": "Hello, how are you?",
                "upload_date_unix": 1714204800
              },
              "similarity": 0.95,
              "text": "Hello, how are you?"
            }
          ],
          "verification_attempts_count": 0,
          "verification_failures": []
        },
        "required": [
          "requires_verification",
          "is_verified",
          "verification_failures",
          "verification_attempts_count"
        ],
        "title": "VoiceVerificationResponseModel"
      },
      "WebhookToolApiSchemaConfig-Input": {
        "description": "Configuration for a webhook that will be called by an LLM tool.",
        "type": "object",
        "properties": {
          "url": {
            "description": "The URL that the webhook will be sent to. May include path parameters, e.g. https://example.com/agents/{agent_id}",
            "type": "string",
            "title": "Url"
          },
          "method": {
            "description": "The HTTP method to use for the webhook",
            "type": "string",
            "default": "GET",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "title": "Method"
          },
          "path_params_schema": {
            "description": "Schema for path parameters, if any. The keys should match the placeholders in the URL.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "title": "Path Params Schema"
          },
          "query_params_schema": {
            "description": "Schema for any query params, if any. These will be added to end of the URL as query params. Note: properties in a query param must all be literal types",
            "anyOf": [
              {
                "$ref": "#/components/schemas/QueryParamsJsonSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "request_body_schema": {
            "description": "Schema for the body parameters, if any. Used for POST/PATCH requests. The schema should be an object which will be sent as the json body",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "request_headers": {
            "description": "Headers that should be included in the request",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "title": "Request Headers"
          }
        },
        "example": {
          "method": "GET",
          "path_params_schema": {
            "agent_id": {
              "type": "string"
            }
          },
          "query_params_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_body_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_headers": {
            "Authorization": "Bearer {api_key}"
          },
          "url": "https://example.com/agents/{agent_id}"
        },
        "required": [
          "url"
        ],
        "title": "WebhookToolApiSchemaConfig"
      },
      "WebhookToolApiSchemaConfig-Output": {
        "description": "Configuration for a webhook that will be called by an LLM tool.",
        "type": "object",
        "properties": {
          "url": {
            "description": "The URL that the webhook will be sent to. May include path parameters, e.g. https://example.com/agents/{agent_id}",
            "type": "string",
            "title": "Url"
          },
          "method": {
            "description": "The HTTP method to use for the webhook",
            "type": "string",
            "default": "GET",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "title": "Method"
          },
          "path_params_schema": {
            "description": "Schema for path parameters, if any. The keys should match the placeholders in the URL.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "title": "Path Params Schema"
          },
          "query_params_schema": {
            "description": "Schema for any query params, if any. These will be added to end of the URL as query params. Note: properties in a query param must all be literal types",
            "anyOf": [
              {
                "$ref": "#/components/schemas/QueryParamsJsonSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "request_body_schema": {
            "description": "Schema for the body parameters, if any. Used for POST/PATCH requests. The schema should be an object which will be sent as the json body",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "request_headers": {
            "description": "Headers that should be included in the request",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "title": "Request Headers"
          }
        },
        "example": {
          "method": "GET",
          "path_params_schema": {
            "agent_id": {
              "type": "string"
            }
          },
          "query_params_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_body_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_headers": {
            "Authorization": "Bearer {api_key}"
          },
          "url": "https://example.com/agents/{agent_id}"
        },
        "required": [
          "url"
        ],
        "title": "WebhookToolApiSchemaConfig"
      },
      "WebhookToolConfig-Input": {
        "description": "A webhook tool is a tool that calls an external webhook from our server",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "default": "",
            "title": "Id"
          },
          "type": {
            "description": "The type of tool",
            "type": "string",
            "default": "webhook",
            "const": "webhook",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "api_schema": {
            "description": "The schema for the outgoing webhoook, including parameters and URL specification",
            "$ref": "#/components/schemas/WebhookToolApiSchemaConfig-Input"
          },
          "dynamic_variables": {
            "description": "Configuration for dynamic variables",
            "$ref": "#/components/schemas/DynamicVariablesConfig"
          }
        },
        "example": {
          "type": "webhook"
        },
        "required": [
          "name",
          "description",
          "api_schema"
        ],
        "title": "WebhookToolConfig"
      },
      "WebhookToolConfig-Output": {
        "description": "A webhook tool is a tool that calls an external webhook from our server",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "default": "",
            "title": "Id"
          },
          "type": {
            "description": "The type of tool",
            "type": "string",
            "default": "webhook",
            "const": "webhook",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "api_schema": {
            "description": "The schema for the outgoing webhoook, including parameters and URL specification",
            "$ref": "#/components/schemas/WebhookToolApiSchemaConfig-Output"
          },
          "dynamic_variables": {
            "description": "Configuration for dynamic variables",
            "$ref": "#/components/schemas/DynamicVariablesConfig"
          }
        },
        "example": {
          "type": "webhook"
        },
        "required": [
          "name",
          "description",
          "api_schema"
        ],
        "title": "WebhookToolConfig"
      },
      "WidgetConfig": {
        "type": "object",
        "properties": {
          "variant": {
            "description": "The variant of the widget",
            "default": "full",
            "$ref": "#/components/schemas/EmbedVariant"
          },
          "expandable": {
            "description": "Whether the widget is expandable",
            "default": "never",
            "$ref": "#/components/schemas/WidgetExpandable"
          },
          "avatar": {
            "description": "The avatar of the widget",
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar"
          },
          "feedback_mode": {
            "description": "The feedback mode of the widget",
            "default": "none",
            "$ref": "#/components/schemas/WidgetFeedbackMode"
          },
          "bg_color": {
            "description": "The background color of the widget",
            "type": "string",
            "default": "#ffffff",
            "title": "Bg Color"
          },
          "text_color": {
            "description": "The text color of the widget",
            "type": "string",
            "default": "#000000",
            "title": "Text Color"
          },
          "btn_color": {
            "description": "The button color of the widget",
            "type": "string",
            "default": "#000000",
            "title": "Btn Color"
          },
          "btn_text_color": {
            "description": "The button text color of the widget",
            "type": "string",
            "default": "#ffffff",
            "title": "Btn Text Color"
          },
          "border_color": {
            "description": "The border color of the widget",
            "type": "string",
            "default": "#e1e1e1",
            "title": "Border Color"
          },
          "focus_color": {
            "description": "The focus color of the widget",
            "type": "string",
            "default": "#000000",
            "title": "Focus Color"
          },
          "border_radius": {
            "description": "The border radius of the widget",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Border Radius"
          },
          "btn_radius": {
            "description": "The button radius of the widget",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Btn Radius"
          },
          "action_text": {
            "description": "The action text of the widget",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Text"
          },
          "start_call_text": {
            "description": "The start call text of the widget",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call Text"
          },
          "end_call_text": {
            "description": "The end call text of the widget",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call Text"
          },
          "expand_text": {
            "description": "The expand text of the widget",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand Text"
          },
          "listening_text": {
            "description": "The text to display when the agent is listening",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Text"
          },
          "speaking_text": {
            "description": "The text to display when the agent is speaking",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Text"
          },
          "shareable_page_text": {
            "description": "The text to display when sharing",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Page Text"
          },
          "shareable_page_show_terms": {
            "description": "Whether to show terms and conditions on the shareable page",
            "type": "boolean",
            "default": true,
            "title": "Shareable Page Show Terms"
          },
          "terms_text": {
            "description": "The text to display for terms and conditions",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Text"
          },
          "terms_html": {
            "description": "The HTML to display for terms and conditions",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Html"
          },
          "terms_key": {
            "description": "The key to display for terms and conditions",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Key"
          },
          "show_avatar_when_collapsed": {
            "description": "Whether to show the avatar when the widget is collapsed",
            "default": false,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Avatar When Collapsed"
          },
          "disable_banner": {
            "description": "Whether to disable the banner",
            "type": "boolean",
            "default": false,
            "title": "Disable Banner"
          },
          "mic_muting_enabled": {
            "description": "Whether to enable mic muting",
            "type": "boolean",
            "default": false,
            "title": "Mic Muting Enabled"
          },
          "language_selector": {
            "description": "Whether to show the language selector",
            "type": "boolean",
            "default": false,
            "title": "Language Selector"
          },
          "custom_avatar_path": {
            "description": "The custom avatar path",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Avatar Path"
          }
        },
        "example": {
          "custom_avatar_path": "https://example.com/avatar.png",
          "language_selector": false
        },
        "title": "WidgetConfig"
      },
      "WidgetConfigResponseModel": {
        "type": "object",
        "properties": {
          "variant": {
            "description": "The variant of the widget",
            "default": "full",
            "$ref": "#/components/schemas/EmbedVariant"
          },
          "expandable": {
            "description": "Whether the widget is expandable",
            "default": "never",
            "$ref": "#/components/schemas/WidgetExpandable"
          },
          "avatar": {
            "description": "The avatar of the widget",
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar"
          },
          "feedback_mode": {
            "description": "The feedback mode of the widget",
            "default": "none",
            "$ref": "#/components/schemas/WidgetFeedbackMode"
          },
          "bg_color": {
            "description": "The background color of the widget",
            "type": "string",
            "default": "#ffffff",
            "title": "Bg Color"
          },
          "text_color": {
            "description": "The text color of the widget",
            "type": "string",
            "default": "#000000",
            "title": "Text Color"
          },
          "btn_color": {
            "description": "The button color of the widget",
            "type": "string",
            "default": "#000000",
            "title": "Btn Color"
          },
          "btn_text_color": {
            "description": "The button text color of the widget",
            "type": "string",
            "default": "#ffffff",
            "title": "Btn Text Color"
          },
          "border_color": {
            "description": "The border color of the widget",
            "type": "string",
            "default": "#e1e1e1",
            "title": "Border Color"
          },
          "focus_color": {
            "description": "The focus color of the widget",
            "type": "string",
            "default": "#000000",
            "title": "Focus Color"
          },
          "border_radius": {
            "description": "The border radius of the widget",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Border Radius"
          },
          "btn_radius": {
            "description": "The button radius of the widget",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Btn Radius"
          },
          "action_text": {
            "description": "The action text of the widget",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Text"
          },
          "start_call_text": {
            "description": "The start call text of the widget",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call Text"
          },
          "end_call_text": {
            "description": "The end call text of the widget",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call Text"
          },
          "expand_text": {
            "description": "The expand text of the widget",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand Text"
          },
          "listening_text": {
            "description": "The text to display when the agent is listening",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Text"
          },
          "speaking_text": {
            "description": "The text to display when the agent is speaking",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Text"
          },
          "shareable_page_text": {
            "description": "The text to display when sharing",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Page Text"
          },
          "shareable_page_show_terms": {
            "description": "Whether to show terms and conditions on the shareable page",
            "type": "boolean",
            "default": true,
            "title": "Shareable Page Show Terms"
          },
          "terms_text": {
            "description": "The text to display for terms and conditions",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Text"
          },
          "terms_html": {
            "description": "The HTML to display for terms and conditions",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Html"
          },
          "terms_key": {
            "description": "The key to display for terms and conditions",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Key"
          },
          "show_avatar_when_collapsed": {
            "description": "Whether to show the avatar when the widget is collapsed",
            "default": false,
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Avatar When Collapsed"
          },
          "disable_banner": {
            "description": "Whether to disable the banner",
            "type": "boolean",
            "default": false,
            "title": "Disable Banner"
          },
          "mic_muting_enabled": {
            "description": "Whether to enable mic muting",
            "type": "boolean",
            "default": false,
            "title": "Mic Muting Enabled"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "supported_language_overrides": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supported Language Overrides"
          }
        },
        "example": {
          "action_text": "Call",
          "bg_color": "#ffffff",
          "border_color": "#e1e1e1",
          "border_radius": 10,
          "btn_color": "#000000",
          "btn_radius": 10,
          "btn_text_color": "#ffffff",
          "disable_banner": false,
          "end_call_text": "End Call",
          "expand_text": "Expand",
          "expandable": "never",
          "feedback_mode": "none",
          "focus_color": "#000000",
          "listening_text": "Listening...",
          "mic_muting_enabled": false,
          "shareable_page_show_terms": true,
          "shareable_page_text": "Share",
          "speaking_text": "Speaking...",
          "start_call_text": "Start Call",
          "terms_html": "<p>Terms and Conditions</p>",
          "terms_key": "terms",
          "terms_text": "Terms and Conditions",
          "text_color": "#000000",
          "variant": "full"
        },
        "required": [
          "language"
        ],
        "title": "WidgetConfigResponseModel"
      },
      "WidgetExpandable": {
        "type": "string",
        "enum": [
          "never",
          "mobile",
          "desktop",
          "always"
        ],
        "title": "WidgetExpandable"
      },
      "WidgetFeedbackMode": {
        "type": "string",
        "enum": [
          "none",
          "during",
          "end"
        ],
        "title": "WidgetFeedbackMode"
      },
      "WorkspaceGroupByNameResponseModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the workspace group.",
            "type": "string",
            "title": "Name"
          },
          "id": {
            "description": "The ID of the workspace group.",
            "type": "string",
            "title": "Id"
          },
          "members_emails": {
            "description": "The emails of the members of the workspace group.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Members Emails"
          }
        },
        "example": {
          "id": "1234567890",
          "members_emails": [
            "john.doe@example.com",
            "jane.smith@example.com"
          ],
          "name": "My Workspace Group"
        },
        "required": [
          "name",
          "id",
          "members_emails"
        ],
        "title": "WorkspaceGroupByNameResponseModel"
      },
      "WorkspaceResourceType": {
        "description": "Resource types that can be shared in the workspace. The name always need to match the collection names",
        "type": "string",
        "enum": [
          "voice",
          "voice_collection",
          "pronunciation_dictionary",
          "dubbing",
          "project",
          "convai_agents",
          "convai_knowledge_base_documents",
          "convai_tools",
          "convai_settings",
          "convai_secrets",
          "music_latent",
          "convai_phone_numbers",
          "convai_batch_calls"
        ],
        "title": "WorkspaceResourceType"
      }
    }
  },
  "tags": [
    {
      "name": "text-to-speech",
      "description": "Convert text into lifelike speech using a voice of your choice."
    },
    {
      "name": "speech-to-speech",
      "description": "Create speech by combining the style and content of an audio file you upload with a voice of your choice."
    },
    {
      "name": "speech-to-text",
      "description": "Transcribe your audio files with detailed speaker annotations and precise timestamps using our cutting-edge model. Speech-to-text is currently in alpha and available to a select group of users. We plan to roll it out more broadly soon."
    },
    {
      "name": "forced-alignment",
      "description": "Force align an audio file to a text transcript to get precise word-level and character level timing information. Response is a list of characters with their start and end times as milliseconds elapsed from the start of the recording."
    },
    {
      "name": "models",
      "description": "Access the different models of the platform."
    },
    {
      "name": "voices",
      "description": "Access to voices created either by you or us."
    },
    {
      "name": "samples",
      "description": "Access to your samples. A sample is any audio file you attached to a voice. A voice can have one or more samples."
    },
    {
      "name": "speech-history",
      "description": "Accesses your speech history. Your speech history is a list of all your created audio including its metadata using our text-to-speech and speech-to-speech models."
    },
    {
      "name": "projects",
      "description": "Access, create and convert Projects programmatically, only specifically whitelisted accounts can access the Projects API. If you need access please contact our sales team."
    }
  ]
}