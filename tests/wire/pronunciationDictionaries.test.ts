/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { ElevenLabsClient } from "../../src/Client";

describe("PronunciationDictionaries", () => {
    test("create_from_rules", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            rules: [{ string_to_replace: "Thailand", alias: "tie-land", type: "alias" }],
            name: "My Dictionary",
        };
        const rawResponseBody = {
            id: "5xM3yVvZQKV0EfqQpLrJ",
            name: "My Dictionary",
            created_by: "ar6633Es2kUjFXBdR1iVc9ztsXl1",
            creation_time_unix: 1714156800,
            version_id: "5xM3yVvZQKV0EfqQpLrJ",
            version_rules_num: 5,
            description: "This is a test dictionary",
            permission_on_resource: "admin",
        };
        server
            .mockEndpoint()
            .post("/v1/pronunciation-dictionaries/add-from-rules")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.pronunciationDictionaries.createFromRules({
            rules: [
                {
                    type: "alias",
                    stringToReplace: "Thailand",
                    alias: "tie-land",
                },
            ],
            name: "My Dictionary",
        });
        expect(response).toEqual({
            id: "5xM3yVvZQKV0EfqQpLrJ",
            name: "My Dictionary",
            createdBy: "ar6633Es2kUjFXBdR1iVc9ztsXl1",
            creationTimeUnix: 1714156800,
            versionId: "5xM3yVvZQKV0EfqQpLrJ",
            versionRulesNum: 5,
            description: "This is a test dictionary",
            permissionOnResource: "admin",
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "5xM3yVvZQKV0EfqQpLrJ",
            latest_version_id: "5xM3yVvZQKV0EfqQpLr2",
            latest_version_rules_num: 2,
            name: "My Dictionary",
            permission_on_resource: "admin",
            created_by: "ar6633Es2kUjFXBdR1iVc9ztsXl1",
            creation_time_unix: 1714156800,
            archived_time_unix: 1,
            description: "This is a test dictionary",
        };
        server
            .mockEndpoint()
            .get("/v1/pronunciation-dictionaries/21m00Tcm4TlvDq8ikWAM")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.pronunciationDictionaries.get("21m00Tcm4TlvDq8ikWAM");
        expect(response).toEqual({
            id: "5xM3yVvZQKV0EfqQpLrJ",
            latestVersionId: "5xM3yVvZQKV0EfqQpLr2",
            latestVersionRulesNum: 2,
            name: "My Dictionary",
            permissionOnResource: "admin",
            createdBy: "ar6633Es2kUjFXBdR1iVc9ztsXl1",
            creationTimeUnix: 1714156800,
            archivedTimeUnix: 1,
            description: "This is a test dictionary",
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            id: "5xM3yVvZQKV0EfqQpLrJ",
            latest_version_id: "5xM3yVvZQKV0EfqQpLr2",
            latest_version_rules_num: 2,
            name: "My Dictionary",
            permission_on_resource: "admin",
            created_by: "ar6633Es2kUjFXBdR1iVc9ztsXl1",
            creation_time_unix: 1714156800,
            archived_time_unix: 1,
            description: "This is a test dictionary",
        };
        server
            .mockEndpoint()
            .patch("/v1/pronunciation-dictionaries/21m00Tcm4TlvDq8ikWAM")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.pronunciationDictionaries.update("21m00Tcm4TlvDq8ikWAM");
        expect(response).toEqual({
            id: "5xM3yVvZQKV0EfqQpLrJ",
            latestVersionId: "5xM3yVvZQKV0EfqQpLr2",
            latestVersionRulesNum: 2,
            name: "My Dictionary",
            permissionOnResource: "admin",
            createdBy: "ar6633Es2kUjFXBdR1iVc9ztsXl1",
            creationTimeUnix: 1714156800,
            archivedTimeUnix: 1,
            description: "This is a test dictionary",
        });
    });

    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            pronunciation_dictionaries: [
                {
                    id: "5xM3yVvZQKV0EfqQpLrJ",
                    latest_version_id: "5xM3yVvZQKV0EfqQpLr2",
                    latest_version_rules_num: 2,
                    name: "My Dictionary",
                    permission_on_resource: "admin",
                    created_by: "ar6633Es2kUjFXBdR1iVc9ztsXl1",
                    creation_time_unix: 1714156800,
                    archived_time_unix: 1,
                    description: "This is a test dictionary",
                },
            ],
            next_cursor: "5xM3yVvZQKV0EfqQpLr2",
            has_more: false,
        };
        server
            .mockEndpoint()
            .get("/v1/pronunciation-dictionaries")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.pronunciationDictionaries.list();
        expect(response).toEqual({
            pronunciationDictionaries: [
                {
                    id: "5xM3yVvZQKV0EfqQpLrJ",
                    latestVersionId: "5xM3yVvZQKV0EfqQpLr2",
                    latestVersionRulesNum: 2,
                    name: "My Dictionary",
                    permissionOnResource: "admin",
                    createdBy: "ar6633Es2kUjFXBdR1iVc9ztsXl1",
                    creationTimeUnix: 1714156800,
                    archivedTimeUnix: 1,
                    description: "This is a test dictionary",
                },
            ],
            nextCursor: "5xM3yVvZQKV0EfqQpLr2",
            hasMore: false,
        });
    });
});
