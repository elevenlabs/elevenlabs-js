// This file was auto-generated by Fern from our API Definition.

import { mockServerPool } from "../../../../mock-server/MockServerPool";
import { ElevenLabsClient } from "../../../../../src/Client";

describe("Snapshots", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            snapshots: [
                {
                    chapter_snapshot_id: "aw1NgEzBg83R7vgmiJt1",
                    project_id: "aw1NgEzBg83R7vgmiJt2",
                    chapter_id: "aw1NgEzBg83R7vgmiJt3",
                    created_at_unix: 1714204800,
                    name: "My Chapter Snapshot",
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/v1/studio/projects/21m00Tcm4TlvDq8ikWAM/chapters/21m00Tcm4TlvDq8ikWAM/snapshots")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.studio.projects.chapters.snapshots.list(
            "21m00Tcm4TlvDq8ikWAM",
            "21m00Tcm4TlvDq8ikWAM",
        );
        expect(response).toEqual({
            snapshots: [
                {
                    chapterSnapshotId: "aw1NgEzBg83R7vgmiJt1",
                    projectId: "aw1NgEzBg83R7vgmiJt2",
                    chapterId: "aw1NgEzBg83R7vgmiJt3",
                    createdAtUnix: 1714204800,
                    name: "My Chapter Snapshot",
                },
            ],
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            chapter_snapshot_id: "aw1NgEzBg83R7vgmiJt1",
            project_id: "aw1NgEzBg83R7vgmiJt2",
            chapter_id: "aw1NgEzBg83R7vgmiJt3",
            created_at_unix: 1714204800,
            name: "My Chapter Snapshot",
            character_alignments: [
                {
                    characters: ["characters"],
                    character_start_times_seconds: [1.1],
                    character_end_times_seconds: [1.1],
                },
            ],
        };
        server
            .mockEndpoint()
            .get(
                "/v1/studio/projects/21m00Tcm4TlvDq8ikWAM/chapters/21m00Tcm4TlvDq8ikWAM/snapshots/21m00Tcm4TlvDq8ikWAM",
            )
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.studio.projects.chapters.snapshots.get(
            "21m00Tcm4TlvDq8ikWAM",
            "21m00Tcm4TlvDq8ikWAM",
            "21m00Tcm4TlvDq8ikWAM",
        );
        expect(response).toEqual({
            chapterSnapshotId: "aw1NgEzBg83R7vgmiJt1",
            projectId: "aw1NgEzBg83R7vgmiJt2",
            chapterId: "aw1NgEzBg83R7vgmiJt3",
            createdAtUnix: 1714204800,
            name: "My Chapter Snapshot",
            characterAlignments: [
                {
                    characters: ["characters"],
                    characterStartTimesSeconds: [1.1],
                    characterEndTimesSeconds: [1.1],
                },
            ],
        });
    });
});
