// This file was auto-generated by Fern from our API Definition.

import { mockServerPool } from "../../../../../mock-server/MockServerPool";
import { ElevenLabsClient } from "../../../../../../src/Client";

describe("Audio", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { audio_base_64: "audio_base_64", media_type: "audio/mpeg", duration_secs: 5 };
        server
            .mockEndpoint()
            .get("/v1/voices/pvc/21m00Tcm4TlvDq8ikWAM/samples/VW7YKqPnjY4h39yTbx2L/speakers/VW7YKqPnjY4h39yTbx2L/audio")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.voices.pvc.samples.speakers.audio.get(
            "21m00Tcm4TlvDq8ikWAM",
            "VW7YKqPnjY4h39yTbx2L",
            "VW7YKqPnjY4h39yTbx2L",
        );
        expect(response).toEqual({
            audioBase64: "audio_base_64",
            mediaType: "audio/mpeg",
            durationSecs: 5,
        });
    });
});
