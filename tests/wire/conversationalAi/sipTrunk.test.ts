// This file was auto-generated by Fern from our API Definition.

import { mockServerPool } from "../../mock-server/MockServerPool";
import { ElevenLabsClient } from "../../../src/Client";

describe("SipTrunk", () => {
    test("outbound_call", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            agent_id: "agent_id",
            agent_phone_number_id: "agent_phone_number_id",
            to_number: "to_number",
        };
        const rawResponseBody = {
            success: true,
            message: "message",
            conversation_id: "conversation_id",
            sip_call_id: "sip_call_id",
        };
        server
            .mockEndpoint()
            .post("/v1/convai/sip-trunk/outbound-call")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.conversationalAi.sipTrunk.outboundCall({
            agentId: "agent_id",
            agentPhoneNumberId: "agent_phone_number_id",
            toNumber: "to_number",
        });
        expect(response).toEqual({
            success: true,
            message: "message",
            conversationId: "conversation_id",
            sipCallId: "sip_call_id",
        });
    });
});
