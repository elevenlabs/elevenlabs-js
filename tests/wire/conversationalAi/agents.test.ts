// This file was auto-generated by Fern from our API Definition.

import { mockServerPool } from "../../mock-server/MockServerPool";
import { ElevenLabsClient } from "../../../src/Client";

describe("Agents", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { conversation_config: {} };
        const rawResponseBody = { agent_id: "J3Pbu5gP6NNKBscdCdwB" };
        server
            .mockEndpoint()
            .post("/v1/convai/agents/create")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.conversationalAi.agents.create({
            conversationConfig: {},
        });
        expect(response).toEqual({
            agentId: "J3Pbu5gP6NNKBscdCdwB",
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            agent_id: "agent_7101k5zvyjhmfg983brhmhkd98n6",
            name: "My Agent",
            conversation_config: {
                asr: {
                    quality: "high",
                    provider: "elevenlabs",
                    user_input_audio_format: "pcm_16000",
                    keywords: ["hello", "world"],
                },
                turn: { turn_timeout: 7, silence_end_call_timeout: -1, mode: "turn" },
                tts: {
                    model_id: "eleven_turbo_v2",
                    voice_id: "cjVigY5qzO86Huf0OWal",
                    supported_voices: [
                        {
                            label: "label",
                            voice_id: "voice_id",
                            description: undefined,
                            language: undefined,
                            model_family: undefined,
                            optimize_streaming_latency: undefined,
                            stability: undefined,
                            speed: undefined,
                            similarity_boost: undefined,
                        },
                    ],
                    agent_output_audio_format: "pcm_16000",
                    optimize_streaming_latency: 3,
                    stability: 0.5,
                    speed: 1,
                    similarity_boost: 0.8,
                    pronunciation_dictionary_locators: [
                        { pronunciation_dictionary_id: "pronunciation_dictionary_id", version_id: undefined },
                    ],
                },
                conversation: { text_only: true, max_duration_seconds: 600, client_events: ["audio", "interruption"] },
                language_presets: {
                    key: {
                        overrides: {
                            tts: { voice_id: "cjVigY5qzO86Huf0OWal", stability: 0.5, speed: 1, similarity_boost: 0.8 },
                            conversation: undefined,
                            agent: {
                                first_message: "Hello, how can I help you today?",
                                language: "en",
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    native_mcp_server_ids: undefined,
                                },
                            },
                        },
                        first_message_translation: undefined,
                    },
                },
                vad: { background_voice_detection: false },
                agent: {
                    first_message: "Hello, how can I help you today?",
                    language: "en",
                    dynamic_variables: { dynamic_variable_placeholders: { user_name: "John Doe" } },
                    disable_first_message_interruptions: false,
                    prompt: {
                        prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                        llm: "gemini-2.0-flash-001",
                        reasoning_effort: undefined,
                        thinking_budget: undefined,
                        temperature: 0,
                        max_tokens: -1,
                        tool_ids: ["tool_ids"],
                        knowledge_base: [{ type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" }],
                        custom_llm: undefined,
                        ignore_default_personality: undefined,
                        timezone: undefined,
                    },
                },
            },
            metadata: { created_at_unix_secs: 1, updated_at_unix_secs: 1 },
            platform_settings: {
                evaluation: {
                    criteria: [
                        {
                            id: "1234567890",
                            name: "Customer satisfaction check",
                            conversation_goal_prompt:
                                "You are a helpful assistant that can answer questions about the topic of the conversation.",
                            use_knowledge_base: false,
                        },
                    ],
                },
                widget: {
                    variant: "tiny",
                    placement: "top-left",
                    expandable: "never",
                    avatar: { type: "orb", color_1: "#2792dc", color_2: "#9ce6e6" },
                    feedback_mode: "none",
                    bg_color: "bg_color",
                    text_color: "text_color",
                    btn_color: "btn_color",
                    btn_text_color: "btn_text_color",
                    border_color: "border_color",
                    focus_color: "focus_color",
                    border_radius: 1,
                    btn_radius: 1,
                    action_text: "action_text",
                    start_call_text: "start_call_text",
                    end_call_text: "end_call_text",
                    expand_text: "expand_text",
                    listening_text: "listening_text",
                    speaking_text: "speaking_text",
                    shareable_page_text: "shareable_page_text",
                    shareable_page_show_terms: true,
                    terms_text: "terms_text",
                    terms_html: "terms_html",
                    terms_key: "terms_key",
                    show_avatar_when_collapsed: true,
                    disable_banner: true,
                    override_link: "override_link",
                    mic_muting_enabled: true,
                    transcript_enabled: true,
                    text_input_enabled: true,
                    default_expanded: true,
                    always_expanded: true,
                    text_contents: {
                        main_label: undefined,
                        start_call: undefined,
                        start_chat: undefined,
                        new_call: undefined,
                        end_call: undefined,
                        mute_microphone: undefined,
                        change_language: undefined,
                        collapse: undefined,
                        expand: undefined,
                        copied: undefined,
                        accept_terms: undefined,
                        dismiss_terms: undefined,
                        listening_status: undefined,
                        speaking_status: undefined,
                        connecting_status: undefined,
                        chatting_status: undefined,
                        input_label: undefined,
                        input_placeholder: undefined,
                        input_placeholder_text_only: undefined,
                        input_placeholder_new_conversation: undefined,
                        user_ended_conversation: undefined,
                        agent_ended_conversation: undefined,
                        conversation_id: undefined,
                        error_occurred: undefined,
                        copy_id: undefined,
                    },
                    styles: {
                        base: undefined,
                        base_hover: undefined,
                        base_active: undefined,
                        base_border: undefined,
                        base_subtle: undefined,
                        base_primary: undefined,
                        base_error: undefined,
                        accent: undefined,
                        accent_hover: undefined,
                        accent_active: undefined,
                        accent_border: undefined,
                        accent_subtle: undefined,
                        accent_primary: undefined,
                        overlay_padding: undefined,
                        button_radius: undefined,
                        input_radius: undefined,
                        bubble_radius: undefined,
                        sheet_radius: undefined,
                        compact_sheet_radius: undefined,
                        dropdown_sheet_radius: undefined,
                    },
                    language_selector: false,
                    supports_text_only: true,
                    custom_avatar_path: "https://example.com/avatar.png",
                    language_presets: { key: { text_contents: undefined } },
                },
                data_collection: {
                    key: {
                        type: "string",
                        description: "My property",
                        enum: undefined,
                        dynamic_variable: "Dynamic variable",
                        constant_value: "Constant value",
                    },
                },
                overrides: {
                    custom_llm_extra_body: true,
                    enable_conversation_initiation_client_data_from_webhook: true,
                },
                workspace_overrides: {
                    conversation_initiation_client_data_webhook: {
                        url: "https://example.com/webhook",
                        request_headers: { "Content-Type": "application/json" },
                    },
                    webhooks: { post_call_webhook_id: undefined, send_audio: undefined },
                },
                testing: {
                    attached_tests: [
                        { test_id: "test_123", workflow_node_id: "node_abc" },
                        { test_id: "test_456", workflow_node_id: undefined },
                    ],
                },
                archived: true,
                auth: {
                    enable_auth: true,
                    allowlist: [{ hostname: "https://example.com" }],
                    shareable_token: "1234567890",
                },
                call_limits: { agent_concurrency_limit: -1, daily_limit: 100000, bursting_enabled: true },
                privacy: {
                    record_voice: true,
                    retention_days: -1,
                    delete_transcript_and_pii: false,
                    delete_audio: false,
                    apply_to_existing_conversations: false,
                    zero_retention_mode: false,
                },
                safety: { is_blocked_ivc: true, is_blocked_non_ivc: true, ignore_safety_evaluation: true },
            },
            phone_numbers: [
                {
                    provider: "sip_trunk",
                    phone_number: "+1987654321",
                    label: "Sales Team",
                    supports_inbound: true,
                    supports_outbound: true,
                    phone_number_id: "phone_456",
                    assigned_agent: { agent_id: "F3Pbu5gP6NNKBscdCdwB", agent_name: "My Agent" },
                    provider_config: {
                        address: "address",
                        transport: "auto",
                        media_encryption: "disabled",
                        has_auth_credentials: true,
                        username: undefined,
                    },
                    outbound_trunk: {
                        address: "address",
                        transport: "auto",
                        media_encryption: "disabled",
                        has_auth_credentials: true,
                        username: undefined,
                    },
                    inbound_trunk: {
                        allowed_addresses: ["allowed_addresses"],
                        allowed_numbers: undefined,
                        media_encryption: "disabled",
                        has_auth_credentials: true,
                        username: undefined,
                        remote_domains: undefined,
                    },
                    livekit_stack: "standard",
                },
            ],
            workflow: {
                edges: {
                    entry_to_tool_a: {
                        source: "entry_node",
                        target: "tool_node_a",
                        forward_condition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    start_to_entry: {
                        source: "start_node",
                        target: "entry_node",
                        forward_condition: { type: "unconditional", label: undefined },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_a_to_failure: {
                        source: "tool_node_a",
                        target: "failure_node",
                        forward_condition: { type: "result", label: undefined, successful: true },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_a_to_tool_b: {
                        source: "tool_node_a",
                        target: "tool_node_b",
                        forward_condition: { type: "result", label: undefined, successful: true },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_b_to_agent_transfer: {
                        source: "tool_node_b",
                        target: "success_transfer",
                        forward_condition: { type: "unconditional", label: undefined },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_b_to_conversation: {
                        source: "tool_node_b",
                        target: "success_conversation",
                        forward_condition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_b_to_end: {
                        source: "tool_node_b",
                        target: "success_end",
                        forward_condition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_b_to_phone: {
                        source: "tool_node_b",
                        target: "success_phone",
                        forward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                },
                nodes: {
                    entry_node: {
                        type: "override_agent",
                        conversation_config: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                user_input_audio_format: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: { turn_timeout: 7, silence_end_call_timeout: -1, mode: "turn" },
                            tts: {
                                model_id: "eleven_turbo_v2",
                                voice_id: "cjVigY5qzO86Huf0OWal",
                                supported_voices: undefined,
                                agent_output_audio_format: "pcm_16000",
                                optimize_streaming_latency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarity_boost: 0.8,
                                pronunciation_dictionary_locators: [
                                    {
                                        pronunciation_dictionary_id: "pronunciation_dictionary_id",
                                        version_id: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                text_only: undefined,
                                max_duration_seconds: 600,
                                client_events: ["audio", "interruption"],
                            },
                            language_presets: undefined,
                            vad: { background_voice_detection: false },
                            agent: {
                                first_message: "Hello, how can I help you today?",
                                language: "en",
                                dynamic_variables: { dynamic_variable_placeholders: { user_name: "John Doe" } },
                                disable_first_message_interruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoning_effort: undefined,
                                    thinking_budget: undefined,
                                    temperature: 0,
                                    max_tokens: -1,
                                    tool_ids: ["tool_ids"],
                                    built_in_tools: undefined,
                                    mcp_server_ids: undefined,
                                    native_mcp_server_ids: undefined,
                                    knowledge_base: [
                                        { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                                    ],
                                    custom_llm: undefined,
                                    ignore_default_personality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamic_variable: "user_name",
                                                    value_path: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expects_response: false,
                                            dynamic_variables: {
                                                dynamic_variable_placeholders: { user_name: "John Doe" },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additional_prompt: "additional_prompt",
                        additional_knowledge_base: [
                            { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                        ],
                        additional_tool_ids: ["additional_tool_ids"],
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        label: "label",
                    },
                    failure_node: {
                        type: "override_agent",
                        conversation_config: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                user_input_audio_format: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: { turn_timeout: 7, silence_end_call_timeout: -1, mode: "turn" },
                            tts: {
                                model_id: "eleven_turbo_v2",
                                voice_id: "cjVigY5qzO86Huf0OWal",
                                supported_voices: undefined,
                                agent_output_audio_format: "pcm_16000",
                                optimize_streaming_latency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarity_boost: 0.8,
                                pronunciation_dictionary_locators: [
                                    {
                                        pronunciation_dictionary_id: "pronunciation_dictionary_id",
                                        version_id: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                text_only: undefined,
                                max_duration_seconds: 600,
                                client_events: ["audio", "interruption"],
                            },
                            language_presets: undefined,
                            vad: { background_voice_detection: false },
                            agent: {
                                first_message: "Hello, how can I help you today?",
                                language: "en",
                                dynamic_variables: { dynamic_variable_placeholders: { user_name: "John Doe" } },
                                disable_first_message_interruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoning_effort: undefined,
                                    thinking_budget: undefined,
                                    temperature: 0,
                                    max_tokens: -1,
                                    tool_ids: ["tool_ids"],
                                    built_in_tools: undefined,
                                    mcp_server_ids: undefined,
                                    native_mcp_server_ids: undefined,
                                    knowledge_base: [
                                        { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                                    ],
                                    custom_llm: undefined,
                                    ignore_default_personality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamic_variable: "user_name",
                                                    value_path: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expects_response: false,
                                            dynamic_variables: {
                                                dynamic_variable_placeholders: { user_name: "John Doe" },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additional_prompt: "additional_prompt",
                        additional_knowledge_base: [
                            { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                        ],
                        additional_tool_ids: ["additional_tool_ids"],
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        label: "label",
                    },
                    start_node: { type: "start", position: { x: 1.1, y: 1.1 }, edge_order: ["edge_order"] },
                    success_conversation: {
                        type: "override_agent",
                        conversation_config: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                user_input_audio_format: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: { turn_timeout: 7, silence_end_call_timeout: -1, mode: "turn" },
                            tts: {
                                model_id: "eleven_turbo_v2",
                                voice_id: "cjVigY5qzO86Huf0OWal",
                                supported_voices: undefined,
                                agent_output_audio_format: "pcm_16000",
                                optimize_streaming_latency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarity_boost: 0.8,
                                pronunciation_dictionary_locators: [
                                    {
                                        pronunciation_dictionary_id: "pronunciation_dictionary_id",
                                        version_id: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                text_only: undefined,
                                max_duration_seconds: 600,
                                client_events: ["audio", "interruption"],
                            },
                            language_presets: undefined,
                            vad: { background_voice_detection: false },
                            agent: {
                                first_message: "Hello, how can I help you today?",
                                language: "en",
                                dynamic_variables: { dynamic_variable_placeholders: { user_name: "John Doe" } },
                                disable_first_message_interruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoning_effort: undefined,
                                    thinking_budget: undefined,
                                    temperature: 0,
                                    max_tokens: -1,
                                    tool_ids: ["tool_ids"],
                                    built_in_tools: undefined,
                                    mcp_server_ids: undefined,
                                    native_mcp_server_ids: undefined,
                                    knowledge_base: [
                                        { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                                    ],
                                    custom_llm: undefined,
                                    ignore_default_personality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamic_variable: "user_name",
                                                    value_path: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expects_response: false,
                                            dynamic_variables: {
                                                dynamic_variable_placeholders: { user_name: "John Doe" },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additional_prompt: "additional_prompt",
                        additional_knowledge_base: [
                            { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                        ],
                        additional_tool_ids: ["additional_tool_ids"],
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        label: "label",
                    },
                    success_end: { type: "end", position: { x: 1.1, y: 1.1 }, edge_order: ["edge_order"] },
                    success_phone: {
                        type: "phone_number",
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        transfer_destination: { type: "phone", phone_number: "phone_number" },
                        transfer_type: "conference",
                    },
                    success_transfer: {
                        type: "standalone_agent",
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        agent_id: "agent_id",
                        delay_ms: 1,
                        transfer_message: undefined,
                        enable_transferred_agent_first_message: true,
                    },
                    tool_node_a: {
                        type: "tool",
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        tools: [{ tool_id: "tool_id" }],
                    },
                    tool_node_b: {
                        type: "tool",
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        tools: [{ tool_id: "tool_id" }],
                    },
                },
            },
            access_info: {
                is_creator: true,
                creator_name: "John Doe",
                creator_email: "john.doe@example.com",
                role: "admin",
            },
            tags: ["tags"],
        };
        server
            .mockEndpoint()
            .get("/v1/convai/agents/agent_3701k3ttaq12ewp8b7qv5rfyszkz")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.conversationalAi.agents.get("agent_3701k3ttaq12ewp8b7qv5rfyszkz");
        expect(response).toEqual({
            agentId: "agent_7101k5zvyjhmfg983brhmhkd98n6",
            name: "My Agent",
            conversationConfig: {
                asr: {
                    quality: "high",
                    provider: "elevenlabs",
                    userInputAudioFormat: "pcm_16000",
                    keywords: ["hello", "world"],
                },
                turn: {
                    turnTimeout: 7,
                    silenceEndCallTimeout: -1,
                    mode: "turn",
                },
                tts: {
                    modelId: "eleven_turbo_v2",
                    voiceId: "cjVigY5qzO86Huf0OWal",
                    supportedVoices: [
                        {
                            label: "label",
                            voiceId: "voice_id",
                            description: undefined,
                            language: undefined,
                            modelFamily: undefined,
                            optimizeStreamingLatency: undefined,
                            stability: undefined,
                            speed: undefined,
                            similarityBoost: undefined,
                        },
                    ],
                    agentOutputAudioFormat: "pcm_16000",
                    optimizeStreamingLatency: 3,
                    stability: 0.5,
                    speed: 1,
                    similarityBoost: 0.8,
                    pronunciationDictionaryLocators: [
                        {
                            pronunciationDictionaryId: "pronunciation_dictionary_id",
                            versionId: undefined,
                        },
                    ],
                },
                conversation: {
                    textOnly: true,
                    maxDurationSeconds: 600,
                    clientEvents: ["audio", "interruption"],
                },
                languagePresets: {
                    key: {
                        overrides: {
                            tts: {
                                voiceId: "cjVigY5qzO86Huf0OWal",
                                stability: 0.5,
                                speed: 1,
                                similarityBoost: 0.8,
                            },
                            conversation: undefined,
                            agent: {
                                firstMessage: "Hello, how can I help you today?",
                                language: "en",
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    nativeMcpServerIds: undefined,
                                },
                            },
                        },
                        firstMessageTranslation: undefined,
                    },
                },
                vad: {
                    backgroundVoiceDetection: false,
                },
                agent: {
                    firstMessage: "Hello, how can I help you today?",
                    language: "en",
                    dynamicVariables: {
                        dynamicVariablePlaceholders: {
                            user_name: "John Doe",
                        },
                    },
                    disableFirstMessageInterruptions: false,
                    prompt: {
                        prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                        llm: "gemini-2.0-flash-001",
                        reasoningEffort: undefined,
                        thinkingBudget: undefined,
                        temperature: 0,
                        maxTokens: -1,
                        toolIds: ["tool_ids"],
                        knowledgeBase: [
                            {
                                type: "file",
                                name: "My Knowledge Base",
                                id: "123",
                                usageMode: "auto",
                            },
                        ],
                        customLlm: undefined,
                        ignoreDefaultPersonality: undefined,
                        timezone: undefined,
                    },
                },
            },
            metadata: {
                createdAtUnixSecs: 1,
                updatedAtUnixSecs: 1,
            },
            platformSettings: {
                evaluation: {
                    criteria: [
                        {
                            id: "1234567890",
                            name: "Customer satisfaction check",
                            conversationGoalPrompt:
                                "You are a helpful assistant that can answer questions about the topic of the conversation.",
                            useKnowledgeBase: false,
                        },
                    ],
                },
                widget: {
                    variant: "tiny",
                    placement: "top-left",
                    expandable: "never",
                    avatar: {
                        type: "orb",
                        color1: "#2792dc",
                        color2: "#9ce6e6",
                    },
                    feedbackMode: "none",
                    bgColor: "bg_color",
                    textColor: "text_color",
                    btnColor: "btn_color",
                    btnTextColor: "btn_text_color",
                    borderColor: "border_color",
                    focusColor: "focus_color",
                    borderRadius: 1,
                    btnRadius: 1,
                    actionText: "action_text",
                    startCallText: "start_call_text",
                    endCallText: "end_call_text",
                    expandText: "expand_text",
                    listeningText: "listening_text",
                    speakingText: "speaking_text",
                    shareablePageText: "shareable_page_text",
                    shareablePageShowTerms: true,
                    termsText: "terms_text",
                    termsHtml: "terms_html",
                    termsKey: "terms_key",
                    showAvatarWhenCollapsed: true,
                    disableBanner: true,
                    overrideLink: "override_link",
                    micMutingEnabled: true,
                    transcriptEnabled: true,
                    textInputEnabled: true,
                    defaultExpanded: true,
                    alwaysExpanded: true,
                    textContents: {
                        mainLabel: undefined,
                        startCall: undefined,
                        startChat: undefined,
                        newCall: undefined,
                        endCall: undefined,
                        muteMicrophone: undefined,
                        changeLanguage: undefined,
                        collapse: undefined,
                        expand: undefined,
                        copied: undefined,
                        acceptTerms: undefined,
                        dismissTerms: undefined,
                        listeningStatus: undefined,
                        speakingStatus: undefined,
                        connectingStatus: undefined,
                        chattingStatus: undefined,
                        inputLabel: undefined,
                        inputPlaceholder: undefined,
                        inputPlaceholderTextOnly: undefined,
                        inputPlaceholderNewConversation: undefined,
                        userEndedConversation: undefined,
                        agentEndedConversation: undefined,
                        conversationId: undefined,
                        errorOccurred: undefined,
                        copyId: undefined,
                    },
                    styles: {
                        base: undefined,
                        baseHover: undefined,
                        baseActive: undefined,
                        baseBorder: undefined,
                        baseSubtle: undefined,
                        basePrimary: undefined,
                        baseError: undefined,
                        accent: undefined,
                        accentHover: undefined,
                        accentActive: undefined,
                        accentBorder: undefined,
                        accentSubtle: undefined,
                        accentPrimary: undefined,
                        overlayPadding: undefined,
                        buttonRadius: undefined,
                        inputRadius: undefined,
                        bubbleRadius: undefined,
                        sheetRadius: undefined,
                        compactSheetRadius: undefined,
                        dropdownSheetRadius: undefined,
                    },
                    languageSelector: false,
                    supportsTextOnly: true,
                    customAvatarPath: "https://example.com/avatar.png",
                    languagePresets: {
                        key: {
                            textContents: undefined,
                        },
                    },
                },
                dataCollection: {
                    key: {
                        type: "string",
                        description: "My property",
                        enum: undefined,
                        dynamicVariable: "Dynamic variable",
                        constantValue: "Constant value",
                    },
                },
                overrides: {
                    customLlmExtraBody: true,
                    enableConversationInitiationClientDataFromWebhook: true,
                },
                workspaceOverrides: {
                    conversationInitiationClientDataWebhook: {
                        url: "https://example.com/webhook",
                        requestHeaders: {
                            "Content-Type": "application/json",
                        },
                    },
                    webhooks: {
                        postCallWebhookId: undefined,
                        sendAudio: undefined,
                    },
                },
                testing: {
                    attachedTests: [
                        {
                            testId: "test_123",
                            workflowNodeId: "node_abc",
                        },
                        {
                            testId: "test_456",
                            workflowNodeId: undefined,
                        },
                    ],
                },
                archived: true,
                auth: {
                    enableAuth: true,
                    allowlist: [
                        {
                            hostname: "https://example.com",
                        },
                    ],
                    shareableToken: "1234567890",
                },
                callLimits: {
                    agentConcurrencyLimit: -1,
                    dailyLimit: 100000,
                    burstingEnabled: true,
                },
                privacy: {
                    recordVoice: true,
                    retentionDays: -1,
                    deleteTranscriptAndPii: false,
                    deleteAudio: false,
                    applyToExistingConversations: false,
                    zeroRetentionMode: false,
                },
                safety: {
                    isBlockedIvc: true,
                    isBlockedNonIvc: true,
                    ignoreSafetyEvaluation: true,
                },
            },
            phoneNumbers: [
                {
                    provider: "sip_trunk",
                    phoneNumber: "+1987654321",
                    label: "Sales Team",
                    supportsInbound: true,
                    supportsOutbound: true,
                    phoneNumberId: "phone_456",
                    assignedAgent: {
                        agentId: "F3Pbu5gP6NNKBscdCdwB",
                        agentName: "My Agent",
                    },
                    providerConfig: {
                        address: "address",
                        transport: "auto",
                        mediaEncryption: "disabled",
                        hasAuthCredentials: true,
                        username: undefined,
                    },
                    outboundTrunk: {
                        address: "address",
                        transport: "auto",
                        mediaEncryption: "disabled",
                        hasAuthCredentials: true,
                        username: undefined,
                    },
                    inboundTrunk: {
                        allowedAddresses: ["allowed_addresses"],
                        allowedNumbers: undefined,
                        mediaEncryption: "disabled",
                        hasAuthCredentials: true,
                        username: undefined,
                        remoteDomains: undefined,
                    },
                    livekitStack: "standard",
                },
            ],
            workflow: {
                edges: {
                    entry_to_tool_a: {
                        source: "entry_node",
                        target: "tool_node_a",
                        forwardCondition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    start_to_entry: {
                        source: "start_node",
                        target: "entry_node",
                        forwardCondition: {
                            type: "unconditional",
                            label: undefined,
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_a_to_failure: {
                        source: "tool_node_a",
                        target: "failure_node",
                        forwardCondition: {
                            type: "result",
                            label: undefined,
                            successful: true,
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_a_to_tool_b: {
                        source: "tool_node_a",
                        target: "tool_node_b",
                        forwardCondition: {
                            type: "result",
                            label: undefined,
                            successful: true,
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_b_to_agent_transfer: {
                        source: "tool_node_b",
                        target: "success_transfer",
                        forwardCondition: {
                            type: "unconditional",
                            label: undefined,
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_b_to_conversation: {
                        source: "tool_node_b",
                        target: "success_conversation",
                        forwardCondition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_b_to_end: {
                        source: "tool_node_b",
                        target: "success_end",
                        forwardCondition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_b_to_phone: {
                        source: "tool_node_b",
                        target: "success_phone",
                        forwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                },
                nodes: {
                    entry_node: {
                        type: "override_agent",
                        conversationConfig: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                userInputAudioFormat: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: {
                                turnTimeout: 7,
                                silenceEndCallTimeout: -1,
                                mode: "turn",
                            },
                            tts: {
                                modelId: "eleven_turbo_v2",
                                voiceId: "cjVigY5qzO86Huf0OWal",
                                supportedVoices: undefined,
                                agentOutputAudioFormat: "pcm_16000",
                                optimizeStreamingLatency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarityBoost: 0.8,
                                pronunciationDictionaryLocators: [
                                    {
                                        pronunciationDictionaryId: "pronunciation_dictionary_id",
                                        versionId: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                textOnly: undefined,
                                maxDurationSeconds: 600,
                                clientEvents: ["audio", "interruption"],
                            },
                            languagePresets: undefined,
                            vad: {
                                backgroundVoiceDetection: false,
                            },
                            agent: {
                                firstMessage: "Hello, how can I help you today?",
                                language: "en",
                                dynamicVariables: {
                                    dynamicVariablePlaceholders: {
                                        user_name: "John Doe",
                                    },
                                },
                                disableFirstMessageInterruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoningEffort: undefined,
                                    thinkingBudget: undefined,
                                    temperature: 0,
                                    maxTokens: -1,
                                    toolIds: ["tool_ids"],
                                    builtInTools: undefined,
                                    mcpServerIds: undefined,
                                    nativeMcpServerIds: undefined,
                                    knowledgeBase: [
                                        {
                                            type: "file",
                                            name: "My Knowledge Base",
                                            id: "123",
                                            usageMode: "auto",
                                        },
                                    ],
                                    customLlm: undefined,
                                    ignoreDefaultPersonality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamicVariable: "user_name",
                                                    valuePath: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expectsResponse: false,
                                            dynamicVariables: {
                                                dynamicVariablePlaceholders: {
                                                    user_name: "John Doe",
                                                },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additionalPrompt: "additional_prompt",
                        additionalKnowledgeBase: [
                            {
                                type: "file",
                                name: "My Knowledge Base",
                                id: "123",
                                usageMode: "auto",
                            },
                        ],
                        additionalToolIds: ["additional_tool_ids"],
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        label: "label",
                    },
                    failure_node: {
                        type: "override_agent",
                        conversationConfig: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                userInputAudioFormat: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: {
                                turnTimeout: 7,
                                silenceEndCallTimeout: -1,
                                mode: "turn",
                            },
                            tts: {
                                modelId: "eleven_turbo_v2",
                                voiceId: "cjVigY5qzO86Huf0OWal",
                                supportedVoices: undefined,
                                agentOutputAudioFormat: "pcm_16000",
                                optimizeStreamingLatency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarityBoost: 0.8,
                                pronunciationDictionaryLocators: [
                                    {
                                        pronunciationDictionaryId: "pronunciation_dictionary_id",
                                        versionId: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                textOnly: undefined,
                                maxDurationSeconds: 600,
                                clientEvents: ["audio", "interruption"],
                            },
                            languagePresets: undefined,
                            vad: {
                                backgroundVoiceDetection: false,
                            },
                            agent: {
                                firstMessage: "Hello, how can I help you today?",
                                language: "en",
                                dynamicVariables: {
                                    dynamicVariablePlaceholders: {
                                        user_name: "John Doe",
                                    },
                                },
                                disableFirstMessageInterruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoningEffort: undefined,
                                    thinkingBudget: undefined,
                                    temperature: 0,
                                    maxTokens: -1,
                                    toolIds: ["tool_ids"],
                                    builtInTools: undefined,
                                    mcpServerIds: undefined,
                                    nativeMcpServerIds: undefined,
                                    knowledgeBase: [
                                        {
                                            type: "file",
                                            name: "My Knowledge Base",
                                            id: "123",
                                            usageMode: "auto",
                                        },
                                    ],
                                    customLlm: undefined,
                                    ignoreDefaultPersonality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamicVariable: "user_name",
                                                    valuePath: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expectsResponse: false,
                                            dynamicVariables: {
                                                dynamicVariablePlaceholders: {
                                                    user_name: "John Doe",
                                                },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additionalPrompt: "additional_prompt",
                        additionalKnowledgeBase: [
                            {
                                type: "file",
                                name: "My Knowledge Base",
                                id: "123",
                                usageMode: "auto",
                            },
                        ],
                        additionalToolIds: ["additional_tool_ids"],
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        label: "label",
                    },
                    start_node: {
                        type: "start",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                    },
                    success_conversation: {
                        type: "override_agent",
                        conversationConfig: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                userInputAudioFormat: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: {
                                turnTimeout: 7,
                                silenceEndCallTimeout: -1,
                                mode: "turn",
                            },
                            tts: {
                                modelId: "eleven_turbo_v2",
                                voiceId: "cjVigY5qzO86Huf0OWal",
                                supportedVoices: undefined,
                                agentOutputAudioFormat: "pcm_16000",
                                optimizeStreamingLatency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarityBoost: 0.8,
                                pronunciationDictionaryLocators: [
                                    {
                                        pronunciationDictionaryId: "pronunciation_dictionary_id",
                                        versionId: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                textOnly: undefined,
                                maxDurationSeconds: 600,
                                clientEvents: ["audio", "interruption"],
                            },
                            languagePresets: undefined,
                            vad: {
                                backgroundVoiceDetection: false,
                            },
                            agent: {
                                firstMessage: "Hello, how can I help you today?",
                                language: "en",
                                dynamicVariables: {
                                    dynamicVariablePlaceholders: {
                                        user_name: "John Doe",
                                    },
                                },
                                disableFirstMessageInterruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoningEffort: undefined,
                                    thinkingBudget: undefined,
                                    temperature: 0,
                                    maxTokens: -1,
                                    toolIds: ["tool_ids"],
                                    builtInTools: undefined,
                                    mcpServerIds: undefined,
                                    nativeMcpServerIds: undefined,
                                    knowledgeBase: [
                                        {
                                            type: "file",
                                            name: "My Knowledge Base",
                                            id: "123",
                                            usageMode: "auto",
                                        },
                                    ],
                                    customLlm: undefined,
                                    ignoreDefaultPersonality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamicVariable: "user_name",
                                                    valuePath: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expectsResponse: false,
                                            dynamicVariables: {
                                                dynamicVariablePlaceholders: {
                                                    user_name: "John Doe",
                                                },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additionalPrompt: "additional_prompt",
                        additionalKnowledgeBase: [
                            {
                                type: "file",
                                name: "My Knowledge Base",
                                id: "123",
                                usageMode: "auto",
                            },
                        ],
                        additionalToolIds: ["additional_tool_ids"],
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        label: "label",
                    },
                    success_end: {
                        type: "end",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                    },
                    success_phone: {
                        type: "phone_number",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        transferDestination: {
                            type: "phone",
                            phoneNumber: "phone_number",
                        },
                        transferType: "conference",
                    },
                    success_transfer: {
                        type: "standalone_agent",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        agentId: "agent_id",
                        delayMs: 1,
                        transferMessage: undefined,
                        enableTransferredAgentFirstMessage: true,
                    },
                    tool_node_a: {
                        type: "tool",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        tools: [
                            {
                                toolId: "tool_id",
                            },
                        ],
                    },
                    tool_node_b: {
                        type: "tool",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        tools: [
                            {
                                toolId: "tool_id",
                            },
                        ],
                    },
                },
            },
            accessInfo: {
                isCreator: true,
                creatorName: "John Doe",
                creatorEmail: "john.doe@example.com",
                role: "admin",
            },
            tags: ["tags"],
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });

        server
            .mockEndpoint()
            .delete("/v1/convai/agents/agent_3701k3ttaq12ewp8b7qv5rfyszkz")
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.conversationalAi.agents.delete("agent_3701k3ttaq12ewp8b7qv5rfyszkz");
        expect(response).toEqual(undefined);
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            agent_id: "agent_7101k5zvyjhmfg983brhmhkd98n6",
            name: "My Agent",
            conversation_config: {
                asr: {
                    quality: "high",
                    provider: "elevenlabs",
                    user_input_audio_format: "pcm_16000",
                    keywords: ["hello", "world"],
                },
                turn: { turn_timeout: 7, silence_end_call_timeout: -1, mode: "turn" },
                tts: {
                    model_id: "eleven_turbo_v2",
                    voice_id: "cjVigY5qzO86Huf0OWal",
                    supported_voices: [
                        {
                            label: "label",
                            voice_id: "voice_id",
                            description: undefined,
                            language: undefined,
                            model_family: undefined,
                            optimize_streaming_latency: undefined,
                            stability: undefined,
                            speed: undefined,
                            similarity_boost: undefined,
                        },
                    ],
                    agent_output_audio_format: "pcm_16000",
                    optimize_streaming_latency: 3,
                    stability: 0.5,
                    speed: 1,
                    similarity_boost: 0.8,
                    pronunciation_dictionary_locators: [
                        { pronunciation_dictionary_id: "pronunciation_dictionary_id", version_id: undefined },
                    ],
                },
                conversation: { text_only: true, max_duration_seconds: 600, client_events: ["audio", "interruption"] },
                language_presets: {
                    key: {
                        overrides: {
                            tts: { voice_id: "cjVigY5qzO86Huf0OWal", stability: 0.5, speed: 1, similarity_boost: 0.8 },
                            conversation: undefined,
                            agent: {
                                first_message: "Hello, how can I help you today?",
                                language: "en",
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    native_mcp_server_ids: undefined,
                                },
                            },
                        },
                        first_message_translation: undefined,
                    },
                },
                vad: { background_voice_detection: false },
                agent: {
                    first_message: "Hello, how can I help you today?",
                    language: "en",
                    dynamic_variables: { dynamic_variable_placeholders: { user_name: "John Doe" } },
                    disable_first_message_interruptions: false,
                    prompt: {
                        prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                        llm: "gemini-2.0-flash-001",
                        reasoning_effort: undefined,
                        thinking_budget: undefined,
                        temperature: 0,
                        max_tokens: -1,
                        tool_ids: ["tool_ids"],
                        knowledge_base: [{ type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" }],
                        custom_llm: undefined,
                        ignore_default_personality: undefined,
                        timezone: undefined,
                    },
                },
            },
            metadata: { created_at_unix_secs: 1, updated_at_unix_secs: 1 },
            platform_settings: {
                evaluation: {
                    criteria: [
                        {
                            id: "1234567890",
                            name: "Customer satisfaction check",
                            conversation_goal_prompt:
                                "You are a helpful assistant that can answer questions about the topic of the conversation.",
                            use_knowledge_base: false,
                        },
                    ],
                },
                widget: {
                    variant: "tiny",
                    placement: "top-left",
                    expandable: "never",
                    avatar: { type: "orb", color_1: "#2792dc", color_2: "#9ce6e6" },
                    feedback_mode: "none",
                    bg_color: "bg_color",
                    text_color: "text_color",
                    btn_color: "btn_color",
                    btn_text_color: "btn_text_color",
                    border_color: "border_color",
                    focus_color: "focus_color",
                    border_radius: 1,
                    btn_radius: 1,
                    action_text: "action_text",
                    start_call_text: "start_call_text",
                    end_call_text: "end_call_text",
                    expand_text: "expand_text",
                    listening_text: "listening_text",
                    speaking_text: "speaking_text",
                    shareable_page_text: "shareable_page_text",
                    shareable_page_show_terms: true,
                    terms_text: "terms_text",
                    terms_html: "terms_html",
                    terms_key: "terms_key",
                    show_avatar_when_collapsed: true,
                    disable_banner: true,
                    override_link: "override_link",
                    mic_muting_enabled: true,
                    transcript_enabled: true,
                    text_input_enabled: true,
                    default_expanded: true,
                    always_expanded: true,
                    text_contents: {
                        main_label: undefined,
                        start_call: undefined,
                        start_chat: undefined,
                        new_call: undefined,
                        end_call: undefined,
                        mute_microphone: undefined,
                        change_language: undefined,
                        collapse: undefined,
                        expand: undefined,
                        copied: undefined,
                        accept_terms: undefined,
                        dismiss_terms: undefined,
                        listening_status: undefined,
                        speaking_status: undefined,
                        connecting_status: undefined,
                        chatting_status: undefined,
                        input_label: undefined,
                        input_placeholder: undefined,
                        input_placeholder_text_only: undefined,
                        input_placeholder_new_conversation: undefined,
                        user_ended_conversation: undefined,
                        agent_ended_conversation: undefined,
                        conversation_id: undefined,
                        error_occurred: undefined,
                        copy_id: undefined,
                    },
                    styles: {
                        base: undefined,
                        base_hover: undefined,
                        base_active: undefined,
                        base_border: undefined,
                        base_subtle: undefined,
                        base_primary: undefined,
                        base_error: undefined,
                        accent: undefined,
                        accent_hover: undefined,
                        accent_active: undefined,
                        accent_border: undefined,
                        accent_subtle: undefined,
                        accent_primary: undefined,
                        overlay_padding: undefined,
                        button_radius: undefined,
                        input_radius: undefined,
                        bubble_radius: undefined,
                        sheet_radius: undefined,
                        compact_sheet_radius: undefined,
                        dropdown_sheet_radius: undefined,
                    },
                    language_selector: false,
                    supports_text_only: true,
                    custom_avatar_path: "https://example.com/avatar.png",
                    language_presets: { key: { text_contents: undefined } },
                },
                data_collection: {
                    key: {
                        type: "string",
                        description: "My property",
                        enum: undefined,
                        dynamic_variable: "Dynamic variable",
                        constant_value: "Constant value",
                    },
                },
                overrides: {
                    custom_llm_extra_body: true,
                    enable_conversation_initiation_client_data_from_webhook: true,
                },
                workspace_overrides: {
                    conversation_initiation_client_data_webhook: {
                        url: "https://example.com/webhook",
                        request_headers: { "Content-Type": "application/json" },
                    },
                    webhooks: { post_call_webhook_id: undefined, send_audio: undefined },
                },
                testing: {
                    attached_tests: [
                        { test_id: "test_123", workflow_node_id: "node_abc" },
                        { test_id: "test_456", workflow_node_id: undefined },
                    ],
                },
                archived: true,
                auth: {
                    enable_auth: true,
                    allowlist: [{ hostname: "https://example.com" }],
                    shareable_token: "1234567890",
                },
                call_limits: { agent_concurrency_limit: -1, daily_limit: 100000, bursting_enabled: true },
                privacy: {
                    record_voice: true,
                    retention_days: -1,
                    delete_transcript_and_pii: false,
                    delete_audio: false,
                    apply_to_existing_conversations: false,
                    zero_retention_mode: false,
                },
                safety: { is_blocked_ivc: true, is_blocked_non_ivc: true, ignore_safety_evaluation: true },
            },
            phone_numbers: [
                {
                    provider: "sip_trunk",
                    phone_number: "+1987654321",
                    label: "Sales Team",
                    supports_inbound: true,
                    supports_outbound: true,
                    phone_number_id: "phone_456",
                    assigned_agent: { agent_id: "F3Pbu5gP6NNKBscdCdwB", agent_name: "My Agent" },
                    provider_config: {
                        address: "address",
                        transport: "auto",
                        media_encryption: "disabled",
                        has_auth_credentials: true,
                        username: undefined,
                    },
                    outbound_trunk: {
                        address: "address",
                        transport: "auto",
                        media_encryption: "disabled",
                        has_auth_credentials: true,
                        username: undefined,
                    },
                    inbound_trunk: {
                        allowed_addresses: ["allowed_addresses"],
                        allowed_numbers: undefined,
                        media_encryption: "disabled",
                        has_auth_credentials: true,
                        username: undefined,
                        remote_domains: undefined,
                    },
                    livekit_stack: "standard",
                },
            ],
            workflow: {
                edges: {
                    entry_to_tool_a: {
                        source: "entry_node",
                        target: "tool_node_a",
                        forward_condition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    start_to_entry: {
                        source: "start_node",
                        target: "entry_node",
                        forward_condition: { type: "unconditional", label: undefined },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_a_to_failure: {
                        source: "tool_node_a",
                        target: "failure_node",
                        forward_condition: { type: "result", label: undefined, successful: true },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_a_to_tool_b: {
                        source: "tool_node_a",
                        target: "tool_node_b",
                        forward_condition: { type: "result", label: undefined, successful: true },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_b_to_agent_transfer: {
                        source: "tool_node_b",
                        target: "success_transfer",
                        forward_condition: { type: "unconditional", label: undefined },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_b_to_conversation: {
                        source: "tool_node_b",
                        target: "success_conversation",
                        forward_condition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_b_to_end: {
                        source: "tool_node_b",
                        target: "success_end",
                        forward_condition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                    tool_b_to_phone: {
                        source: "tool_node_b",
                        target: "success_phone",
                        forward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                        backward_condition: {
                            type: "expression",
                            label: undefined,
                            expression: { type: "and_operator", children: [{ type: "boolean_literal", value: true }] },
                        },
                    },
                },
                nodes: {
                    entry_node: {
                        type: "override_agent",
                        conversation_config: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                user_input_audio_format: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: { turn_timeout: 7, silence_end_call_timeout: -1, mode: "turn" },
                            tts: {
                                model_id: "eleven_turbo_v2",
                                voice_id: "cjVigY5qzO86Huf0OWal",
                                supported_voices: undefined,
                                agent_output_audio_format: "pcm_16000",
                                optimize_streaming_latency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarity_boost: 0.8,
                                pronunciation_dictionary_locators: [
                                    {
                                        pronunciation_dictionary_id: "pronunciation_dictionary_id",
                                        version_id: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                text_only: undefined,
                                max_duration_seconds: 600,
                                client_events: ["audio", "interruption"],
                            },
                            language_presets: undefined,
                            vad: { background_voice_detection: false },
                            agent: {
                                first_message: "Hello, how can I help you today?",
                                language: "en",
                                dynamic_variables: { dynamic_variable_placeholders: { user_name: "John Doe" } },
                                disable_first_message_interruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoning_effort: undefined,
                                    thinking_budget: undefined,
                                    temperature: 0,
                                    max_tokens: -1,
                                    tool_ids: ["tool_ids"],
                                    built_in_tools: undefined,
                                    mcp_server_ids: undefined,
                                    native_mcp_server_ids: undefined,
                                    knowledge_base: [
                                        { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                                    ],
                                    custom_llm: undefined,
                                    ignore_default_personality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamic_variable: "user_name",
                                                    value_path: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expects_response: false,
                                            dynamic_variables: {
                                                dynamic_variable_placeholders: { user_name: "John Doe" },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additional_prompt: "additional_prompt",
                        additional_knowledge_base: [
                            { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                        ],
                        additional_tool_ids: ["additional_tool_ids"],
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        label: "label",
                    },
                    failure_node: {
                        type: "override_agent",
                        conversation_config: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                user_input_audio_format: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: { turn_timeout: 7, silence_end_call_timeout: -1, mode: "turn" },
                            tts: {
                                model_id: "eleven_turbo_v2",
                                voice_id: "cjVigY5qzO86Huf0OWal",
                                supported_voices: undefined,
                                agent_output_audio_format: "pcm_16000",
                                optimize_streaming_latency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarity_boost: 0.8,
                                pronunciation_dictionary_locators: [
                                    {
                                        pronunciation_dictionary_id: "pronunciation_dictionary_id",
                                        version_id: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                text_only: undefined,
                                max_duration_seconds: 600,
                                client_events: ["audio", "interruption"],
                            },
                            language_presets: undefined,
                            vad: { background_voice_detection: false },
                            agent: {
                                first_message: "Hello, how can I help you today?",
                                language: "en",
                                dynamic_variables: { dynamic_variable_placeholders: { user_name: "John Doe" } },
                                disable_first_message_interruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoning_effort: undefined,
                                    thinking_budget: undefined,
                                    temperature: 0,
                                    max_tokens: -1,
                                    tool_ids: ["tool_ids"],
                                    built_in_tools: undefined,
                                    mcp_server_ids: undefined,
                                    native_mcp_server_ids: undefined,
                                    knowledge_base: [
                                        { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                                    ],
                                    custom_llm: undefined,
                                    ignore_default_personality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamic_variable: "user_name",
                                                    value_path: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expects_response: false,
                                            dynamic_variables: {
                                                dynamic_variable_placeholders: { user_name: "John Doe" },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additional_prompt: "additional_prompt",
                        additional_knowledge_base: [
                            { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                        ],
                        additional_tool_ids: ["additional_tool_ids"],
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        label: "label",
                    },
                    start_node: { type: "start", position: { x: 1.1, y: 1.1 }, edge_order: ["edge_order"] },
                    success_conversation: {
                        type: "override_agent",
                        conversation_config: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                user_input_audio_format: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: { turn_timeout: 7, silence_end_call_timeout: -1, mode: "turn" },
                            tts: {
                                model_id: "eleven_turbo_v2",
                                voice_id: "cjVigY5qzO86Huf0OWal",
                                supported_voices: undefined,
                                agent_output_audio_format: "pcm_16000",
                                optimize_streaming_latency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarity_boost: 0.8,
                                pronunciation_dictionary_locators: [
                                    {
                                        pronunciation_dictionary_id: "pronunciation_dictionary_id",
                                        version_id: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                text_only: undefined,
                                max_duration_seconds: 600,
                                client_events: ["audio", "interruption"],
                            },
                            language_presets: undefined,
                            vad: { background_voice_detection: false },
                            agent: {
                                first_message: "Hello, how can I help you today?",
                                language: "en",
                                dynamic_variables: { dynamic_variable_placeholders: { user_name: "John Doe" } },
                                disable_first_message_interruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoning_effort: undefined,
                                    thinking_budget: undefined,
                                    temperature: 0,
                                    max_tokens: -1,
                                    tool_ids: ["tool_ids"],
                                    built_in_tools: undefined,
                                    mcp_server_ids: undefined,
                                    native_mcp_server_ids: undefined,
                                    knowledge_base: [
                                        { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                                    ],
                                    custom_llm: undefined,
                                    ignore_default_personality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamic_variable: "user_name",
                                                    value_path: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expects_response: false,
                                            dynamic_variables: {
                                                dynamic_variable_placeholders: { user_name: "John Doe" },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additional_prompt: "additional_prompt",
                        additional_knowledge_base: [
                            { type: "file", name: "My Knowledge Base", id: "123", usage_mode: "auto" },
                        ],
                        additional_tool_ids: ["additional_tool_ids"],
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        label: "label",
                    },
                    success_end: { type: "end", position: { x: 1.1, y: 1.1 }, edge_order: ["edge_order"] },
                    success_phone: {
                        type: "phone_number",
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        transfer_destination: { type: "phone", phone_number: "phone_number" },
                        transfer_type: "conference",
                    },
                    success_transfer: {
                        type: "standalone_agent",
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        agent_id: "agent_id",
                        delay_ms: 1,
                        transfer_message: undefined,
                        enable_transferred_agent_first_message: true,
                    },
                    tool_node_a: {
                        type: "tool",
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        tools: [{ tool_id: "tool_id" }],
                    },
                    tool_node_b: {
                        type: "tool",
                        position: { x: 1.1, y: 1.1 },
                        edge_order: ["edge_order"],
                        tools: [{ tool_id: "tool_id" }],
                    },
                },
            },
            access_info: {
                is_creator: true,
                creator_name: "John Doe",
                creator_email: "john.doe@example.com",
                role: "admin",
            },
            tags: ["tags"],
        };
        server
            .mockEndpoint()
            .patch("/v1/convai/agents/agent_3701k3ttaq12ewp8b7qv5rfyszkz")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.conversationalAi.agents.update("agent_3701k3ttaq12ewp8b7qv5rfyszkz");
        expect(response).toEqual({
            agentId: "agent_7101k5zvyjhmfg983brhmhkd98n6",
            name: "My Agent",
            conversationConfig: {
                asr: {
                    quality: "high",
                    provider: "elevenlabs",
                    userInputAudioFormat: "pcm_16000",
                    keywords: ["hello", "world"],
                },
                turn: {
                    turnTimeout: 7,
                    silenceEndCallTimeout: -1,
                    mode: "turn",
                },
                tts: {
                    modelId: "eleven_turbo_v2",
                    voiceId: "cjVigY5qzO86Huf0OWal",
                    supportedVoices: [
                        {
                            label: "label",
                            voiceId: "voice_id",
                            description: undefined,
                            language: undefined,
                            modelFamily: undefined,
                            optimizeStreamingLatency: undefined,
                            stability: undefined,
                            speed: undefined,
                            similarityBoost: undefined,
                        },
                    ],
                    agentOutputAudioFormat: "pcm_16000",
                    optimizeStreamingLatency: 3,
                    stability: 0.5,
                    speed: 1,
                    similarityBoost: 0.8,
                    pronunciationDictionaryLocators: [
                        {
                            pronunciationDictionaryId: "pronunciation_dictionary_id",
                            versionId: undefined,
                        },
                    ],
                },
                conversation: {
                    textOnly: true,
                    maxDurationSeconds: 600,
                    clientEvents: ["audio", "interruption"],
                },
                languagePresets: {
                    key: {
                        overrides: {
                            tts: {
                                voiceId: "cjVigY5qzO86Huf0OWal",
                                stability: 0.5,
                                speed: 1,
                                similarityBoost: 0.8,
                            },
                            conversation: undefined,
                            agent: {
                                firstMessage: "Hello, how can I help you today?",
                                language: "en",
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    nativeMcpServerIds: undefined,
                                },
                            },
                        },
                        firstMessageTranslation: undefined,
                    },
                },
                vad: {
                    backgroundVoiceDetection: false,
                },
                agent: {
                    firstMessage: "Hello, how can I help you today?",
                    language: "en",
                    dynamicVariables: {
                        dynamicVariablePlaceholders: {
                            user_name: "John Doe",
                        },
                    },
                    disableFirstMessageInterruptions: false,
                    prompt: {
                        prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                        llm: "gemini-2.0-flash-001",
                        reasoningEffort: undefined,
                        thinkingBudget: undefined,
                        temperature: 0,
                        maxTokens: -1,
                        toolIds: ["tool_ids"],
                        knowledgeBase: [
                            {
                                type: "file",
                                name: "My Knowledge Base",
                                id: "123",
                                usageMode: "auto",
                            },
                        ],
                        customLlm: undefined,
                        ignoreDefaultPersonality: undefined,
                        timezone: undefined,
                    },
                },
            },
            metadata: {
                createdAtUnixSecs: 1,
                updatedAtUnixSecs: 1,
            },
            platformSettings: {
                evaluation: {
                    criteria: [
                        {
                            id: "1234567890",
                            name: "Customer satisfaction check",
                            conversationGoalPrompt:
                                "You are a helpful assistant that can answer questions about the topic of the conversation.",
                            useKnowledgeBase: false,
                        },
                    ],
                },
                widget: {
                    variant: "tiny",
                    placement: "top-left",
                    expandable: "never",
                    avatar: {
                        type: "orb",
                        color1: "#2792dc",
                        color2: "#9ce6e6",
                    },
                    feedbackMode: "none",
                    bgColor: "bg_color",
                    textColor: "text_color",
                    btnColor: "btn_color",
                    btnTextColor: "btn_text_color",
                    borderColor: "border_color",
                    focusColor: "focus_color",
                    borderRadius: 1,
                    btnRadius: 1,
                    actionText: "action_text",
                    startCallText: "start_call_text",
                    endCallText: "end_call_text",
                    expandText: "expand_text",
                    listeningText: "listening_text",
                    speakingText: "speaking_text",
                    shareablePageText: "shareable_page_text",
                    shareablePageShowTerms: true,
                    termsText: "terms_text",
                    termsHtml: "terms_html",
                    termsKey: "terms_key",
                    showAvatarWhenCollapsed: true,
                    disableBanner: true,
                    overrideLink: "override_link",
                    micMutingEnabled: true,
                    transcriptEnabled: true,
                    textInputEnabled: true,
                    defaultExpanded: true,
                    alwaysExpanded: true,
                    textContents: {
                        mainLabel: undefined,
                        startCall: undefined,
                        startChat: undefined,
                        newCall: undefined,
                        endCall: undefined,
                        muteMicrophone: undefined,
                        changeLanguage: undefined,
                        collapse: undefined,
                        expand: undefined,
                        copied: undefined,
                        acceptTerms: undefined,
                        dismissTerms: undefined,
                        listeningStatus: undefined,
                        speakingStatus: undefined,
                        connectingStatus: undefined,
                        chattingStatus: undefined,
                        inputLabel: undefined,
                        inputPlaceholder: undefined,
                        inputPlaceholderTextOnly: undefined,
                        inputPlaceholderNewConversation: undefined,
                        userEndedConversation: undefined,
                        agentEndedConversation: undefined,
                        conversationId: undefined,
                        errorOccurred: undefined,
                        copyId: undefined,
                    },
                    styles: {
                        base: undefined,
                        baseHover: undefined,
                        baseActive: undefined,
                        baseBorder: undefined,
                        baseSubtle: undefined,
                        basePrimary: undefined,
                        baseError: undefined,
                        accent: undefined,
                        accentHover: undefined,
                        accentActive: undefined,
                        accentBorder: undefined,
                        accentSubtle: undefined,
                        accentPrimary: undefined,
                        overlayPadding: undefined,
                        buttonRadius: undefined,
                        inputRadius: undefined,
                        bubbleRadius: undefined,
                        sheetRadius: undefined,
                        compactSheetRadius: undefined,
                        dropdownSheetRadius: undefined,
                    },
                    languageSelector: false,
                    supportsTextOnly: true,
                    customAvatarPath: "https://example.com/avatar.png",
                    languagePresets: {
                        key: {
                            textContents: undefined,
                        },
                    },
                },
                dataCollection: {
                    key: {
                        type: "string",
                        description: "My property",
                        enum: undefined,
                        dynamicVariable: "Dynamic variable",
                        constantValue: "Constant value",
                    },
                },
                overrides: {
                    customLlmExtraBody: true,
                    enableConversationInitiationClientDataFromWebhook: true,
                },
                workspaceOverrides: {
                    conversationInitiationClientDataWebhook: {
                        url: "https://example.com/webhook",
                        requestHeaders: {
                            "Content-Type": "application/json",
                        },
                    },
                    webhooks: {
                        postCallWebhookId: undefined,
                        sendAudio: undefined,
                    },
                },
                testing: {
                    attachedTests: [
                        {
                            testId: "test_123",
                            workflowNodeId: "node_abc",
                        },
                        {
                            testId: "test_456",
                            workflowNodeId: undefined,
                        },
                    ],
                },
                archived: true,
                auth: {
                    enableAuth: true,
                    allowlist: [
                        {
                            hostname: "https://example.com",
                        },
                    ],
                    shareableToken: "1234567890",
                },
                callLimits: {
                    agentConcurrencyLimit: -1,
                    dailyLimit: 100000,
                    burstingEnabled: true,
                },
                privacy: {
                    recordVoice: true,
                    retentionDays: -1,
                    deleteTranscriptAndPii: false,
                    deleteAudio: false,
                    applyToExistingConversations: false,
                    zeroRetentionMode: false,
                },
                safety: {
                    isBlockedIvc: true,
                    isBlockedNonIvc: true,
                    ignoreSafetyEvaluation: true,
                },
            },
            phoneNumbers: [
                {
                    provider: "sip_trunk",
                    phoneNumber: "+1987654321",
                    label: "Sales Team",
                    supportsInbound: true,
                    supportsOutbound: true,
                    phoneNumberId: "phone_456",
                    assignedAgent: {
                        agentId: "F3Pbu5gP6NNKBscdCdwB",
                        agentName: "My Agent",
                    },
                    providerConfig: {
                        address: "address",
                        transport: "auto",
                        mediaEncryption: "disabled",
                        hasAuthCredentials: true,
                        username: undefined,
                    },
                    outboundTrunk: {
                        address: "address",
                        transport: "auto",
                        mediaEncryption: "disabled",
                        hasAuthCredentials: true,
                        username: undefined,
                    },
                    inboundTrunk: {
                        allowedAddresses: ["allowed_addresses"],
                        allowedNumbers: undefined,
                        mediaEncryption: "disabled",
                        hasAuthCredentials: true,
                        username: undefined,
                        remoteDomains: undefined,
                    },
                    livekitStack: "standard",
                },
            ],
            workflow: {
                edges: {
                    entry_to_tool_a: {
                        source: "entry_node",
                        target: "tool_node_a",
                        forwardCondition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    start_to_entry: {
                        source: "start_node",
                        target: "entry_node",
                        forwardCondition: {
                            type: "unconditional",
                            label: undefined,
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_a_to_failure: {
                        source: "tool_node_a",
                        target: "failure_node",
                        forwardCondition: {
                            type: "result",
                            label: undefined,
                            successful: true,
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_a_to_tool_b: {
                        source: "tool_node_a",
                        target: "tool_node_b",
                        forwardCondition: {
                            type: "result",
                            label: undefined,
                            successful: true,
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_b_to_agent_transfer: {
                        source: "tool_node_b",
                        target: "success_transfer",
                        forwardCondition: {
                            type: "unconditional",
                            label: undefined,
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_b_to_conversation: {
                        source: "tool_node_b",
                        target: "success_conversation",
                        forwardCondition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_b_to_end: {
                        source: "tool_node_b",
                        target: "success_end",
                        forwardCondition: {
                            type: "llm",
                            label: undefined,
                            condition: "User's last message contains a question about our pricing.",
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                    tool_b_to_phone: {
                        source: "tool_node_b",
                        target: "success_phone",
                        forwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                        backwardCondition: {
                            type: "expression",
                            label: undefined,
                            expression: {
                                type: "and_operator",
                                children: [
                                    {
                                        type: "boolean_literal",
                                        value: true,
                                    },
                                ],
                            },
                        },
                    },
                },
                nodes: {
                    entry_node: {
                        type: "override_agent",
                        conversationConfig: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                userInputAudioFormat: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: {
                                turnTimeout: 7,
                                silenceEndCallTimeout: -1,
                                mode: "turn",
                            },
                            tts: {
                                modelId: "eleven_turbo_v2",
                                voiceId: "cjVigY5qzO86Huf0OWal",
                                supportedVoices: undefined,
                                agentOutputAudioFormat: "pcm_16000",
                                optimizeStreamingLatency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarityBoost: 0.8,
                                pronunciationDictionaryLocators: [
                                    {
                                        pronunciationDictionaryId: "pronunciation_dictionary_id",
                                        versionId: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                textOnly: undefined,
                                maxDurationSeconds: 600,
                                clientEvents: ["audio", "interruption"],
                            },
                            languagePresets: undefined,
                            vad: {
                                backgroundVoiceDetection: false,
                            },
                            agent: {
                                firstMessage: "Hello, how can I help you today?",
                                language: "en",
                                dynamicVariables: {
                                    dynamicVariablePlaceholders: {
                                        user_name: "John Doe",
                                    },
                                },
                                disableFirstMessageInterruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoningEffort: undefined,
                                    thinkingBudget: undefined,
                                    temperature: 0,
                                    maxTokens: -1,
                                    toolIds: ["tool_ids"],
                                    builtInTools: undefined,
                                    mcpServerIds: undefined,
                                    nativeMcpServerIds: undefined,
                                    knowledgeBase: [
                                        {
                                            type: "file",
                                            name: "My Knowledge Base",
                                            id: "123",
                                            usageMode: "auto",
                                        },
                                    ],
                                    customLlm: undefined,
                                    ignoreDefaultPersonality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamicVariable: "user_name",
                                                    valuePath: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expectsResponse: false,
                                            dynamicVariables: {
                                                dynamicVariablePlaceholders: {
                                                    user_name: "John Doe",
                                                },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additionalPrompt: "additional_prompt",
                        additionalKnowledgeBase: [
                            {
                                type: "file",
                                name: "My Knowledge Base",
                                id: "123",
                                usageMode: "auto",
                            },
                        ],
                        additionalToolIds: ["additional_tool_ids"],
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        label: "label",
                    },
                    failure_node: {
                        type: "override_agent",
                        conversationConfig: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                userInputAudioFormat: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: {
                                turnTimeout: 7,
                                silenceEndCallTimeout: -1,
                                mode: "turn",
                            },
                            tts: {
                                modelId: "eleven_turbo_v2",
                                voiceId: "cjVigY5qzO86Huf0OWal",
                                supportedVoices: undefined,
                                agentOutputAudioFormat: "pcm_16000",
                                optimizeStreamingLatency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarityBoost: 0.8,
                                pronunciationDictionaryLocators: [
                                    {
                                        pronunciationDictionaryId: "pronunciation_dictionary_id",
                                        versionId: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                textOnly: undefined,
                                maxDurationSeconds: 600,
                                clientEvents: ["audio", "interruption"],
                            },
                            languagePresets: undefined,
                            vad: {
                                backgroundVoiceDetection: false,
                            },
                            agent: {
                                firstMessage: "Hello, how can I help you today?",
                                language: "en",
                                dynamicVariables: {
                                    dynamicVariablePlaceholders: {
                                        user_name: "John Doe",
                                    },
                                },
                                disableFirstMessageInterruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoningEffort: undefined,
                                    thinkingBudget: undefined,
                                    temperature: 0,
                                    maxTokens: -1,
                                    toolIds: ["tool_ids"],
                                    builtInTools: undefined,
                                    mcpServerIds: undefined,
                                    nativeMcpServerIds: undefined,
                                    knowledgeBase: [
                                        {
                                            type: "file",
                                            name: "My Knowledge Base",
                                            id: "123",
                                            usageMode: "auto",
                                        },
                                    ],
                                    customLlm: undefined,
                                    ignoreDefaultPersonality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamicVariable: "user_name",
                                                    valuePath: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expectsResponse: false,
                                            dynamicVariables: {
                                                dynamicVariablePlaceholders: {
                                                    user_name: "John Doe",
                                                },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additionalPrompt: "additional_prompt",
                        additionalKnowledgeBase: [
                            {
                                type: "file",
                                name: "My Knowledge Base",
                                id: "123",
                                usageMode: "auto",
                            },
                        ],
                        additionalToolIds: ["additional_tool_ids"],
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        label: "label",
                    },
                    start_node: {
                        type: "start",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                    },
                    success_conversation: {
                        type: "override_agent",
                        conversationConfig: {
                            asr: {
                                quality: "high",
                                provider: "elevenlabs",
                                userInputAudioFormat: "pcm_16000",
                                keywords: ["hello", "world"],
                            },
                            turn: {
                                turnTimeout: 7,
                                silenceEndCallTimeout: -1,
                                mode: "turn",
                            },
                            tts: {
                                modelId: "eleven_turbo_v2",
                                voiceId: "cjVigY5qzO86Huf0OWal",
                                supportedVoices: undefined,
                                agentOutputAudioFormat: "pcm_16000",
                                optimizeStreamingLatency: 3,
                                stability: 0.5,
                                speed: 1,
                                similarityBoost: 0.8,
                                pronunciationDictionaryLocators: [
                                    {
                                        pronunciationDictionaryId: "pronunciation_dictionary_id",
                                        versionId: undefined,
                                    },
                                ],
                            },
                            conversation: {
                                textOnly: undefined,
                                maxDurationSeconds: 600,
                                clientEvents: ["audio", "interruption"],
                            },
                            languagePresets: undefined,
                            vad: {
                                backgroundVoiceDetection: false,
                            },
                            agent: {
                                firstMessage: "Hello, how can I help you today?",
                                language: "en",
                                dynamicVariables: {
                                    dynamicVariablePlaceholders: {
                                        user_name: "John Doe",
                                    },
                                },
                                disableFirstMessageInterruptions: false,
                                prompt: {
                                    prompt: "You are a helpful assistant that can answer questions about the topic of the conversation.",
                                    llm: "gemini-2.0-flash-001",
                                    reasoningEffort: undefined,
                                    thinkingBudget: undefined,
                                    temperature: 0,
                                    maxTokens: -1,
                                    toolIds: ["tool_ids"],
                                    builtInTools: undefined,
                                    mcpServerIds: undefined,
                                    nativeMcpServerIds: undefined,
                                    knowledgeBase: [
                                        {
                                            type: "file",
                                            name: "My Knowledge Base",
                                            id: "123",
                                            usageMode: "auto",
                                        },
                                    ],
                                    customLlm: undefined,
                                    ignoreDefaultPersonality: undefined,
                                    rag: undefined,
                                    timezone: undefined,
                                    tools: [
                                        {
                                            type: "client",
                                            name: "name",
                                            description: "description",
                                            assignments: [
                                                {
                                                    source: "response",
                                                    dynamicVariable: "user_name",
                                                    valuePath: "user.name",
                                                },
                                            ],
                                            parameters: undefined,
                                            expectsResponse: false,
                                            dynamicVariables: {
                                                dynamicVariablePlaceholders: {
                                                    user_name: "John Doe",
                                                },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                        additionalPrompt: "additional_prompt",
                        additionalKnowledgeBase: [
                            {
                                type: "file",
                                name: "My Knowledge Base",
                                id: "123",
                                usageMode: "auto",
                            },
                        ],
                        additionalToolIds: ["additional_tool_ids"],
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        label: "label",
                    },
                    success_end: {
                        type: "end",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                    },
                    success_phone: {
                        type: "phone_number",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        transferDestination: {
                            type: "phone",
                            phoneNumber: "phone_number",
                        },
                        transferType: "conference",
                    },
                    success_transfer: {
                        type: "standalone_agent",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        agentId: "agent_id",
                        delayMs: 1,
                        transferMessage: undefined,
                        enableTransferredAgentFirstMessage: true,
                    },
                    tool_node_a: {
                        type: "tool",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        tools: [
                            {
                                toolId: "tool_id",
                            },
                        ],
                    },
                    tool_node_b: {
                        type: "tool",
                        position: {
                            x: 1.1,
                            y: 1.1,
                        },
                        edgeOrder: ["edge_order"],
                        tools: [
                            {
                                toolId: "tool_id",
                            },
                        ],
                    },
                },
            },
            accessInfo: {
                isCreator: true,
                creatorName: "John Doe",
                creatorEmail: "john.doe@example.com",
                role: "admin",
            },
            tags: ["tags"],
        });
    });

    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            agents: [
                {
                    agent_id: "J3Pbu5gP6NNKBscdCdwB",
                    name: "My Agent",
                    tags: ["Customer Support", "Technical Help", "Eleven"],
                    created_at_unix_secs: 1716153600,
                    access_info: {
                        is_creator: true,
                        creator_name: "John Doe",
                        creator_email: "john@example.com",
                        role: "admin",
                    },
                    last_call_time_unix_secs: 1,
                    archived: false,
                },
            ],
            next_cursor: "123",
            has_more: false,
        };
        server.mockEndpoint().get("/v1/convai/agents").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.conversationalAi.agents.list({
            pageSize: 1,
            search: "search",
            archived: true,
            sortDirection: "asc",
            sortBy: "name",
            cursor: "cursor",
        });
        expect(response).toEqual({
            agents: [
                {
                    agentId: "J3Pbu5gP6NNKBscdCdwB",
                    name: "My Agent",
                    tags: ["Customer Support", "Technical Help", "Eleven"],
                    createdAtUnixSecs: 1716153600,
                    accessInfo: {
                        isCreator: true,
                        creatorName: "John Doe",
                        creatorEmail: "john@example.com",
                        role: "admin",
                    },
                    lastCallTimeUnixSecs: 1,
                    archived: false,
                },
            ],
            nextCursor: "123",
            hasMore: false,
        });
    });

    test("duplicate", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = { agent_id: "J3Pbu5gP6NNKBscdCdwB" };
        server
            .mockEndpoint()
            .post("/v1/convai/agents/agent_3701k3ttaq12ewp8b7qv5rfyszkz/duplicate")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.conversationalAi.agents.duplicate("agent_3701k3ttaq12ewp8b7qv5rfyszkz");
        expect(response).toEqual({
            agentId: "J3Pbu5gP6NNKBscdCdwB",
        });
    });

    test("simulate_conversation", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            simulation_specification: {
                simulated_user_config: {
                    first_message: "Hello, how can I help you today?",
                    language: "en",
                    disable_first_message_interruptions: false,
                },
            },
        };
        const rawResponseBody = {
            simulated_conversation: [
                {
                    role: "user",
                    agent_metadata: { agent_id: "agent_id", workflow_node_id: undefined },
                    message: "message",
                    multivoice_message: {
                        parts: [{ text: "text", voice_label: undefined, time_in_call_secs: undefined }],
                    },
                    tool_calls: [
                        {
                            type: undefined,
                            request_id: "request_id",
                            tool_name: "tool_name",
                            params_as_json: "params_as_json",
                            tool_has_been_called: true,
                            tool_details: undefined,
                        },
                    ],
                    tool_results: [
                        {
                            request_id: "request_id",
                            tool_name: "tool_name",
                            result_value: "result_value",
                            is_error: true,
                            tool_has_been_called: true,
                            type: undefined,
                        },
                    ],
                    feedback: { score: "like", time_in_call_secs: 1 },
                    llm_override: "llm_override",
                    time_in_call_secs: 1,
                    conversation_turn_metrics: {},
                    rag_retrieval_info: {
                        chunks: [{ document_id: "document_id", chunk_id: "chunk_id", vector_distance: 1.1 }],
                        embedding_model: "e5_mistral_7b_instruct",
                        retrieval_query: "retrieval_query",
                        rag_latency_secs: 1.1,
                    },
                    llm_usage: {},
                    interrupted: true,
                    original_message: "original_message",
                    source_medium: "audio",
                },
            ],
            analysis: {
                evaluation_criteria_results: {
                    key: { criteria_id: "criteria_id", result: "success", rationale: "rationale" },
                },
                data_collection_results: {
                    key: {
                        data_collection_id: "data_collection_id",
                        json_schema: {
                            type: "string",
                            description: "My property",
                            enum: undefined,
                            dynamic_variable: "Dynamic variable",
                            constant_value: "Constant value",
                        },
                        rationale: "rationale",
                    },
                },
                call_successful: "success",
                transcript_summary: "transcript_summary",
                call_summary_title: "call_summary_title",
            },
        };
        server
            .mockEndpoint()
            .post("/v1/convai/agents/agent_3701k3ttaq12ewp8b7qv5rfyszkz/simulate-conversation")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.conversationalAi.agents.simulateConversation(
            "agent_3701k3ttaq12ewp8b7qv5rfyszkz",
            {
                simulationSpecification: {
                    simulatedUserConfig: {
                        firstMessage: "Hello, how can I help you today?",
                        language: "en",
                        disableFirstMessageInterruptions: false,
                    },
                },
            },
        );
        expect(response).toEqual({
            simulatedConversation: [
                {
                    role: "user",
                    agentMetadata: {
                        agentId: "agent_id",
                        workflowNodeId: undefined,
                    },
                    message: "message",
                    multivoiceMessage: {
                        parts: [
                            {
                                text: "text",
                                voiceLabel: undefined,
                                timeInCallSecs: undefined,
                            },
                        ],
                    },
                    toolCalls: [
                        {
                            type: undefined,
                            requestId: "request_id",
                            toolName: "tool_name",
                            paramsAsJson: "params_as_json",
                            toolHasBeenCalled: true,
                            toolDetails: undefined,
                        },
                    ],
                    toolResults: [
                        {
                            requestId: "request_id",
                            toolName: "tool_name",
                            resultValue: "result_value",
                            isError: true,
                            toolHasBeenCalled: true,
                            type: undefined,
                        },
                    ],
                    feedback: {
                        score: "like",
                        timeInCallSecs: 1,
                    },
                    llmOverride: "llm_override",
                    timeInCallSecs: 1,
                    conversationTurnMetrics: {},
                    ragRetrievalInfo: {
                        chunks: [
                            {
                                documentId: "document_id",
                                chunkId: "chunk_id",
                                vectorDistance: 1.1,
                            },
                        ],
                        embeddingModel: "e5_mistral_7b_instruct",
                        retrievalQuery: "retrieval_query",
                        ragLatencySecs: 1.1,
                    },
                    llmUsage: {},
                    interrupted: true,
                    originalMessage: "original_message",
                    sourceMedium: "audio",
                },
            ],
            analysis: {
                evaluationCriteriaResults: {
                    key: {
                        criteriaId: "criteria_id",
                        result: "success",
                        rationale: "rationale",
                    },
                },
                dataCollectionResults: {
                    key: {
                        dataCollectionId: "data_collection_id",
                        jsonSchema: {
                            type: "string",
                            description: "My property",
                            enum: undefined,
                            dynamicVariable: "Dynamic variable",
                            constantValue: "Constant value",
                        },
                        rationale: "rationale",
                    },
                },
                callSuccessful: "success",
                transcriptSummary: "transcript_summary",
                callSummaryTitle: "call_summary_title",
            },
        });
    });

    test("simulate_conversation_stream", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            simulation_specification: {
                simulated_user_config: {
                    first_message: "Hello, how can I help you today?",
                    language: "en",
                    disable_first_message_interruptions: false,
                },
            },
        };

        server
            .mockEndpoint()
            .post("/v1/convai/agents/agent_3701k3ttaq12ewp8b7qv5rfyszkz/simulate-conversation/stream")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.conversationalAi.agents.simulateConversationStream(
            "agent_3701k3ttaq12ewp8b7qv5rfyszkz",
            {
                simulationSpecification: {
                    simulatedUserConfig: {
                        firstMessage: "Hello, how can I help you today?",
                        language: "en",
                        disableFirstMessageInterruptions: false,
                    },
                },
            },
        );
        expect(response).toEqual(undefined);
    });

    test("run_tests", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { tests: [{ test_id: "test_id" }] };
        const rawResponseBody = {
            id: "id",
            agent_id: "agent_id",
            created_at: 1,
            test_runs: [
                {
                    test_run_id: "test_run_id",
                    test_info: {
                        chat_history: [
                            {
                                role: "user",
                                agent_metadata: undefined,
                                message: undefined,
                                multivoice_message: undefined,
                                feedback: undefined,
                                llm_override: undefined,
                                time_in_call_secs: 1,
                                conversation_turn_metrics: undefined,
                                rag_retrieval_info: undefined,
                                llm_usage: undefined,
                                original_message: undefined,
                                source_medium: undefined,
                            },
                        ],
                        success_condition: "success_condition",
                        success_examples: [{ response: "response", type: "success" }],
                        failure_examples: [{ response: "response", type: "failure" }],
                        tool_call_parameters: undefined,
                        from_conversation_metadata: undefined,
                    },
                    test_invocation_id: "test_invocation_id",
                    agent_id: "agent_id",
                    workflow_node_id: "workflow_node_id",
                    status: "pending",
                    agent_responses: [
                        {
                            role: "user",
                            agent_metadata: undefined,
                            message: undefined,
                            multivoice_message: undefined,
                            feedback: undefined,
                            llm_override: undefined,
                            time_in_call_secs: 1,
                            conversation_turn_metrics: undefined,
                            rag_retrieval_info: undefined,
                            llm_usage: undefined,
                            original_message: undefined,
                            source_medium: undefined,
                        },
                    ],
                    test_id: "test_id",
                    test_name: "test_name",
                    condition_result: { result: "success", rationale: undefined },
                    last_updated_at_unix: 1,
                    metadata: {
                        workspace_id: "workspace_id",
                        test_name: "test_name",
                        ran_by_user_email: "ran_by_user_email",
                    },
                },
            ],
        };
        server
            .mockEndpoint()
            .post("/v1/convai/agents/agent_3701k3ttaq12ewp8b7qv5rfyszkz/run-tests")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.conversationalAi.agents.runTests("agent_3701k3ttaq12ewp8b7qv5rfyszkz", {
            tests: [
                {
                    testId: "test_id",
                },
            ],
        });
        expect(response).toEqual({
            id: "id",
            agentId: "agent_id",
            createdAt: 1,
            testRuns: [
                {
                    testRunId: "test_run_id",
                    testInfo: {
                        chatHistory: [
                            {
                                role: "user",
                                agentMetadata: undefined,
                                message: undefined,
                                multivoiceMessage: undefined,
                                feedback: undefined,
                                llmOverride: undefined,
                                timeInCallSecs: 1,
                                conversationTurnMetrics: undefined,
                                ragRetrievalInfo: undefined,
                                llmUsage: undefined,
                                originalMessage: undefined,
                                sourceMedium: undefined,
                            },
                        ],
                        successCondition: "success_condition",
                        successExamples: [
                            {
                                response: "response",
                                type: "success",
                            },
                        ],
                        failureExamples: [
                            {
                                response: "response",
                                type: "failure",
                            },
                        ],
                        toolCallParameters: undefined,
                        fromConversationMetadata: undefined,
                    },
                    testInvocationId: "test_invocation_id",
                    agentId: "agent_id",
                    workflowNodeId: "workflow_node_id",
                    status: "pending",
                    agentResponses: [
                        {
                            role: "user",
                            agentMetadata: undefined,
                            message: undefined,
                            multivoiceMessage: undefined,
                            feedback: undefined,
                            llmOverride: undefined,
                            timeInCallSecs: 1,
                            conversationTurnMetrics: undefined,
                            ragRetrievalInfo: undefined,
                            llmUsage: undefined,
                            originalMessage: undefined,
                            sourceMedium: undefined,
                        },
                    ],
                    testId: "test_id",
                    testName: "test_name",
                    conditionResult: {
                        result: "success",
                        rationale: undefined,
                    },
                    lastUpdatedAtUnix: 1,
                    metadata: {
                        workspaceId: "workspace_id",
                        testName: "test_name",
                        ranByUserEmail: "ran_by_user_email",
                    },
                },
            ],
        });
    });
});
